{"version":3,"sources":["webpack:///./api_auth.js","webpack:///./src/lib/encoder.js"],"names":["api_auth","headers","url","exports","_class","config","classCallCheck_default","this","bitRate","sampleRate","dataBuffer","encoder","Mp3Encoder","X","slice","length","arrayBuffer","samples","_convertBuffer","remaining","i","left","subarray","buffer","encodeBuffer","push","Int8Array","flush","blob","Blob","type","id","Date","now","URL","createObjectURL","input","output","s","Math","max","min","data","Float32Array","out","Int16Array","_floatTo16BitPCM"],"mappings":"uCASAA,UACAC,WAEAC,IAAA,qCAKAC,EAAAH,sLCdE,SAAAI,EAAYC,GAAQC,IAAAC,KAAAH,GAClBG,KAAKC,QAAaH,EAAOG,SAAW,GACpCD,KAAKE,WAAaJ,EAAOI,YAAc,MACvCF,KAAKG,cACLH,KAAKI,QAAa,IAAIC,aAAW,EAAGL,KAAKE,WAAYF,KAAKC,oDAG9CK,GAEZN,KAAKG,WAAaH,KAAKG,WAAWI,MAAMP,KAAKG,WAAWK,OAASF,kCAG5DG,GAKL,IAJA,IACMC,EAAaV,KAAKW,eAAeF,GACnCG,EAAeF,EAAQF,OAElBK,EAAI,EAAGD,GAAa,EAAGC,GAJb,KAI8B,CAC/C,IAAMC,EAAOJ,EAAQK,SAASF,EAAGA,EALhB,MAMXG,EAAShB,KAAKI,QAAQa,aAAaH,GACzCd,KAAKG,WAAWe,KAAK,IAAIC,UAAUH,IACnCJ,GARiB,uCAanBZ,KAAKG,WAAWe,KAAKlB,KAAKI,QAAQgB,SAClC,IAAMC,EAAO,IAAIC,KAAKtB,KAAKG,YAAcoB,KAAM,cAG/C,OAFAvB,KAAKG,eAGHqB,GAAQC,KAAKC,MACbL,KAAQA,EACR1B,IAAQgC,IAAIC,gBAAgBP,6CAIfQ,EAAOC,GACtB,IAAK,IAAIjB,EAAI,EAAGA,EAAIgB,EAAMrB,OAAQK,IAAK,CACrC,IAAMkB,EAAIC,KAAKC,KAAK,EAAGD,KAAKE,IAAI,EAAGL,EAAMhB,KACzCiB,EAAOjB,GAAMkB,EAAI,EAAQ,MAAJA,EAAiB,MAAJA,0CAIvBtB,GACb,IAAM0B,EAAO,IAAIC,aAAa3B,GACxB4B,EAAM,IAAIC,WAAW7B,EAAYD,QAEvC,OADAR,KAAKuC,iBAAiBJ,EAAME,GACrBA","file":"static/js/app.c8cd.js","sourcesContent":["\nif (process.env.NODE_ENV === 'development'){\n\tapi_auth = {\n\t\theaders:{\n\t\t\tAuthorization: \"Token 2ccb093fccac9ab4346b970183ff6ae6d9fc0030\",\n\t\t},\n\t\turl: 'https://koreromaori.io/api/transcription/?method=stream'\n\t}\t\t\n} else {\n\tapi_auth = {\n\t\theaders:{\n\t\t},\n\t\turl: '/api/transcription/?method=stream'\n\t}\t\n}\n\n\nexports.api_auth = api_auth\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./api_auth.js\n// module id = BLBT\n// module chunks = 1","import { Mp3Encoder } from 'lamejs'\n\nexport default class {\n  constructor(config) {\n    this.bitRate    = config.bitRate || 96\n    this.sampleRate = config.sampleRate || 44100\n    this.dataBuffer = []\n    this.encoder    = new Mp3Encoder(1, this.sampleRate, this.bitRate)\n  }\n\n  flushPrevious(X){\n    // This clears X items in the buffer\n    this.dataBuffer = this.dataBuffer.slice(this.dataBuffer.length - X)\n  }\n\n  encode(arrayBuffer) {\n    const maxSamples = 1152\n    const samples    = this._convertBuffer(arrayBuffer)\n    let remaining    = samples.length\n\n    for (let i = 0; remaining >= 0; i += maxSamples) {\n      const left = samples.subarray(i, i + maxSamples)\n      const buffer = this.encoder.encodeBuffer(left)\n      this.dataBuffer.push(new Int8Array(buffer))\n      remaining -= maxSamples\n    }\n  }\n\n  finish() {\n    this.dataBuffer.push(this.encoder.flush())\n    const blob = new Blob(this.dataBuffer, { type: 'audio/mp3' })\n    this.dataBuffer = []\n\n    return {\n      id    : Date.now(),\n      blob  : blob,\n      url   : URL.createObjectURL(blob)\n    }\n  }\n\n  _floatTo16BitPCM(input, output) {\n    for (let i = 0; i < input.length; i++) {\n      const s = Math.max(-1, Math.min(1, input[i]))\n      output[i] = (s < 0 ? s * 0x8000 : s * 0x7FFF)\n    }\n  }\n\n  _convertBuffer(arrayBuffer) {\n    const data = new Float32Array(arrayBuffer)\n    const out = new Int16Array(arrayBuffer.length)\n    this._floatTo16BitPCM(data, out)\n    return out\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/encoder.js"],"sourceRoot":""}