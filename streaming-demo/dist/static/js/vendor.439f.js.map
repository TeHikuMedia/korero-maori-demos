{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/lamejs/src/js/Encoder.js","webpack:///./node_modules/lamejs/src/js/ReplayGain.js","webpack:///./node_modules/lamejs/src/js/GrInfo.js","webpack:///./node_modules/axios/node_modules/is-buffer/index.js","webpack:///./node_modules/lamejs/src/js/Takehiro.js","webpack:///./node_modules/lamejs/src/js/III_psy_ratio.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/lamejs/src/js/LameGlobalFlags.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/lamejs/src/js/VBRQuantize.js","webpack:///./node_modules/babel-runtime/core-js/object/define-property.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/lamejs/src/js/VBRTag.js","webpack:///./node_modules/lamejs/src/js/MeanBits.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/lamejs/src/js/Quantize.js","webpack:///./node_modules/lamejs/src/js/FFT.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/lamejs/src/js/Version.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/lamejs/src/js/Tables.js","webpack:///./node_modules/vue-custom-element/dist/vue-custom-element.esm.js","webpack:///./node_modules/lamejs/src/js/III_psy_xmin.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/lamejs/src/js/common.js","webpack:///./node_modules/lamejs/src/js/LameInternalFlags.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/lamejs/src/js/CalcNoiseResult.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/lamejs/src/js/GainAnalysis.js","webpack:///./node_modules/vue-audio-recorder/src/lib/utils.js","webpack:///./node_modules/lamejs/src/js/MPEGMode.js","webpack:///./node_modules/lamejs/src/js/ATH.js","webpack:///./node_modules/babel-runtime/helpers/classCallCheck.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/lamejs/src/js/ScaleFac.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/lamejs/src/js/IIISideInfo.js","webpack:///./node_modules/lamejs/src/js/VBRSeekInfo.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/lamejs/src/js/Reservoir.js","webpack:///./node_modules/lamejs/src/js/L3Side.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/lamejs/src/js/PsyModel.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/lamejs/src/js/Lame.js","webpack:///./node_modules/lamejs/src/js/QuantizePVT.js","webpack:///./node_modules/lamejs/src/js/CBRNewIterationLoop.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/lamejs/src/js/index.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/lamejs/src/js/BitStream.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/lamejs/src/js/Presets.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/lamejs/src/js/NsPsy.js","webpack:///./node_modules/lamejs/src/js/CalcNoiseData.js","webpack:///./node_modules/babel-runtime/helpers/createClass.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/lamejs/src/js/NewMDCT.js"],"names":["module","exports","__webpack_require__","Object","defineProperty","get","a","aFunction","fn","that","length","undefined","call","b","c","apply","arguments","common","System","VbrMode","new_array_n","Float","ShortBlock","Util","Arrays","new_float","new_byte","new_double","new_float_n","new_int","assert","new_int_n","Encoder","NewMDCT","III_psy_ratio","FFTOFFSET","MPG_MD_MS_LR","bs","this","psy","vbr","qupvt","setModules","_bs","_psy","_qupvt","_vbr","newMDCT","lame_encode_mp3_frame","gfp","inbuf_l","inbuf_r","mp3buf","mp3bufPos","mp3buf_size","mp3count","masking_LR","masking","masking_MS","pe_use","ch","gr","inbuf","gfc","internal_flags","tot_ener","ms_ener_ratio","pe","pe_MS","lame_encode_frame_init","i","j","primebuff0","primebuff1","mode_gr","channels_out","l3_side","tt","block_type","SHORT_TYPE","mdct_sub48","mf_size","BLKSIZE","framesize","padding","slot_lag","frac_SpF","out_samplerate","psymodel","bufp","bufpPos","blocktype","VBR","vbr_mtrh","vbr_mt","L3psycho_anal_vbr","L3psycho_anal_ns","mode","MPEGMode","JOINT_STEREO","cod_info","mixed_block_flag","NORM_TYPE","gr2_max","max_pow","ATH","useAdjust","loudness_sq","Math","max","aaSensitivityP","adjust","adjustLimit","adj_lim_new","adjust_ATH","mode_ext","MPG_MD_LR_LR","force_ms","sum_pe_MS","sum_pe_LR","gi0","gi1","analysis","pinfo","ms_ratio","arraycopy","xr","ers","energy","vbr_off","vbr_abr","f","nsPsy","pefirbuf","fircoef","iteration_loop","format_bitstream","copy_buffer","bWriteVbrTag","addVbrFrame","pcmdata","set_frame_pinfo","bitrate_index","bitrate_stereoMode_Hist","bt","bitrate_blockType_Hist","updateStats","ENCDELAY","POSTDELAY","MDCTDELAY","DECDELAY","SBLIMIT","CBANDS","SBPSY_l","SBPSY_s","SBMAX_l","SBMAX_s","PSFB21","PSFB12","HBLKSIZE","BLKSIZE_s","HBLKSIZE_s","START_TYPE","STOP_TYPE","MPG_MD_LR_I","MPG_MD_MS_I","GainAnalysis","linprebuf","MAX_ORDER","linpre","lstepbuf","MAX_SAMPLES_PER_WINDOW","lstep","loutbuf","lout","rinprebuf","rinpre","rstepbuf","rstep","routbuf","rout","sampleWindow","totsamp","lsum","rsum","freqindex","first","A","STEPS_per_dB","MAX_dB","B","L3Side","l3_enc","scalefac","SFBMAX","xrpow_max","part2_3_length","big_values","count1","global_gain","scalefac_compress","table_select","subblock_gain","region0_count","region1_count","preflag","scalefac_scale","count1table_select","part2_length","sfb_lmax","sfb_smin","psy_lmax","sfbmax","psymax","sfbdivide","width","window","count1bits","sfb_partition_table","slen","max_nonzero_coeff","self","clone_int","array","Int32Array","assign","other","Float32Array","slice","obj","constructor","isBuffer","Tables","GrInfo","QuantizePVT","Takehiro","Bits","bits","subdv_table","quantize_lines_xrpow_01","l","istep","xrPos","ix","ixPos","compareval0","quantize_lines_xrpow","remaining","x0","x1","x2","x3","rx0","rx1","rx2","rx3","adj43","huf_tbl_noESC","choose_table","endPos","s","max1","max2","ix_max","end","sum1","hlen1","ht","hlen","x","count_bit_noESC","t1","sum2","sum","xlen","table23","table56","count_bit_noESC_from2","sum3","hlen2","hlen3","t","count_bit_noESC_from3","IXMAX_VAL","LARGE_BITS","choice2","choice","linmax","t2","linbits","y","largetbl","count_bit_ESC","recalc_divide_sub","cod_info2","gi","r01_bits","r01_div","r0_tbl","r1_tbl","bigv","r2","a2","scalefac_band","bi","r2t","noquant_count_bits","prev_noise","min","sfb_count1","a1","p","t32l","t33l","bv_scf","use_best_huffman","best_huffman_divide","sfb","count_bits","w","IPOW20","xp","pi","codInfo","prevNoise","prev_data_use","accumulate","accumulate01","xpPos","iData","iDataPos","acc_iData","acc_iDataPos","acc_xp","acc_xpPos","step","pretab","usefullsize","fill","quantize_xrpow","substep_shaping","gain","roundfac","k","pseudohalf","r0","r0bits","r0t","r1","r1t","recalc_divide_init","slen1_n","slen2_n","slen1_tab","slen2_tab","best_scalefac_store","recalc","scfsi","g0","scfsi_band","s1","c1","s2","c2","scfsi_calc","scale_bitcount","scale_bitcount_lsf","scale_short","scale_mixed","scale_long","tab","max_slen1","max_slen2","n","all_scalefactors_not_negative","max_range_sfac_tab","table_number","row_in_table","partition","nr_sfb","over","max_sfac","partition_table","nr_of_sfb_block","slen1","slen2","slen3","slen4","log2tab","err","printf","huffman_init","bv_index","scfb_anz","III_psy_xmin","thm","en","createError","resolve","reject","response","validateStatus","config","status","request","utils","headers","normalizedName","forEach","value","name","toUpperCase","global","emptyObject","freeze","isUndef","v","isDef","isTrue","isPrimitive","isObject","_toString","prototype","toString","isPlainObject","isRegExp","isValidArrayIndex","val","parseFloat","String","floor","isFinite","isPromise","then","catch","Array","isArray","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","toLowerCase","isBuiltInTag","isReservedAttribute","remove","arr","item","index","indexOf","splice","hasOwnProperty","hasOwn","key","cached","cache","camelizeRE","camelize","replace","_","capitalize","charAt","hyphenateRE","hyphenate","bind","Function","ctx","boundFn","_length","toArray","start","ret","extend","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keys","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","charCodeAt","def","enumerable","writable","configurable","bailRE","RegExp","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","test","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","set","has","add","clear","warn","uid","Dep","id","subs","addSub","sub","push","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","tag","data","children","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","parent","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","method","original","args","len","inserted","result","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","src","vmCount","__proto__","copyAugment","walk","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","hooks","dedupeHooks","mergeAssets","hook","type","key$1","props","methods","inject","computed","provide","defaultStrat","mergeOptions","options","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","default","$options","_props","getType","getPropDefaultValue","prevShouldObserve","isSameType","expectedTypes","handleError","info","cur","$parent","errorCaptured","globalHandleError","invokeWithErrorHandling","handler","_handled","logError","console","error","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","document","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","capture","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","hash","altKey","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","shift","_isVList","resolveInject","provideKey","source","_provided","provideDefault","resolveSlots","slots","attrs","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","render","iterator","next","done","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","_compiled","needNormalization","listeners","injections","scopedSlots","_scopeId","_c","d","createElement","cloneAndMarkFunctionalResult","renderContext","clone","mergeProps","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","_isComponent","_parentVnode","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","$vnode","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","_inactive","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","_directInactive","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","cid","factory","errorComp","resolved","owner","currentRenderingInstance","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","clearTimeout","ensureCtor","reason","component","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","callback","transformModel","extractPropsFromVNodeData","functional","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","style","class","registerDeepBindings","_createElement","comp","base","__esModule","toStringTag","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","handlers","_hasHookEvent","$emit","queue","waiting","flushing","currentFlushTimestamp","getNow","now","createEvent","timeStamp","flushSchedulerQueue","watcher","sort","before","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","path","segments","parsePath","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","components","Vue","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","Comp","initProps$1","initComputed$1","mixin","use","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","cachedNode","pruneCacheEntry","current","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","el","initMixin","dataDef","propsDef","$set","$delete","immediate","stateMixin","hookRE","$once","i$1","cbs","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","$nextTick","_render","ref","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","Number","created","destroyed","mounted","parseInt","configDef","util","defineReactive","delete","observable","plugin","installedPlugins","_installedPlugins","unshift","install","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","query","selected","querySelector","nodeOps","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","prev","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","trim","pushFilter","wrapFilter","baseWarn","msg","range","pluckModuleFunction","modules","m","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","right","middle","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","change","normalizeEvents","svgContainer","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","innerHTML","firstChild","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","childrenMatch","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","h","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","close","parseText","tagRE","tokenValue","tokens","rawTokens","exec","@binding","klass$1","staticKeys","transformNode","classBinding","genData","decoder","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","re","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","parse","template","isPreTag","root","currentParent","stack","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","element","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","all","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","alias","iteratorMatch","iterator1","iterator2","parseFor","condition","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","baseOptions","_warn","code","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","reduce","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","ctrl","alt","meta","genHandlers","prefix","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyCode","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","state","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","componentName","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","staticProps","dynamicProps","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","baseCompile","div","finalOptions","tips","tip","compileToFunctions","getShouldDecode","href","idToTemplate","mount","documentElement","outerHTML","container","getOuterHTML","__webpack_exports__","it","TypeError","settle","buildURL","parseHeaders","isURLSameOrigin","requestData","requestHeaders","isFormData","XMLHttpRequest","auth","username","password","Authorization","btoa","url","paramsSerializer","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseType","responseText","statusText","onerror","ontimeout","isStandardBrowserEnv","cookies","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","__g","class_id","num_samples","num_channels","in_samplerate","scale","scale_left","scale_right","decode_only","quality","STEREO","free_format","findReplayGain","decode_on_the_fly","write_id3tag_automatic","brate","compression_ratio","copyright","extension","emphasis","error_protection","strict_ISO","disable_reservoir","quant_comp","quant_comp_short","experimentalY","experimentalZ","exp_nspsytune","preset","VBR_q_frac","VBR_q","VBR_mean_bitrate_kbps","VBR_min_bitrate_kbps","VBR_max_bitrate_kbps","VBR_hard_min","lowpassfreq","highpassfreq","lowpasswidth","highpasswidth","maskingadjust","maskingadjust_short","ATHonly","ATHshort","noATH","ATHtype","ATHcurve","ATHlower","athaa_type","athaa_loudapprox","athaa_sensitivity","short_blocks","useTemporal","interChRatio","msfix","tune","tune_value_a","encoder_delay","encoder_padding","frameNum","lame_allocated_gfp","$Object","desc","_tk","encode","encodeURIComponent","serializedParams","isURLSearchParams","parts","isDate","toISOString","g","eval","VBRTag","lame","_lame","NUMTOCENTRIES","MAXFRAMESIZE","LAMEHEADERSIZE","XING_BITRATE1","XING_BITRATE2","XING_BITRATE25","ISO_8859_1","VBRTag0","VBRTag1","crc16Lookup","extractInteger","buf","bufPos","createInteger","createShort","shiftInBitsValue","setLameTagFrameHeader","buffer","samplerate_index","ordinal","bitrate","bbyte","abyte","BitrateIndex","crcUpdateLookup","crc","kbps","bitrate_table","VBR_seek_table","bag","nVbrNumFrames","want","size","addVbr","getVbrTag","pTagData","VBRTagData","flags","hId","hSrIndex","hMode","hBitrate","samprate","samplerate_table","equals","isVbrTag","head_flags","frames","bytes","toc","vbrScale","headersize","encDelay","encPadding","InitVbrTag","kbps_header","totalFrameSize","headerSize","sideinfo_len","TotalFrameSize","nBytesWritten","int","add_dummy_byte","updateMusicCRC","bufferPos","getLameTagFrame","Class_ID","Lame","LAME_ID","indx","seek_point","xingSeekTable","streamIndex","FRAMES_FLAG","streamSize","CRC_writeheader","musicLength","streamBuffer","streamBufferPos","revMethod","misc","musicCRC","abrBitrate","bytesWritten","getLameVeryShortVersion","vbrTypeTranslator","lowpass","peakSignalAmplitude","radioReplayGain","noiseShaping","noise_shaping","stereoMode","nonOptimal","sourceFreq","expNPsyTune","safeJoint","noGapMore","noGapPrevious","noGapCount","nogap_total","noGapCurr","nogap_current","athType","RadioGain","findPeakSample","abs","pow","MONO","DUAL_CHANNEL","NOT_SET","short_block_forced","short_block_dispensed","nMusicCRC","putLameVBR","putVbrTag","stream","seek","id3v2TagSize","fpStream","id3v2Header","readFully","startsWith","skipId3v2","write","meanBits","core","__e","enhanceError","message","Error","originURL","msie","urlParsingNode","resolveURL","protocol","host","search","hostname","port","pathname","location","requestURL","parsed","isString","VBRQuantize","CalcNoiseResult","CalcNoiseData","rv","tk","BinSearchDirection","loop_break","quant_compare","best","calc","distort","better","over_count","over_SSD","max_noise","over_noise","BitStream","EQ","tot_noise","noise","klemm_noise","FAST_LOG10","get_klemm_noise","balance_noise","xrpow","bRefine","ifqstep34","noise_shaping_amp","amp_scalefac_bands","inc_scalefac_scale","amp","inc_subblock_gain","_rv","ms_convert","r","SQRT2","init_xrpow","upper","sqrt","init_xrpow_core","init_outer_loop","sfb21_extra","ixwork","ath","gsfb","psfb21","ath21","athAdjust","longfact","psfb12","ath12","shortfact","psfb21_analogsilence","BINSEARCH_NONE","BINSEARCH_UP","BINSEARCH_DOWN","trancate_smallspectrums","l3_xmin","work","calc_noise","allowedNoise","trancateThreshold","nsame","NEQ","outer_loop","targ_bits","cod_info_w","save_xrpow","best_noise_info","best_part2_3_length","bEndOfSearch","best_ggain_pass1","desired_rate","nBits","CurrentStep","flagGoneOver","OldValue","Direction","bin_search_StepSize","age","search_limit","noise_info","maxggain","huff_bits","full_outer_loop","vbr_rh","iteration_finish_one","ResvAdjust","VBR_encode_granule","min_bits","max_bits","dbits","bst_cod_info","bst_xrpow","Max_bits","real_bits","this_bits","found","LameInternalFlags","MAX_BITS_PER_CHANNEL","get_framebits","frameBits","VBR_min_bitrate","bitsPerFrame","getframebits","VBR_max_bitrate","mb","MeanBits","ResvFrameBegin","VBR_old_prepare","ratio","bands","masking_lower_db","analog_silence","avg","mxb","on_pe","reduce_side","PSY","mask_adjust","mask_adjust_short","masking_lower","calc_xmin","bitpressure_strategy","pxmin","pxminPos","VBR_new_prepare","maximum_framebits","calc_target_bits","analog_silence_bits","max_frame_bits","res_factor","totbits","mean_bits","add_bits","MAX_BITS_PER_GRANULE","window_s","costab","fht","fz","fzPos","k4","fi","tri","k1","k2","k3","kx","f0","f3","g1","g2","g3","rv_tbl","fft_short","x_real","chn","fft_long","jj","init_fft","cos","PI","thisArg","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","isUndefined","adapter","defaults","transformRequest","isArrayBuffer","isStream","isFile","isBlob","isArrayBufferView","transformResponse","maxContentLength","Accept","merge","getLameVersion","getLameShortVersion","getPsyVersion","getLameUrl","getLameOsBitness","S","valueOf","HuffCodeTab","hl","table","t1HB","t2HB","t3HB","t5HB","t6HB","t7HB","t8HB","t9HB","t10HB","t11HB","t12HB","t13HB","t15HB","t16HB","t24HB","t32HB","t33HB","t1l","t2l","t3l","t5l","t6l","t7l","t8l","t9l","t10l","t11l","t12l","t13l","t15l","t16_5l","t16l","t24l","setPrototypeOf","proto","isES2015$1","Proxy","isSealed","_createClass","descriptor","Constructor","protoProps","_possibleConstructorReturn","ReferenceError","_CustomElement","construct","registerCustomElement","customElements","CustomElement","_CustomElement2","instance","_classCallCheck","_this","getPrototypeOf","me","constructorCallback","subClass","superClass","_inherits","observedAttributes","connectedCallback","disconnectedCallback","attributeChangedCallback","define","_CustomElement3","shadow","attachShadow","existingCustomElement","_typeof","convertAttributeValue","overrideType","propsValue","isBoolean","valueParsed","isNumber","extractProps","collection","camelCaseProp","camelCase","types","getProps","componentDefinition","getAttributes","attributes","nodeName","nodeValue","templateElement","elementOptions","vueTemplateChildren","content","getChildNodes","customEmit","eventName","_len","_key","detail","bubbles","cancelable","CustomEvent","initCustomEvent","customEvent","createVueInstance","__vue_custom_element__","ComponentDefinition","propCamelCase","propValue","Attr","getPropsData","vueVersion","beforeCreate","_proto__$$emit","constructorOptions","_constructor","rootElement","elementOriginalChildren","reactiveProps","reactivePropsList","innerText","slotVueElement","getSlots","propsWithDefault","elementInnerHtml","shadowRoot","propName","beforeCreateVueInstance","__vue_custom_element_props__","getVueInstance","vueInstance","shadowCss","customElement","isAsyncComponent","optionsProps","asyncComponentPromise","isAsyncComponentPromise","__detached__","lazyLoadedComponent","lazyLoadedComponentProps","vueInstanceCreatedCallback","_this2","destroyTimeout","nameCamelCase","installed","iii_psy_xmin","new_short","count","Int16Array","fromIndex","toIndex","srcPos","dest","destPos","srcEnd","log10","FAST_LOG10_X","short_block_allowed","short_block_coupled","MAX_VALUE","vbr_default","sz","Int8Array","Float64Array","new_short_n","IIISideInfo","ScaleFac","NsPsy","VBRSeekInfo","MAX_HEADER_LEN","Header","write_timing","ptr","iteration_init_init","fill_buffer_resample_init","mfbuf","MFSIZE","channels_in","resample_ratio","mf_samples_to_encode","lowpass1","lowpass2","highpass1","highpass2","noise_shaping_stop","tag_spec","inbuf_old","blackfilt","BPC","itime","sb_sample","amp_filter","header","MAX_HEADER_BUF","h_ptr","w_ptr","ancillary_flag","ResvSize","ResvMax","minval_l","minval_s","nb_1","nb_2","nb_s1","nb_s2","s3_ss","s3_ll","decay","loudness_sq_save","mld_l","mld_s","bm_l","bo_l","bm_s","bo_s","npart_l","npart_s","s3ind","s3ind_s","numlines_s","numlines_l","rnumlines_l","mld_cb_l","mld_cb_s","numlines_s_num1","numlines_l_num1","ms_ratio_s_old","ms_ratio_l_old","ms_ener_ratio_old","blocktype_old","PeakSample","AudiophileGain","rgdata","noclipGainChange","noclipScale","hip","in_buffer_nsamples","in_buffer_0","in_buffer_1","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","bitmap","InterceptorManager","dispatchRequest","Axios","instanceConfig","interceptors","chain","interceptor","fulfilled","rejected","PINK_REF","RMS_PERCENTILE","YULE_ORDER","RMS_WINDOW_TIME_NUMERATOR","MAX_SAMP_FREQ","RMS_WINDOW_TIME_DENOMINATOR","ABYule","ABButter","filterYule","input","inputPos","output","outputPos","nSamples","kernel","filterButter","fsqr","InitGainAnalysis","rgData","samplefreq","reqindex","INIT_GAIN_ANALYSIS_ERROR","ill","INIT_GAIN_ANALYSIS_OK","ResetSampleFrequency","AnalyzeSamples","left_samples","left_samplesPos","right_samples","right_samplesPos","curleft","curleftBase","curright","currightBase","batchsamples","cursamples","cursamplepos","GAIN_ANALYSIS_OK","GAIN_ANALYSIS_ERROR","ival","GetTitleGain","retval","elems","GAIN_NOT_ENOUGH_SAMPLES","ceil","analyzeResult","seconds","substr","_ordinal","cb_l","cb_s","eql_w","isFunction","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","Cancel","CancelToken","executor","resolvePromise","token","throwIfRequested","arrL","arrS","arr21","arr12","__CANCEL__","anObject","IE8_DOM_DEFINE","toPrimitive","dP","O","P","Attributes","main_data_begin","private_bits","resvDrain_pre","resvDrain_post","eject","createDesc","object","maxmp3buf","frameLength","resvLimit","fullFrameBits","resvsize","ResvMaxBits","cbr","extra_bits","ResvFrameEnd","over_bits","stuffingBits","mdb_bytes","hide","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","C","virtual","R","U","FFT","fft","LOG10","rpelev","rpelev2","rpelev_s","rpelev2_s","DELBARK","VO_SCALE","NS_PREECHO_ATT2","NSFIRLEN","LN_TO_LOG10","NON_LINEAR_SCALE_ENERGY","psycho_loudness_approx","loudness_power","compute_ffts","fftenergy","fftenergy_s","wsamp_l","wsamp_lPos","wsamp_s","wsamp_sPos","gr_out","im","totalenergy","energy_save","ma_max_i1","ma_max_i2","ma_max_m","I1LIMIT","I2LIMIT","MLIMIT","table1","table2","table3","mask_add","m1","m2","kk","shortblock","table2_","vbrpsy_mask_add","convert_partition2scalefac_s","eb","thr","sblock","sb","enn","thmm","bo_s_sb","b_lim","w_curr","bo_s_weight","w_next","convert_partition2scalefac_l","bo_l_sb","bo_l_weight","compute_masking_s","ebb","ecb","NS_INTERP","regcoef_s","pecalc_s","mr","pe_s","regcoef_l","pecalc_l","pe_l","calc_energy","calc_mask_index_l","mask_idx","last_tab_entry","vbrpsy_compute_fft_l","vbrpsy_compute_fft_s","vbrpsy_compute_loudness_approximation_l","masking_ratio","masking_MS_ratio","percep_entropy","percep_MS_entropy","blocktype_d","numchn","pcfact","wsamp_L","wsamp_S","eb_l","eb_s","uselongblock","ns_hpfsmpl","mask_idx_l","mask_idx_s","firbuf","firbufPos","attackThreshold","en_subshort","en_short","attack_intensity","ns_uselongblock","ns_attacks","last_en_subshort","pf","pfPos","pfe","ers_save","attackthre_s","attackthre","lastAttacks","idx","eb2","calc_interchannel_masking","mld","rmid","rside","msfix1","athadjust","msfix2","athlower","thmLR","thmM","thmS","ns_msfix","block_type_set","ppe","ppePos","fircoef_","vbrpsy_skip_masking_s","vbrpsy_skip_masking_l","vbrpsy_compute_masking_s","float","psyvbr_calc_mask_index_s","dd","dd_n","avg_mask","vbrpsy_compute_masking_l","ecb_limit","ecb_limit_2","ecb_limit_1","vbrpsy_compute_MS_thresholds","cb_mld","ath_cb","ebM","ebS","thmL","thmR","mld_m","thmMS","s3_func_x","bark","hf_slope","tempy","norm_s3_func_x","lim_a","lim_b","freq2bark","freq","atan","init_numline","numlines","bo","bm","bval","bval_width","bo_w","sfreq","blksize","scalepos","deltafreq","sbmax","b_frq","sample_freq_frac","ni","j2","bark1","i1","i2","f_tmp","bark2","init_s3_values","npart","norm","use_old_s3","tempx","temp","s3","numberOfNoneZero","s3_x_norm","stereo_demask","ATHformula_GB","sub_short_factor","n_chn_psy","n_chn_out","factor","u","vbrpsy_attack_detection","vbrpsy_compute_block_type","ch01","new_thmm","NS_PREECHO_ATT1","vbrpsy_apply_block_type","psymodel_init","useOldS3","bvl_a","snr_l_a","snr_l_b","snr_s_a","snr_s_b","snr","level","ATHformula","log","frame_duration","freq_inc","eql_balance","PsyModel","LameGlobalFlags","ReplayGain","CBRNewIterationLoop","V9","V8","V7","V6","V5","V4","V3","V2","V1","V0","R3MIX","STANDARD","EXTREME","INSANE","STANDARD_FAST","EXTREME_FAST","MEDIUM","MEDIUM_FAST","ga","qu","LAME_MAXMP3BUFFER","id3","mpglib","LowPassHighPass","lowerlimit","BandPass","lPass","enc","_ga","_qu","_ver","_id3","_mpglib","filter_coef","SmpFrqIndex","sample_freq","gpf","FindNearestBitrate","bRate","samplerate","optimum_bandwidth","lh","freq_map","table_index","nearestBitrateFullIndex","calcNeeded","mf_needed","lame_encode_frame","InOut","n_in","n_out","NumUsed","num_used","blackman","fcn","wcn","bkwn","sin","fill_buffer_resample","outbuf","outbufPos","desired_len","in_bufferPos","bpc","gcd","intratio","filter_l","BLACKSIZE","offset","time0","joff","xvalue","n_shift","fill_buffer","in_buffer","nsamples","io","numUsed","lame_init","lame_init_old","full_bitrate_table","lower_range","lower_range_kbps","upper_range","upper_range_kbps","lame_init_params","input_samplefreq","suggested_samplefreq","map2MP3Frequency","linear_int","hip_decode_exit","hip_decode_init","lowpass_band","highpass_band","minband","band","println","maxband","fc1","fc2","lame_init_params_ppflt","init_bit_stream_w","sfBandIndex","id3tag_write_v2","lame_init_bitstream","apply_preset","LAME_DEFAULT_QUALITY","VBRNewIterationLoop","VBROldIterationLoop","vbrmode","ABRIterationLoop","lame_init_qval","NSATTACKTHRE","NSATTACKTHRE_S","iteration_init","lame_encode_flush","mp3buffer","mp3bufferPos","mp3buffer_size","mp3buffer_size_remaining","end_padding","frames_left","imp3","samples_to_encode","bunch","frame_num","lame_encode_buffer","flush_bitstream","id3tag_write_v1","buffer_l","buffer_r","update_inbuffer_size","mp3out","mp3size","in_buffer_ptr","inOut","buf_size","lame_encode_buffer_sample","tak","Q_MAX","ipow20","PRECALC_SIZE","Q_MAX2","NSATHSCALE","pow20","pow43","ATHmdct","StartLine","ATH_l","ATH_psfb21","ATH_s","ATH_psfb12","samp_freq","ATH_f","compute_ath","bass","alto","treble","sfb21","tbits","fac","move_bits","athFloor","ath_over","enable_athaa_fix","rh1","xmin","rh2","en0","xa","xb","max_nonzero","tmpATH","calc_noise_core","startline","ix01","distortPos","l3_xminPos","over_noise_db","tot_noise_db","scalefacPos","noise_log","sl","set_pinfo","sfb2","en1","ifqstep","xfsf","bw","LAMEsfb","en_s","xfsf_s","thr_s","LAMEsfb_s","LAMEqss","LAMEmainbits","LAMEsfbits","_quantize","quantize","Presets","Quantize","Reservoir","Version","WavHeader","dataOffset","dataLen","channels","sampleRate","fourccToInt","fourcc","RIFF","WAVE","fmt_","readHeader","dataView","getUint32","fmtLen","getUint16","Mp3Encoder","gaud","parse2","mpg2","ver","_bits","ver2","id32","pre2","mpg","retcode","maxSamples","encodeBuffer","_sz","subarray","flush","ignoreDuplicateOf","line","CRC16_POLYNOMIAL","MAX_LENGTH","_mpg","totbit","bufByteIdx","bufBitIdx","putheader_bits","putbits2","putbits_noheaders","drain_into_ancillary","remainingBits","writeheader","CRC_update","huffman_coder_count1","huffbits","Huffmancode","tableindex","cbits","xbits","ext","linbits_x1","linbits_x2","ShortHuffmancodebits","region1Start","LongHuffmancodebits","bigvalues","region2Start","TotalBytes","total","compute_flushbits","total_bytes_output","flushbits","remaining_headers","last_ptr","first_ptr","bit_rate","encodeSideInfo2","data_bits","tot_bits","sfb_partition","scale_bits","sfbs","writeMainData","mp3data","minimum","pcm_buf","mp3_in","samples_out","hip_decode1_unclipped","expires","domain","secure","cookie","toGMTString","decodeURIComponent","VBRPresets","qual","compS","shThreshold","shThresholdS","adj","adjShort","lower","curve","sens","inter","joint","mod","fix","vbr_q","quant_comp_s","expY","st_lrm","st_s","masking_adj","masking_adj_short","ath_lower","ath_curve","ath_sensitivity","interch","safejoint","sfb21mod","ABRPresets","sc","mask","interCh","sfScale","nsmsfix","nsbass","sfscale","vbr_old_switch_map","vbr_psy_switch_map","apply_vbr_preset","enforce","vbr_preset","q","lame_set_VBR_q","abr_switch_map","apply_abr_preset","actual_bitrate","baseURL","relativeURL","createInstance","defaultConfig","axios","isCancel","promises","spread","_defineProperty","_defineProperty2","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","enwindow","win","tantab_l","cx","ca","cs","order","window_subband","x1Pos","wp","mdct_short","inout","inoutPos","tc0","tc1","tc2","ts0","ts1","ts2","w0","w1","outPos","_in","ct","st","tc3","tc4","ts5","ts6","ts7","ts8","ts3","ts4","tc5","tc6","tc7","tc8","wk","wkPos","mdct_enc","mdct_encPos","samp","sampPos","band0","band1","bu","bd"],"mappings":"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BACA,sBACA,uBACA,oBACA,kBAGAC,OACA,sBACA,oBACA,sBACA,uBACA,sBACA,sBACA,qBACA,oBAGAC,OACA,8CACA,8CACA,gDACA,gDACA,iDACA,gDACA,iDACA,gDACA,gDACA,gDACA,gDACA,8CACA,8CACA,6CACA,4CACA,4CAGAC,OACA,sDACA,+CACA,gDACA,gDACA,gDACA,gDACA,iDACA,kDACA,gDACA,iDACA,gDACA,gDACA,gDACA,6CACA,+CACA,4CAGAC,OACA,sDACA,iDACA,uDACA,wDACA,0DACA,2DACA,6DACA,0DACA,2DACA,6DACA,6DACA,8DACA,+DACA,gEACA,gEACA,0CAGAC,OACA,4DACA,0DACA,0DACA,2DACA,6DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,8DACA,8DACA,8DACA,+DACA,wCAGAC,OACA,sBACA,wBAGAC,OACA,wBACA,uBAGAC,KACA,IACA,KAGAC,KACA,MACA,MACA,OAGAC,KACA,MACA,MACA,OAGAC,KACA,QACA,QACA,SACA,UAGAC,KACA,QACA,QACA,QACA,SAGAC,KACA,aACA,aACA,eACA,gBACA,gBACA,kBAGAC,KACA,aACA,eACA,eACA,iBACA,gBACA,mBAGAC,KACA,aACA,aACA,aACA,aACA,cACA,iBAGAC,MACA,oBACA,oBACA,qBACA,sBACA,uBACA,wBACA,uBACA,yBAGAC,MACA,kBACA,mBACA,oBACA,qBACA,uBACA,uBACA,qBACA,uBAGAC,MACA,mBACA,kBACA,kBACA,mBACA,oBACA,sBACA,qBACA,yBAGAC,MACA,2CACA,4CACA,6CACA,8CACA,8CACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,iDAGAC,MACA,0CACA,0CACA,0CACA,2CACA,4CACA,6CACA,+CACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,iDAGAC,QACA,4CACA,4CACA,6CACA,8CACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDACA,gDAC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BACA,mBACA,mBACA,mBACA,kBACA,qCAEA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,mBACA,kBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,qCAEA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,qCAEA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,kBACA,oBACA,mBACA,mBACA,qCAEA,mBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,kBACA,qCAEA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,iBACA,qCAEA,mBACA,mBACA,kBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBACA,mBACA,oBACA,oBACA,mBACA,mBACA,mBAEA,mBACA,mBACA,oBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,qCAEA,kBACA,iBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,kBACA,kBACA,mBACA,oBACA,oBACA,oBACA,iBACA,mBACA,oCAEA,kBACA,kBACA,oBACA,kBACA,kBACA,mBACA,kBACA,mBACA,oBACA,iBACA,kBACA,mBACA,oBACA,oBACA,mBACA,kBACA,oCAEA,kBACA,kBACA,oBACA,kBACA,mBACA,mBACA,kBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,kBACA,oCAEA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,mBACA,kBACA,qCAEA,kBACA,iBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,mBACA,oBACA,oBACA,mBACA,kBACA,sCAEA,iBACA,kBACA,oBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,oBACA,oBACA,oBACA,kBACA,qCAEA,WAAAxxG,EAAAurE,MAAA,WACA,WAAAvrE,EAAAurE,MAAA,WACA,WAAAvrE,EAAAurE,MAAA,WACA,WAAAvrE,EAAAurE,MAAA,WACA,UAAAvrE,EAAAurE,MAAA,WACA,UAAAvrE,EAAAurE,MAAA,WACA,UAAAvrE,EAAAurE,MAAA,WACA,SAAAvrE,EAAAurE,MAAA,WAEA,sCACA,mCACA,qCACA,kBAMAkmC,IAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAEA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBAEA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,wBAGA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,uBAEA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,sBACA,sBAEA,EACA,EACA,EACA,EACA,EACA,GACA,uBACA,uBACA,wBAGA,kBACA,iBACA,kBAEA,kBACA,kBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBAEA,iBACA,kBACA,kBACA,mBACA,mBACA,kBACA,kBACA,IAEA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBAEA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,iBACA,oBAGA,EACA,EACA,EACA,EACA,EACA,EACA,sBACA,sBACA,sBAEA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,uBAEA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uB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","file":"static/js/vendor.439f.js","sourcesContent":["// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = +E39\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = +ZMJ\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * ENCDELAY The encoder delay.\n *\n * Minimum allowed is MDCTDELAY (see below)\n *\n * The first 96 samples will be attenuated, so using a value less than 96\n * will result in corrupt data for the first 96-ENCDELAY samples.\n *\n * suggested: 576 set to 1160 to sync with FhG.\n */\nEncoder.ENCDELAY = 576;\n/**\n * make sure there is at least one complete frame after the last frame\n * containing real data\n *\n * Using a value of 288 would be sufficient for a a very sophisticated\n * decoder that can decode granule-by-granule instead of frame by frame. But\n * lets not assume this, and assume the decoder will not decode frame N\n * unless it also has data for frame N+1\n */\nEncoder.POSTDELAY = 1152;\n\n/**\n * delay of the MDCT used in mdct.c original ISO routines had a delay of\n * 528! Takehiro's routines:\n */\nEncoder.MDCTDELAY = 48;\nEncoder.FFTOFFSET = (224 + Encoder.MDCTDELAY);\n\n/**\n * Most decoders, including the one we use, have a delay of 528 samples.\n */\nEncoder.DECDELAY = 528;\n\n/**\n * number of subbands\n */\nEncoder.SBLIMIT = 32;\n\n/**\n * parition bands bands\n */\nEncoder.CBANDS = 64;\n\n/**\n * number of critical bands/scale factor bands where masking is computed\n */\nEncoder.SBPSY_l = 21;\nEncoder.SBPSY_s = 12;\n\n/**\n * total number of scalefactor bands encoded\n */\nEncoder.SBMAX_l = 22;\nEncoder.SBMAX_s = 13;\nEncoder.PSFB21 = 6;\nEncoder.PSFB12 = 6;\n\n/**\n * FFT sizes\n */\nEncoder.BLKSIZE = 1024;\nEncoder.HBLKSIZE = (Encoder.BLKSIZE / 2 + 1);\nEncoder.BLKSIZE_s = 256;\nEncoder.HBLKSIZE_s = (Encoder.BLKSIZE_s / 2 + 1);\n\nEncoder.NORM_TYPE = 0;\nEncoder.START_TYPE = 1;\nEncoder.SHORT_TYPE = 2;\nEncoder.STOP_TYPE = 3;\n\n/**\n * <PRE>\n * Mode Extention:\n * When we are in stereo mode, there are 4 possible methods to store these\n * two channels. The stereo modes -m? are using a subset of them.\n *\n *  -ms: MPG_MD_LR_LR\n *  -mj: MPG_MD_LR_LR and MPG_MD_MS_LR\n *  -mf: MPG_MD_MS_LR\n *  -mi: all\n * </PRE>\n */\nEncoder.MPG_MD_LR_LR = 0;\nEncoder.MPG_MD_LR_I = 1;\nEncoder.MPG_MD_MS_LR = 2;\nEncoder.MPG_MD_MS_I = 3;\n\nEncoder.fircoef = [-0.0207887 * 5, -0.0378413 * 5,\n    -0.0432472 * 5, -0.031183 * 5, 7.79609e-18 * 5, 0.0467745 * 5,\n    0.10091 * 5, 0.151365 * 5, 0.187098 * 5];\n\nfunction Encoder() {\n    var NewMDCT = require('./NewMDCT.js');\n    var III_psy_ratio = require('./III_psy_ratio.js');\n\n    var FFTOFFSET = Encoder.FFTOFFSET;\n    var MPG_MD_MS_LR = Encoder.MPG_MD_MS_LR;\n    //BitStream bs;\n    //PsyModel psy;\n    //VBRTag vbr;\n    //QuantizePVT qupvt;\n    var bs = null;\n    this.psy = null;\n    var psy = null;\n    var vbr = null;\n    var qupvt = null;\n\n    //public final void setModules(BitStream bs, PsyModel psy, QuantizePVT qupvt,\n    //    VBRTag vbr) {\n    this.setModules = function (_bs, _psy, _qupvt, _vbr) {\n        bs = _bs;\n        this.psy = _psy;\n        psy = _psy;\n        vbr = _vbr;\n        qupvt = _qupvt;\n    };\n\n    var newMDCT = new NewMDCT();\n\n    /***********************************************************************\n     *\n     * encoder and decoder delays\n     *\n     ***********************************************************************/\n\n    /**\n     * <PRE>\n     * layer III enc->dec delay:  1056 (1057?)   (observed)\n     * layer  II enc->dec delay:   480  (481?)   (observed)\n     *\n     * polyphase 256-16             (dec or enc)        = 240\n     * mdct      256+32  (9*32)     (dec or enc)        = 288\n     * total:    512+16\n     *\n     * My guess is that delay of polyphase filterbank is actualy 240.5\n     * (there are technical reasons for this, see postings in mp3encoder).\n     * So total Encode+Decode delay = ENCDELAY + 528 + 1\n     * </PRE>\n     */\n\n\n    /**\n     * auto-adjust of ATH, useful for low volume Gabriel Bouvigne 3 feb 2001\n     *\n     * modifies some values in gfp.internal_flags.ATH (gfc.ATH)\n     */\n//private void adjust_ATH(final LameInternalFlags gfc) {\n    function adjust_ATH(gfc) {\n        var gr2_max, max_pow;\n\n        if (gfc.ATH.useAdjust == 0) {\n            gfc.ATH.adjust = 1.0;\n            /* no adjustment */\n            return;\n        }\n\n        /* jd - 2001 mar 12, 27, jun 30 */\n        /* loudness based on equal loudness curve; */\n        /* use granule with maximum combined loudness */\n        max_pow = gfc.loudness_sq[0][0];\n        gr2_max = gfc.loudness_sq[1][0];\n        if (gfc.channels_out == 2) {\n            max_pow += gfc.loudness_sq[0][1];\n            gr2_max += gfc.loudness_sq[1][1];\n        } else {\n            max_pow += max_pow;\n            gr2_max += gr2_max;\n        }\n        if (gfc.mode_gr == 2) {\n            max_pow = Math.max(max_pow, gr2_max);\n        }\n        max_pow *= 0.5;\n        /* max_pow approaches 1.0 for full band noise */\n\n        /* jd - 2001 mar 31, jun 30 */\n        /* user tuning of ATH adjustment region */\n        max_pow *= gfc.ATH.aaSensitivityP;\n\n        /*\n         * adjust ATH depending on range of maximum value\n         */\n\n        /* jd - 2001 feb27, mar12,20, jun30, jul22 */\n        /* continuous curves based on approximation */\n        /* to GB's original values. */\n        /* For an increase in approximate loudness, */\n        /* set ATH adjust to adjust_limit immediately */\n        /* after a delay of one frame. */\n        /* For a loudness decrease, reduce ATH adjust */\n        /* towards adjust_limit gradually. */\n        /* max_pow is a loudness squared or a power. */\n        if (max_pow > 0.03125) { /* ((1 - 0.000625)/ 31.98) from curve below */\n            if (gfc.ATH.adjust >= 1.0) {\n                gfc.ATH.adjust = 1.0;\n            } else {\n                /* preceding frame has lower ATH adjust; */\n                /* ascend only to the preceding adjust_limit */\n                /* in case there is leading low volume */\n                if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                    gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                }\n            }\n            gfc.ATH.adjustLimit = 1.0;\n        } else { /* adjustment curve */\n            /* about 32 dB maximum adjust (0.000625) */\n            var adj_lim_new = 31.98 * max_pow + 0.000625;\n            if (gfc.ATH.adjust >= adj_lim_new) { /* descend gradually */\n                gfc.ATH.adjust *= adj_lim_new * 0.075 + 0.925;\n                if (gfc.ATH.adjust < adj_lim_new) { /* stop descent */\n                    gfc.ATH.adjust = adj_lim_new;\n                }\n            } else { /* ascend */\n                if (gfc.ATH.adjustLimit >= adj_lim_new) {\n                    gfc.ATH.adjust = adj_lim_new;\n                } else {\n                    /* preceding frame has lower ATH adjust; */\n                    /* ascend only to the preceding adjust_limit */\n                    if (gfc.ATH.adjust < gfc.ATH.adjustLimit) {\n                        gfc.ATH.adjust = gfc.ATH.adjustLimit;\n                    }\n                }\n            }\n            gfc.ATH.adjustLimit = adj_lim_new;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  some simple statistics\n     *\n     *  bitrate index 0: free bitrate . not allowed in VBR mode\n     *  : bitrates, kbps depending on MPEG version\n     *  bitrate index 15: forbidden\n     *\n     *  mode_ext:\n     *  0:  LR\n     *  1:  LR-i\n     *  2:  MS\n     *  3:  MS-i\n     * </PRE>\n     */\n    function updateStats(gfc) {\n        var gr, ch;\n        assert(0 <= gfc.bitrate_index && gfc.bitrate_index < 16);\n        assert(0 <= gfc.mode_ext && gfc.mode_ext < 4);\n\n        /* count bitrate indices */\n        gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][4]++;\n        gfc.bitrate_stereoMode_Hist[15][4]++;\n\n        /* count 'em for every mode extension in case of 2 channel encoding */\n        if (gfc.channels_out == 2) {\n            gfc.bitrate_stereoMode_Hist[gfc.bitrate_index][gfc.mode_ext]++;\n            gfc.bitrate_stereoMode_Hist[15][gfc.mode_ext]++;\n        }\n        for (gr = 0; gr < gfc.mode_gr; ++gr) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                var bt = gfc.l3_side.tt[gr][ch].block_type | 0;\n                if (gfc.l3_side.tt[gr][ch].mixed_block_flag != 0)\n                    bt = 4;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][bt]++;\n                gfc.bitrate_blockType_Hist[gfc.bitrate_index][5]++;\n                gfc.bitrate_blockType_Hist[15][bt]++;\n                gfc.bitrate_blockType_Hist[15][5]++;\n            }\n        }\n    }\n\n    function lame_encode_frame_init(gfp, inbuf) {\n        var gfc = gfp.internal_flags;\n\n        var ch, gr;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* prime the MDCT/polyphase filterbank with a short block */\n            var i, j;\n            var primebuff0 = new_float(286 + 1152 + 576);\n            var primebuff1 = new_float(286 + 1152 + 576);\n            gfc.lame_encode_frame_init = 1;\n            for (i = 0, j = 0; i < 286 + 576 * (1 + gfc.mode_gr); ++i) {\n                if (i < 576 * gfc.mode_gr) {\n                    primebuff0[i] = 0;\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = 0;\n                } else {\n                    primebuff0[i] = inbuf[0][j];\n                    if (gfc.channels_out == 2)\n                        primebuff1[i] = inbuf[1][j];\n                    ++j;\n                }\n            }\n            /* polyphase filtering / mdct */\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.SHORT_TYPE;\n                }\n            }\n            newMDCT.mdct_sub48(gfc, primebuff0, primebuff1);\n\n            /* check FFT will not use a negative starting offset */\n            assert(576 >= Encoder.FFTOFFSET);\n            /* check if we have enough data for FFT */\n            assert(gfc.mf_size >= (Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET));\n            /* check if we have enough data for polyphase filterbank */\n            assert(gfc.mf_size >= (512 + gfp.framesize - 32));\n        }\n\n    }\n\n    /**\n     * <PRE>\n     * encodeframe()           Layer 3\n     *\n     * encode a single frame\n     *\n     *\n     *    lame_encode_frame()\n     *\n     *\n     *                           gr 0            gr 1\n     *    inbuf:           |--------------|--------------|--------------|\n     *\n     *\n     *    Polyphase (18 windows, each shifted 32)\n     *    gr 0:\n     *    window1          <----512---.\n     *    window18                 <----512---.\n     *\n     *    gr 1:\n     *    window1                         <----512---.\n     *    window18                                <----512---.\n     *\n     *\n     *\n     *    MDCT output:  |--------------|--------------|--------------|\n     *\n     *    FFT's                    <---------1024---------.\n     *                                             <---------1024-------.\n     *\n     *\n     *\n     *        inbuf = buffer of PCM data size=MP3 framesize\n     *        encoder acts on inbuf[ch][0], but output is delayed by MDCTDELAY\n     *        so the MDCT coefficints are from inbuf[ch][-MDCTDELAY]\n     *\n     *        psy-model FFT has a 1 granule delay, so we feed it data for the\n     *        next granule.\n     *        FFT is centered over granule:  224+576+224\n     *        So FFT starts at:   576-224-MDCTDELAY\n     *\n     *        MPEG2:  FFT ends at:  BLKSIZE+576-224-MDCTDELAY      (1328)\n     *        MPEG1:  FFT ends at:  BLKSIZE+2*576-224-MDCTDELAY    (1904)\n     *\n     *        MPEG2:  polyphase first window:  [0..511]\n     *                          18th window:   [544..1055]          (1056)\n     *        MPEG1:            36th window:   [1120..1631]         (1632)\n     *                data needed:  512+framesize-32\n     *\n     *        A close look newmdct.c shows that the polyphase filterbank\n     *        only uses data from [0..510] for each window.  Perhaps because the window\n     *        used by the filterbank is zero for the last point, so Takehiro's\n     *        code doesn't bother to compute with it.\n     *\n     *        FFT starts at 576-224-MDCTDELAY (304)  = 576-FFTOFFSET\n     *\n     * </PRE>\n     */\n\n\n    this.lame_encode_mp3_frame = function (gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var mp3count;\n        var masking_LR = new_array_n([2, 2]);\n        /*\n         * LR masking &\n         * energy\n         */\n        masking_LR[0][0] = new III_psy_ratio();\n        masking_LR[0][1] = new III_psy_ratio();\n        masking_LR[1][0] = new III_psy_ratio();\n        masking_LR[1][1] = new III_psy_ratio();\n        var masking_MS = new_array_n([2, 2]);\n        /* MS masking & energy */\n        masking_MS[0][0] = new III_psy_ratio();\n        masking_MS[0][1] = new III_psy_ratio();\n        masking_MS[1][0] = new III_psy_ratio();\n        masking_MS[1][1] = new III_psy_ratio();\n        //III_psy_ratio masking[][];\n        var masking;\n        /* pointer to selected maskings */\n        var inbuf = [null, null];\n        var gfc = gfp.internal_flags;\n\n        var tot_ener = new_float_n([2, 4]);\n        var ms_ener_ratio = [.5, .5];\n        var pe = [[0., 0.], [0., 0.]];\n        var pe_MS = [[0., 0.], [0., 0.]];\n\n//float[][] pe_use;\n        var pe_use;\n\n        var ch, gr;\n\n        inbuf[0] = inbuf_l;\n        inbuf[1] = inbuf_r;\n\n        if (gfc.lame_encode_frame_init == 0) {\n            /* first run? */\n            lame_encode_frame_init(gfp, inbuf);\n\n        }\n\n        /********************** padding *****************************/\n        /**\n         * <PRE>\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\"\n         * by Martin Sieler, Ralph Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         * </PRE>\n         */\n        gfc.padding = 0;\n        if ((gfc.slot_lag -= gfc.frac_SpF) < 0) {\n            gfc.slot_lag += gfp.out_samplerate;\n            gfc.padding = 1;\n        }\n\n        /****************************************\n         * Stage 1: psychoacoustic model *\n         ****************************************/\n\n        if (gfc.psymodel != 0) {\n            /*\n             * psychoacoustic model psy model has a 1 granule (576) delay that\n             * we must compensate for (mt 6/99).\n             */\n            var ret;\n            var bufp = [null, null];\n            /* address of beginning of left & right granule */\n            var bufpPos = 0;\n            /* address of beginning of left & right granule */\n            var blocktype = new_int(2);\n\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    bufp[ch] = inbuf[ch];\n                    bufpPos = 576 + gr * 576 - Encoder.FFTOFFSET;\n                }\n                if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n                    ret = psy.L3psycho_anal_vbr(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                } else {\n                    ret = psy.L3psycho_anal_ns(gfp, bufp, bufpPos, gr,\n                        masking_LR, masking_MS, pe[gr], pe_MS[gr],\n                        tot_ener[gr], blocktype);\n                }\n                if (ret != 0)\n                    return -4;\n\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    ms_ener_ratio[gr] = tot_ener[gr][2] + tot_ener[gr][3];\n                    if (ms_ener_ratio[gr] > 0)\n                        ms_ener_ratio[gr] = tot_ener[gr][3] / ms_ener_ratio[gr];\n                }\n\n                /* block type flags */\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var cod_info = gfc.l3_side.tt[gr][ch];\n                    cod_info.block_type = blocktype[ch];\n                    cod_info.mixed_block_flag = 0;\n                }\n            }\n        } else {\n            /* no psy model */\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.l3_side.tt[gr][ch].block_type = Encoder.NORM_TYPE;\n                    gfc.l3_side.tt[gr][ch].mixed_block_flag = 0;\n                    pe_MS[gr][ch] = pe[gr][ch] = 700;\n                }\n        }\n\n        /* auto-adjust of ATH, useful for low volume */\n        adjust_ATH(gfc);\n\n        /****************************************\n         * Stage 2: MDCT *\n         ****************************************/\n\n        /* polyphase filtering / mdct */\n        newMDCT.mdct_sub48(gfc, inbuf[0], inbuf[1]);\n\n        /****************************************\n         * Stage 3: MS/LR decision *\n         ****************************************/\n\n        /* Here will be selected MS or LR coding of the 2 stereo channels */\n        gfc.mode_ext = Encoder.MPG_MD_LR_LR;\n\n        if (gfp.force_ms) {\n            gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        } else if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            /*\n             * ms_ratio = is scaled, for historical reasons, to look like a\n             * ratio of side_channel / total. 0 = signal is 100% mono .5 = L & R\n             * uncorrelated\n             */\n\n            /**\n             * <PRE>\n             * [0] and [1] are the results for the two granules in MPEG-1,\n             * in MPEG-2 it's only a faked averaging of the same value\n             * _prev is the value of the last granule of the previous frame\n             * _next is the value of the first granule of the next frame\n             * </PRE>\n             */\n\n            var sum_pe_MS = 0.;\n            var sum_pe_LR = 0.;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    sum_pe_MS += pe_MS[gr][ch];\n                    sum_pe_LR += pe[gr][ch];\n                }\n            }\n\n            /* based on PE: M/S coding would not use much more bits than L/R */\n            if (sum_pe_MS <= 1.00 * sum_pe_LR) {\n\n                var gi0 = gfc.l3_side.tt[0];\n                var gi1 = gfc.l3_side.tt[gfc.mode_gr - 1];\n\n                if (gi0[0].block_type == gi0[1].block_type\n                    && gi1[0].block_type == gi1[1].block_type) {\n\n                    gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n                }\n            }\n        }\n\n        /* bit and noise allocation */\n        if (gfc.mode_ext == MPG_MD_MS_LR) {\n            masking = masking_MS;\n            /* use MS masking */\n            pe_use = pe_MS;\n        } else {\n            masking = masking_LR;\n            /* use LR masking */\n            pe_use = pe;\n        }\n\n        /* copy data for MP3 frame analyzer */\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    gfc.pinfo.ms_ratio[gr] = gfc.ms_ratio[gr];\n                    gfc.pinfo.ms_ener_ratio[gr] = ms_ener_ratio[gr];\n                    gfc.pinfo.blocktype[gr][ch] = gfc.l3_side.tt[gr][ch].block_type;\n                    gfc.pinfo.pe[gr][ch] = pe_use[gr][ch];\n                    System.arraycopy(gfc.l3_side.tt[gr][ch].xr, 0,\n                        gfc.pinfo.xr[gr][ch], 0, 576);\n                    /*\n                     * in psymodel, LR and MS data was stored in pinfo. switch\n                     * to MS data:\n                     */\n                    if (gfc.mode_ext == MPG_MD_MS_LR) {\n                        gfc.pinfo.ers[gr][ch] = gfc.pinfo.ers[gr][ch + 2];\n                        System.arraycopy(gfc.pinfo.energy[gr][ch + 2], 0,\n                            gfc.pinfo.energy[gr][ch], 0,\n                            gfc.pinfo.energy[gr][ch].length);\n                    }\n                }\n            }\n        }\n\n        /****************************************\n         * Stage 4: quantization loop *\n         ****************************************/\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr) {\n\n            var i;\n            var f;\n\n            for (i = 0; i < 18; i++)\n                gfc.nsPsy.pefirbuf[i] = gfc.nsPsy.pefirbuf[i + 1];\n\n            f = 0.0;\n            for (gr = 0; gr < gfc.mode_gr; gr++)\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    f += pe_use[gr][ch];\n            gfc.nsPsy.pefirbuf[18] = f;\n\n            f = gfc.nsPsy.pefirbuf[9];\n            for (i = 0; i < 9; i++)\n                f += (gfc.nsPsy.pefirbuf[i] + gfc.nsPsy.pefirbuf[18 - i])\n                    * Encoder.fircoef[i];\n\n            f = (670 * 5 * gfc.mode_gr * gfc.channels_out) / f;\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    pe_use[gr][ch] *= f;\n                }\n            }\n        }\n        gfc.iteration_loop.iteration_loop(gfp, pe_use, ms_ener_ratio, masking);\n\n        /****************************************\n         * Stage 5: bitstream formatting *\n         ****************************************/\n\n        /* write the frame to the bitstream */\n        bs.format_bitstream(gfp);\n\n        /* copy mp3 bit buffer into array */\n        mp3count = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 1);\n\n        if (gfp.bWriteVbrTag)\n            vbr.addVbrFrame(gfp);\n\n        if (gfp.analysis && gfc.pinfo != null) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var j;\n                for (j = 0; j < FFTOFFSET; j++)\n                    gfc.pinfo.pcmdata[ch][j] = gfc.pinfo.pcmdata[ch][j\n                    + gfp.framesize];\n                for (j = FFTOFFSET; j < 1600; j++) {\n                    gfc.pinfo.pcmdata[ch][j] = inbuf[ch][j - FFTOFFSET];\n                }\n            }\n            qupvt.set_frame_pinfo(gfp, masking);\n        }\n\n        updateStats(gfc);\n\n        return mp3count;\n    }\n}\n\n\nmodule.exports = Encoder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Encoder.js\n// module id = /00o\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GainAnalysis = require('./GainAnalysis.js');\n\nfunction ReplayGain() {\n    this.linprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * left input samples, with pre-buffer\n     */\n    this.linpre = 0;\n    this.lstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"first step\" (i.e. post first filter) samples\n     */\n    this.lstep = 0;\n    this.loutbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    /**\n     * left \"out\" (i.e. post second filter) samples\n     */\n    this.lout = 0;\n    this.rinprebuf = new_float(GainAnalysis.MAX_ORDER * 2);\n    /**\n     * right input samples ...\n     */\n    this.rinpre = 0;\n    this.rstepbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rstep = 0;\n    this.routbuf = new_float(GainAnalysis.MAX_SAMPLES_PER_WINDOW + GainAnalysis.MAX_ORDER);\n    this.rout = 0;\n    /**\n     * number of samples required to reach number of milliseconds required\n     * for RMS window\n     */\n    this.sampleWindow = 0;\n    this.totsamp = 0;\n    this.lsum = 0.;\n    this.rsum = 0.;\n    this.freqindex = 0;\n    this.first = 0;\n    this.A = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n    this.B = new_int(0 | (GainAnalysis.STEPS_per_dB * GainAnalysis.MAX_dB));\n\n}\n\nmodule.exports = ReplayGain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/ReplayGain.js\n// module id = 0hxZ\n// module chunks = 0","//package mp3;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar L3Side = require('./L3Side.js');\n\nfunction GrInfo() {\n    //float xr[] = new float[576];\n    this.xr = new_float(576);\n    //int l3_enc[] = new int[576];\n    this.l3_enc = new_int(576);\n    //int scalefac[] = new int[L3Side.SFBMAX];\n    this.scalefac = new_int(L3Side.SFBMAX);\n    this.xrpow_max = 0.;\n\n    this.part2_3_length = 0;\n    this.big_values = 0;\n    this.count1 = 0;\n    this.global_gain = 0;\n    this.scalefac_compress = 0;\n    this.block_type = 0;\n    this.mixed_block_flag = 0;\n    this.table_select = new_int(3);\n    this.subblock_gain = new_int(3 + 1);\n    this.region0_count = 0;\n    this.region1_count = 0;\n    this.preflag = 0;\n    this.scalefac_scale = 0;\n    this.count1table_select = 0;\n\n    this.part2_length = 0;\n    this.sfb_lmax = 0;\n    this.sfb_smin = 0;\n    this.psy_lmax = 0;\n    this.sfbmax = 0;\n    this.psymax = 0;\n    this.sfbdivide = 0;\n    this.width = new_int(L3Side.SFBMAX);\n    this.window = new_int(L3Side.SFBMAX);\n    this.count1bits = 0;\n    /**\n     * added for LSF\n     */\n    this.sfb_partition_table = null;\n    this.slen = new_int(4);\n\n    this.max_nonzero_coeff = 0;\n\n    var self = this;\n    function clone_int(array) {\n        return new Int32Array(array);\n    }\n    function clone_float(array) {\n        return new Float32Array(array);\n    }\n    this.assign = function (other) {\n        self.xr = clone_float(other.xr); //.slice(0); //clone();\n        self.l3_enc = clone_int(other.l3_enc); //.slice(0); //clone();\n        self.scalefac = clone_int(other.scalefac);//.slice(0); //clone();\n        self.xrpow_max = other.xrpow_max;\n\n        self.part2_3_length = other.part2_3_length;\n        self.big_values = other.big_values;\n        self.count1 = other.count1;\n        self.global_gain = other.global_gain;\n        self.scalefac_compress = other.scalefac_compress;\n        self.block_type = other.block_type;\n        self.mixed_block_flag = other.mixed_block_flag;\n        self.table_select = clone_int(other.table_select);//.slice(0); //clone();\n        self.subblock_gain = clone_int(other.subblock_gain); //.slice(0); //.clone();\n        self.region0_count = other.region0_count;\n        self.region1_count = other.region1_count;\n        self.preflag = other.preflag;\n        self.scalefac_scale = other.scalefac_scale;\n        self.count1table_select = other.count1table_select;\n\n        self.part2_length = other.part2_length;\n        self.sfb_lmax = other.sfb_lmax;\n        self.sfb_smin = other.sfb_smin;\n        self.psy_lmax = other.psy_lmax;\n        self.sfbmax = other.sfbmax;\n        self.psymax = other.psymax;\n        self.sfbdivide = other.sfbdivide;\n        self.width = clone_int(other.width); //.slice(0); //.clone();\n        self.window = clone_int(other.window); //.slice(0); //.clone();\n        self.count1bits = other.count1bits;\n\n        self.sfb_partition_table = other.sfb_partition_table.slice(0); //.clone();\n        self.slen = clone_int(other.slen); //.slice(0); //.clone();\n        self.max_nonzero_coeff = other.max_nonzero_coeff;\n    }\n}\n\nmodule.exports = GrInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/GrInfo.js\n// module id = 0mjX\n// module chunks = 0","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/node_modules/is-buffer/index.js\n// module id = 1Yoh\n// module chunks = 0","/*\n *\tMP3 huffman table selecting and bit counting\n *\n *\tCopyright (c) 1999-2005 Takehiro TOMINAGA\n *\tCopyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Takehiro.java,v 1.26 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\nvar Tables = require('./Tables.js');\nvar GrInfo = require('./GrInfo.js');\nvar QuantizePVT = require('./QuantizePVT.js');\n\n\nfunction Takehiro() {\n\n    var qupvt = null;\n    this.qupvt = null;\n\n    this.setModules = function (_qupvt) {\n        this.qupvt = _qupvt;\n        qupvt = _qupvt;\n    }\n\n    function Bits(b) {\n        this.bits = 0 | b;\n    }\n\n    var subdv_table = [[0, 0], /* 0 bands */\n        [0, 0], /* 1 bands */\n        [0, 0], /* 2 bands */\n        [0, 0], /* 3 bands */\n        [0, 0], /* 4 bands */\n        [0, 1], /* 5 bands */\n        [1, 1], /* 6 bands */\n        [1, 1], /* 7 bands */\n        [1, 2], /* 8 bands */\n        [2, 2], /* 9 bands */\n        [2, 3], /* 10 bands */\n        [2, 3], /* 11 bands */\n        [3, 4], /* 12 bands */\n        [3, 4], /* 13 bands */\n        [3, 4], /* 14 bands */\n        [4, 5], /* 15 bands */\n        [4, 5], /* 16 bands */\n        [4, 6], /* 17 bands */\n        [5, 6], /* 18 bands */\n        [5, 6], /* 19 bands */\n        [5, 7], /* 20 bands */\n        [6, 7], /* 21 bands */\n        [6, 7], /* 22 bands */\n    ];\n\n    /**\n     * nonlinear quantization of xr More accurate formula than the ISO formula.\n     * Takes into account the fact that we are quantizing xr . ix, but we want\n     * ix^4/3 to be as close as possible to x^4/3. (taking the nearest int would\n     * mean ix is as close as possible to xr, which is different.)\n     *\n     * From Segher Boessenkool <segher@eastsite.nl> 11/1999\n     *\n     * 09/2000: ASM code removed in favor of IEEE754 hack by Takehiro Tominaga.\n     * If you need the ASM code, check CVS circa Aug 2000.\n     *\n     * 01/2004: Optimizations by Gabriel Bouvigne\n     */\n    function quantize_lines_xrpow_01(l, istep, xr, xrPos, ix, ixPos) {\n        var compareval0 = (1.0 - 0.4054) / istep;\n\n        assert(l > 0);\n        l = l >> 1;\n        while ((l--) != 0) {\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n            ix[ixPos++] = (compareval0 > xr[xrPos++]) ? 0 : 1;\n        }\n    }\n\n    /**\n     * XRPOW_FTOI is a macro to convert floats to ints.<BR>\n     * if XRPOW_FTOI(x) = nearest_int(x), then QUANTFAC(x)=adj43asm[x]<BR>\n     * ROUNDFAC= -0.0946<BR>\n     *\n     * if XRPOW_FTOI(x) = floor(x), then QUANTFAC(x)=asj43[x]<BR>\n     * ROUNDFAC=0.4054<BR>\n     *\n     * Note: using floor() or 0| is extremely slow. On machines where the\n     * TAKEHIRO_IEEE754_HACK code above does not work, it is worthwile to write\n     * some ASM for XRPOW_FTOI().\n     */\n    function quantize_lines_xrpow(l, istep, xr, xrPos, ix, ixPos) {\n        assert(l > 0);\n\n        l = l >> 1;\n        var remaining = l % 2;\n        l = l >> 1;\n        while (l-- != 0) {\n            var x0, x1, x2, x3;\n            var rx0, rx1, rx2, rx3;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            x2 = xr[xrPos++] * istep;\n            rx1 = 0 | x1;\n            x3 = xr[xrPos++] * istep;\n            rx2 = 0 | x2;\n            x0 += qupvt.adj43[rx0];\n            rx3 = 0 | x3;\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            x2 += qupvt.adj43[rx2];\n            ix[ixPos++] = 0 | x1;\n            x3 += qupvt.adj43[rx3];\n            ix[ixPos++] = 0 | x2;\n            ix[ixPos++] = 0 | x3;\n        }\n        if (remaining != 0) {\n            var x0, x1;\n            var rx0, rx1;\n\n            x0 = xr[xrPos++] * istep;\n            x1 = xr[xrPos++] * istep;\n            rx0 = 0 | x0;\n            rx1 = 0 | x1;\n            x0 += qupvt.adj43[rx0];\n            x1 += qupvt.adj43[rx1];\n            ix[ixPos++] = 0 | x0;\n            ix[ixPos++] = 0 | x1;\n        }\n    }\n\n    /**\n     * Quantization function This function will select which lines to quantize\n     * and call the proper quantization function\n     */\n    function quantize_xrpow(xp, pi, istep, codInfo, prevNoise) {\n        /* quantize on xr^(3/4) instead of xr */\n        var sfb;\n        var sfbmax;\n        var j = 0;\n        var prev_data_use;\n        var accumulate = 0;\n        var accumulate01 = 0;\n        var xpPos = 0;\n        var iData = pi;\n        var iDataPos = 0;\n        var acc_iData = iData;\n        var acc_iDataPos = 0;\n        var acc_xp = xp;\n        var acc_xpPos = 0;\n\n        /*\n         * Reusing previously computed data does not seems to work if global\n         * gain is changed. Finding why it behaves this way would allow to use a\n         * cache of previously computed values (let's 10 cached values per sfb)\n         * that would probably provide a noticeable speedup\n         */\n        prev_data_use = (prevNoise != null && (codInfo.global_gain == prevNoise.global_gain));\n\n        if (codInfo.block_type == Encoder.SHORT_TYPE)\n            sfbmax = 38;\n        else\n            sfbmax = 21;\n\n        for (sfb = 0; sfb <= sfbmax; sfb++) {\n            var step = -1;\n\n            if (prev_data_use || codInfo.block_type == Encoder.NORM_TYPE) {\n                step = codInfo.global_gain\n                    - ((codInfo.scalefac[sfb] + (codInfo.preflag != 0 ? qupvt.pretab[sfb]\n                        : 0)) << (codInfo.scalefac_scale + 1))\n                    - codInfo.subblock_gain[codInfo.window[sfb]] * 8;\n            }\n            assert(codInfo.width[sfb] >= 0);\n            if (prev_data_use && (prevNoise.step[sfb] == step)) {\n                /*\n                 * do not recompute this part, but compute accumulated lines\n                 */\n                if (accumulate != 0) {\n                    quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                        acc_iData, acc_iDataPos);\n                    accumulate = 0;\n                }\n                if (accumulate01 != 0) {\n                    quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                        acc_xpPos, acc_iData, acc_iDataPos);\n                    accumulate01 = 0;\n                }\n            } else { /* should compute this part */\n                var l = codInfo.width[sfb];\n\n                if ((j + codInfo.width[sfb]) > codInfo.max_nonzero_coeff) {\n                    /* do not compute upper zero part */\n                    var usefullsize;\n                    usefullsize = codInfo.max_nonzero_coeff - j + 1;\n                    Arrays.fill(pi, codInfo.max_nonzero_coeff, 576, 0);\n                    l = usefullsize;\n\n                    if (l < 0) {\n                        l = 0;\n                    }\n\n                    /* no need to compute higher sfb values */\n                    sfb = sfbmax + 1;\n                }\n\n                /* accumulate lines to quantize */\n                if (0 == accumulate && 0 == accumulate01) {\n                    acc_iData = iData;\n                    acc_iDataPos = iDataPos;\n                    acc_xp = xp;\n                    acc_xpPos = xpPos;\n                }\n                if (prevNoise != null && prevNoise.sfb_count1 > 0\n                    && sfb >= prevNoise.sfb_count1\n                    && prevNoise.step[sfb] > 0\n                    && step >= prevNoise.step[sfb]) {\n\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate01 += l;\n                } else {\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                        acc_iData = iData;\n                        acc_iDataPos = iDataPos;\n                        acc_xp = xp;\n                        acc_xpPos = xpPos;\n                    }\n                    accumulate += l;\n                }\n\n                if (l <= 0) {\n                    /*\n                     * rh: 20040215 may happen due to \"prev_data_use\"\n                     * optimization\n                     */\n                    if (accumulate01 != 0) {\n                        quantize_lines_xrpow_01(accumulate01, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate01 = 0;\n                    }\n                    if (accumulate != 0) {\n                        quantize_lines_xrpow(accumulate, istep, acc_xp,\n                            acc_xpPos, acc_iData, acc_iDataPos);\n                        accumulate = 0;\n                    }\n\n                    break;\n                    /* ends for-loop */\n                }\n            }\n            if (sfb <= sfbmax) {\n                iDataPos += codInfo.width[sfb];\n                xpPos += codInfo.width[sfb];\n                j += codInfo.width[sfb];\n            }\n        }\n        if (accumulate != 0) { /* last data part */\n            quantize_lines_xrpow(accumulate, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate = 0;\n        }\n        if (accumulate01 != 0) { /* last data part */\n            quantize_lines_xrpow_01(accumulate01, istep, acc_xp, acc_xpPos,\n                acc_iData, acc_iDataPos);\n            accumulate01 = 0;\n        }\n\n    }\n\n    /**\n     * ix_max\n     */\n    function ix_max(ix, ixPos, endPos) {\n        var max1 = 0, max2 = 0;\n\n        do {\n            var x1 = ix[ixPos++];\n            var x2 = ix[ixPos++];\n            if (max1 < x1)\n                max1 = x1;\n\n            if (max2 < x2)\n                max2 = x2;\n        } while (ixPos < endPos);\n        if (max1 < max2)\n            max1 = max2;\n        return max1;\n    }\n\n    function count_bit_ESC(ix, ixPos, end, t1, t2, s) {\n        /* ESC-table is used */\n        var linbits = Tables.ht[t1].xlen * 65536 + Tables.ht[t2].xlen;\n        var sum = 0, sum2;\n\n        do {\n            var x = ix[ixPos++];\n            var y = ix[ixPos++];\n\n            if (x != 0) {\n                if (x > 14) {\n                    x = 15;\n                    sum += linbits;\n                }\n                x *= 16;\n            }\n\n            if (y != 0) {\n                if (y > 14) {\n                    y = 15;\n                    sum += linbits;\n                }\n                x += y;\n            }\n\n            sum += Tables.largetbl[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1 = t2;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC(ix, ixPos, end, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var hlen1 = Tables.ht[1].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * 2 + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n        } while (ixPos < end);\n\n        s.bits += sum1;\n        return 1;\n    }\n\n    function count_bit_noESC_from2(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum = 0, sum2;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen;\n        if (t1 == 2)\n            hlen = Tables.table23;\n        else\n            hlen = Tables.table56;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum += hlen[x];\n        } while (ixPos < end);\n\n        sum2 = sum & 0xffff;\n        sum >>= 16;\n\n        if (sum > sum2) {\n            sum = sum2;\n            t1++;\n        }\n\n        s.bits += sum;\n        return t1;\n    }\n\n    function count_bit_noESC_from3(ix, ixPos, end, t1, s) {\n        /* No ESC-words */\n        var sum1 = 0;\n        var sum2 = 0;\n        var sum3 = 0;\n        var xlen = Tables.ht[t1].xlen;\n        var hlen1 = Tables.ht[t1].hlen;\n        var hlen2 = Tables.ht[t1 + 1].hlen;\n        var hlen3 = Tables.ht[t1 + 2].hlen;\n\n        do {\n            var x = ix[ixPos + 0] * xlen + ix[ixPos + 1];\n            ixPos += 2;\n            sum1 += hlen1[x];\n            sum2 += hlen2[x];\n            sum3 += hlen3[x];\n        } while (ixPos < end);\n        var t = t1;\n        if (sum1 > sum2) {\n            sum1 = sum2;\n            t++;\n        }\n        if (sum1 > sum3) {\n            sum1 = sum3;\n            t = t1 + 2;\n        }\n        s.bits += sum1;\n\n        return t;\n    }\n\n    /*************************************************************************/\n    /* choose table */\n    /*************************************************************************/\n\n    var huf_tbl_noESC = [1, 2, 5, 7, 7, 10, 10, 13, 13,\n        13, 13, 13, 13, 13, 13];\n\n    /**\n     * Choose the Huffman table that will encode ix[begin..end] with the fewest\n     * bits.\n     *\n     * Note: This code contains knowledge about the sizes and characteristics of\n     * the Huffman tables as defined in the IS (Table B.7), and will not work\n     * with any arbitrary tables.\n     */\n    function choose_table(ix, ixPos, endPos, s) {\n        var max = ix_max(ix, ixPos, endPos);\n\n        switch (max) {\n            case 0:\n                return max;\n\n            case 1:\n                return count_bit_noESC(ix, ixPos, endPos, s);\n\n            case 2:\n            case 3:\n                return count_bit_noESC_from2(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                return count_bit_noESC_from3(ix, ixPos, endPos,\n                    huf_tbl_noESC[max - 1], s);\n\n            default:\n                /* try tables with linbits */\n                if (max > QuantizePVT.IXMAX_VAL) {\n                    s.bits = QuantizePVT.LARGE_BITS;\n                    return -1;\n                }\n                max -= 15;\n                var choice2;\n                for (choice2 = 24; choice2 < 32; choice2++) {\n                    if (Tables.ht[choice2].linmax >= max) {\n                        break;\n                    }\n                }\n                var choice;\n                for (choice = choice2 - 8; choice < 24; choice++) {\n                    if (Tables.ht[choice].linmax >= max) {\n                        break;\n                    }\n                }\n                return count_bit_ESC(ix, ixPos, endPos, choice, choice2, s);\n        }\n    }\n\n    /**\n     * count_bit\n     */\n    this.noquant_count_bits = function (gfc, gi, prev_noise) {\n        var ix = gi.l3_enc;\n        var i = Math.min(576, ((gi.max_nonzero_coeff + 2) >> 1) << 1);\n\n        if (prev_noise != null)\n            prev_noise.sfb_count1 = 0;\n\n        /* Determine count1 region */\n        for (; i > 1; i -= 2)\n            if ((ix[i - 1] | ix[i - 2]) != 0)\n                break;\n        gi.count1 = i;\n\n        /* Determines the number of bits to encode the quadruples. */\n        var a1 = 0;\n        var a2 = 0;\n        for (; i > 3; i -= 4) {\n            var p;\n            /* hack to check if all values <= 1 */\n            //throw \"TODO: HACK         if ((((long) ix[i - 1] | (long) ix[i - 2] | (long) ix[i - 3] | (long) ix[i - 4]) & 0xffffffffL) > 1L        \"\n            //if (true) {\n            if (((ix[i - 1] | ix[i - 2] | ix[i - 3] | ix[i - 4]) & 0x7fffffff) > 1) {\n                break;\n            }\n            p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2 + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        var bits = a1;\n        gi.count1table_select = 0;\n        if (a1 > a2) {\n            bits = a2;\n            gi.count1table_select = 1;\n        }\n\n        gi.count1bits = bits;\n        gi.big_values = i;\n        if (i == 0)\n            return bits;\n\n        if (gi.block_type == Encoder.SHORT_TYPE) {\n            a1 = 3 * gfc.scalefac_band.s[3];\n            if (a1 > gi.big_values)\n                a1 = gi.big_values;\n            a2 = gi.big_values;\n\n        } else if (gi.block_type == Encoder.NORM_TYPE) {\n            assert(i <= 576);\n            /* bv_scf has 576 entries (0..575) */\n            a1 = gi.region0_count = gfc.bv_scf[i - 2];\n            a2 = gi.region1_count = gfc.bv_scf[i - 1];\n\n            assert(a1 + a2 + 2 < Encoder.SBPSY_l);\n            a2 = gfc.scalefac_band.l[a1 + a2 + 2];\n            a1 = gfc.scalefac_band.l[a1 + 1];\n            if (a2 < i) {\n                var bi = new Bits(bits);\n                gi.table_select[2] = choose_table(ix, a2, i, bi);\n                bits = bi.bits;\n            }\n        } else {\n            gi.region0_count = 7;\n            /* gi.region1_count = SBPSY_l - 7 - 1; */\n            gi.region1_count = Encoder.SBMAX_l - 1 - 7 - 1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            a2 = i;\n            if (a1 > a2) {\n                a1 = a2;\n            }\n        }\n\n        /* have to allow for the case when bigvalues < region0 < region1 */\n        /* (and region0, region1 are ignored) */\n        a1 = Math.min(a1, i);\n        a2 = Math.min(a2, i);\n\n        assert(a1 >= 0);\n        assert(a2 >= 0);\n\n        /* Count the number of bits necessary to code the bigvalues region. */\n        if (0 < a1) {\n            var bi = new Bits(bits);\n            gi.table_select[0] = choose_table(ix, 0, a1, bi);\n            bits = bi.bits;\n        }\n        if (a1 < a2) {\n            var bi = new Bits(bits);\n            gi.table_select[1] = choose_table(ix, a1, a2, bi);\n            bits = bi.bits;\n        }\n        if (gfc.use_best_huffman == 2) {\n            gi.part2_3_length = bits;\n            best_huffman_divide(gfc, gi);\n            bits = gi.part2_3_length;\n        }\n\n        if (prev_noise != null) {\n            if (gi.block_type == Encoder.NORM_TYPE) {\n                var sfb = 0;\n                while (gfc.scalefac_band.l[sfb] < gi.big_values) {\n                    sfb++;\n                }\n                prev_noise.sfb_count1 = sfb;\n            }\n        }\n\n        return bits;\n    }\n\n    this.count_bits = function (gfc, xr, gi, prev_noise) {\n        var ix = gi.l3_enc;\n\n        /* since quantize_xrpow uses table lookup, we need to check this first: */\n        var w = (QuantizePVT.IXMAX_VAL) / qupvt.IPOW20(gi.global_gain);\n\n        if (gi.xrpow_max > w)\n            return QuantizePVT.LARGE_BITS;\n\n        quantize_xrpow(xr, ix, qupvt.IPOW20(gi.global_gain), gi, prev_noise);\n\n        if ((gfc.substep_shaping & 2) != 0) {\n            var j = 0;\n            /* 0.634521682242439 = 0.5946*2**(.5*0.1875) */\n            var gain = gi.global_gain + gi.scalefac_scale;\n            var roundfac = 0.634521682242439 / qupvt.IPOW20(gain);\n            for (var sfb = 0; sfb < gi.sfbmax; sfb++) {\n                var width = gi.width[sfb];\n                assert(width >= 0);\n                if (0 == gfc.pseudohalf[sfb]) {\n                    j += width;\n                } else {\n                    var k;\n                    for (k = j, j += width; k < j; ++k) {\n                        ix[k] = (xr[k] >= roundfac) ? ix[k] : 0;\n                    }\n                }\n            }\n        }\n        return this.noquant_count_bits(gfc, gi, prev_noise);\n    }\n\n    /**\n     * re-calculate the best scalefac_compress using scfsi the saved bits are\n     * kept in the bit reservoir.\n     */\n    function recalc_divide_init(gfc, cod_info, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info.big_values;\n\n        for (var r0 = 0; r0 <= 7 + 15; r0++) {\n            r01_bits[r0] = QuantizePVT.LARGE_BITS;\n        }\n\n        for (var r0 = 0; r0 < 16; r0++) {\n            var a1 = gfc.scalefac_band.l[r0 + 1];\n            if (a1 >= bigv)\n                break;\n            var r0bits = 0;\n            var bi = new Bits(r0bits);\n            var r0t = choose_table(ix, 0, a1, bi);\n            r0bits = bi.bits;\n\n            for (var r1 = 0; r1 < 8; r1++) {\n                var a2 = gfc.scalefac_band.l[r0 + r1 + 2];\n                if (a2 >= bigv)\n                    break;\n                var bits = r0bits;\n                bi = new Bits(bits);\n                var r1t = choose_table(ix, a1, a2, bi);\n                bits = bi.bits;\n                if (r01_bits[r0 + r1] > bits) {\n                    r01_bits[r0 + r1] = bits;\n                    r01_div[r0 + r1] = r0;\n                    r0_tbl[r0 + r1] = r0t;\n                    r1_tbl[r0 + r1] = r1t;\n                }\n            }\n        }\n    }\n\n    function recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl) {\n        var bigv = cod_info2.big_values;\n\n        for (var r2 = 2; r2 < Encoder.SBMAX_l + 1; r2++) {\n            var a2 = gfc.scalefac_band.l[r2];\n            if (a2 >= bigv)\n                break;\n            var bits = r01_bits[r2 - 2] + cod_info2.count1bits;\n            if (gi.part2_3_length <= bits)\n                break;\n\n            var bi = new Bits(bits);\n            var r2t = choose_table(ix, a2, bigv, bi);\n            bits = bi.bits;\n            if (gi.part2_3_length <= bits)\n                continue;\n\n            gi.assign(cod_info2);\n            gi.part2_3_length = bits;\n            gi.region0_count = r01_div[r2 - 2];\n            gi.region1_count = r2 - 2 - r01_div[r2 - 2];\n            gi.table_select[0] = r0_tbl[r2 - 2];\n            gi.table_select[1] = r1_tbl[r2 - 2];\n            gi.table_select[2] = r2t;\n        }\n    }\n\n    this.best_huffman_divide = function (gfc, gi) {\n        var cod_info2 = new GrInfo();\n        var ix = gi.l3_enc;\n        var r01_bits = new_int(7 + 15 + 1);\n        var r01_div = new_int(7 + 15 + 1);\n        var r0_tbl = new_int(7 + 15 + 1);\n        var r1_tbl = new_int(7 + 15 + 1);\n\n        /* SHORT BLOCK stuff fails for MPEG2 */\n        if (gi.block_type == Encoder.SHORT_TYPE && gfc.mode_gr == 1)\n            return;\n\n        cod_info2.assign(gi);\n        if (gi.block_type == Encoder.NORM_TYPE) {\n            recalc_divide_init(gfc, gi, ix, r01_bits, r01_div, r0_tbl, r1_tbl);\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        }\n        var i = cod_info2.big_values;\n        if (i == 0 || (ix[i - 2] | ix[i - 1]) > 1)\n            return;\n\n        i = gi.count1 + 2;\n        if (i > 576)\n            return;\n\n        /* Determines the number of bits to encode the quadruples. */\n        cod_info2.assign(gi);\n        cod_info2.count1 = i;\n        var a1 = 0;\n        var a2 = 0;\n\n        assert(i <= 576);\n\n        for (; i > cod_info2.big_values; i -= 4) {\n            var p = ((ix[i - 4] * 2 + ix[i - 3]) * 2 + ix[i - 2]) * 2\n                + ix[i - 1];\n            a1 += Tables.t32l[p];\n            a2 += Tables.t33l[p];\n        }\n        cod_info2.big_values = i;\n\n        cod_info2.count1table_select = 0;\n        if (a1 > a2) {\n            a1 = a2;\n            cod_info2.count1table_select = 1;\n        }\n\n        cod_info2.count1bits = a1;\n\n        if (cod_info2.block_type == Encoder.NORM_TYPE)\n            recalc_divide_sub(gfc, cod_info2, gi, ix, r01_bits, r01_div,\n                r0_tbl, r1_tbl);\n        else {\n            /* Count the number of bits necessary to code the bigvalues region. */\n            cod_info2.part2_3_length = a1;\n            a1 = gfc.scalefac_band.l[7 + 1];\n            if (a1 > i) {\n                a1 = i;\n            }\n            if (a1 > 0) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[0] = choose_table(ix, 0, a1, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (i > a1) {\n                var bi = new Bits(cod_info2.part2_3_length);\n                cod_info2.table_select[1] = choose_table(ix, a1, i, bi);\n                cod_info2.part2_3_length = bi.bits;\n            }\n            if (gi.part2_3_length > cod_info2.part2_3_length)\n                gi.assign(cod_info2);\n        }\n    }\n\n    var slen1_n = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16];\n    var slen2_n = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8];\n    var slen1_tab = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4];\n    var slen2_tab = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    Takehiro.slen1_tab = slen1_tab;\n    Takehiro.slen2_tab = slen2_tab;\n\n    function scfsi_calc(ch, l3_side) {\n        var sfb;\n        var gi = l3_side.tt[1][ch];\n        var g0 = l3_side.tt[0][ch];\n\n        for (var i = 0; i < Tables.scfsi_band.length - 1; i++) {\n            for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                if (g0.scalefac[sfb] != gi.scalefac[sfb]\n                    && gi.scalefac[sfb] >= 0)\n                    break;\n            }\n            if (sfb == Tables.scfsi_band[i + 1]) {\n                for (sfb = Tables.scfsi_band[i]; sfb < Tables.scfsi_band[i + 1]; sfb++) {\n                    gi.scalefac[sfb] = -1;\n                }\n                l3_side.scfsi[ch][i] = 1;\n            }\n        }\n        var s1 = 0;\n        var c1 = 0;\n        for (sfb = 0; sfb < 11; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c1++;\n            if (s1 < gi.scalefac[sfb])\n                s1 = gi.scalefac[sfb];\n        }\n        var s2 = 0;\n        var c2 = 0;\n        for (; sfb < Encoder.SBPSY_l; sfb++) {\n            if (gi.scalefac[sfb] == -1)\n                continue;\n            c2++;\n            if (s2 < gi.scalefac[sfb])\n                s2 = gi.scalefac[sfb];\n        }\n\n        for (var i = 0; i < 16; i++) {\n            if (s1 < slen1_n[i] && s2 < slen2_n[i]) {\n                var c = slen1_tab[i] * c1 + slen2_tab[i] * c2;\n                if (gi.part2_length > c) {\n                    gi.part2_length = c;\n                    gi.scalefac_compress = i;\n                }\n            }\n        }\n    }\n\n    /**\n     * Find the optimal way to store the scalefactors. Only call this routine\n     * after final scalefactors have been chosen and the channel/granule will\n     * not be re-encoded.\n     */\n    this.best_scalefac_store = function (gfc, gr, ch, l3_side) {\n        /* use scalefac_scale if we can */\n        var gi = l3_side.tt[gr][ch];\n        var sfb, i, j, l;\n        var recalc = 0;\n\n        /*\n         * remove scalefacs from bands with ix=0. This idea comes from the AAC\n         * ISO docs. added mt 3/00\n         */\n        /* check if l3_enc=0 */\n        j = 0;\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            var width = gi.width[sfb];\n            assert(width >= 0);\n            j += width;\n            for (l = -width; l < 0; l++) {\n                if (gi.l3_enc[l + j] != 0)\n                    break;\n            }\n            if (l == 0)\n                gi.scalefac[sfb] = recalc = -2;\n            /* anything goes. */\n            /*\n             * only best_scalefac_store and calc_scfsi know--and only they\n             * should know--about the magic number -2.\n             */\n        }\n\n        if (0 == gi.scalefac_scale && 0 == gi.preflag) {\n            var s = 0;\n            for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                if (gi.scalefac[sfb] > 0)\n                    s |= gi.scalefac[sfb];\n\n            if (0 == (s & 1) && s != 0) {\n                for (sfb = 0; sfb < gi.sfbmax; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] >>= 1;\n\n                gi.scalefac_scale = recalc = 1;\n            }\n        }\n\n        if (0 == gi.preflag && gi.block_type != Encoder.SHORT_TYPE\n            && gfc.mode_gr == 2) {\n            for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                if (gi.scalefac[sfb] < qupvt.pretab[sfb]\n                    && gi.scalefac[sfb] != -2)\n                    break;\n            if (sfb == Encoder.SBPSY_l) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (gi.scalefac[sfb] > 0)\n                        gi.scalefac[sfb] -= qupvt.pretab[sfb];\n\n                gi.preflag = recalc = 1;\n            }\n        }\n\n        for (i = 0; i < 4; i++)\n            l3_side.scfsi[ch][i] = 0;\n\n        if (gfc.mode_gr == 2 && gr == 1\n            && l3_side.tt[0][ch].block_type != Encoder.SHORT_TYPE\n            && l3_side.tt[1][ch].block_type != Encoder.SHORT_TYPE) {\n            scfsi_calc(ch, l3_side);\n            recalc = 0;\n        }\n        for (sfb = 0; sfb < gi.sfbmax; sfb++) {\n            if (gi.scalefac[sfb] == -2) {\n                gi.scalefac[sfb] = 0;\n                /* if anything goes, then 0 is a good choice */\n            }\n        }\n        if (recalc != 0) {\n            if (gfc.mode_gr == 2) {\n                this.scale_bitcount(gi);\n            } else {\n                this.scale_bitcount_lsf(gfc, gi);\n            }\n        }\n    }\n\n    function all_scalefactors_not_negative(scalefac, n) {\n        for (var i = 0; i < n; ++i) {\n            if (scalefac[i] < 0)\n                return false;\n        }\n        return true;\n    }\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 18*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_short = [0, 18, 36, 54, 54, 36, 54, 72,\n        54, 72, 90, 72, 90, 108, 108, 126];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 17*slen1_tab[i] + 18*slen2_tab[i]\n     */\n    var scale_mixed = [0, 18, 36, 54, 51, 35, 53, 71,\n        52, 70, 88, 69, 87, 105, 104, 122];\n\n    /**\n     * number of bits used to encode scalefacs.\n     *\n     * 11*slen1_tab[i] + 10*slen2_tab[i]\n     */\n    var scale_long = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42,\n        52, 43, 53, 63, 64, 74];\n\n    /**\n     * Also calculates the number of bits necessary to code the scalefactors.\n     */\n    this.scale_bitcount = function (cod_info) {\n        var k, sfb, max_slen1 = 0, max_slen2 = 0;\n\n        /* maximum values */\n        var tab;\n        var scalefac = cod_info.scalefac;\n\n        assert(all_scalefactors_not_negative(scalefac, cod_info.sfbmax));\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            tab = scale_short;\n            if (cod_info.mixed_block_flag != 0)\n                tab = scale_mixed;\n        } else { /* block_type == 1,2,or 3 */\n            tab = scale_long;\n            if (0 == cod_info.preflag) {\n                for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                    if (scalefac[sfb] < qupvt.pretab[sfb])\n                        break;\n\n                if (sfb == Encoder.SBPSY_l) {\n                    cod_info.preflag = 1;\n                    for (sfb = 11; sfb < Encoder.SBPSY_l; sfb++)\n                        scalefac[sfb] -= qupvt.pretab[sfb];\n                }\n            }\n        }\n\n        for (sfb = 0; sfb < cod_info.sfbdivide; sfb++)\n            if (max_slen1 < scalefac[sfb])\n                max_slen1 = scalefac[sfb];\n\n        for (; sfb < cod_info.sfbmax; sfb++)\n            if (max_slen2 < scalefac[sfb])\n                max_slen2 = scalefac[sfb];\n\n        /*\n         * from Takehiro TOMINAGA <tominaga@isoternet.org> 10/99 loop over *all*\n         * posible values of scalefac_compress to find the one which uses the\n         * smallest number of bits. ISO would stop at first valid index\n         */\n        cod_info.part2_length = QuantizePVT.LARGE_BITS;\n        for (k = 0; k < 16; k++) {\n            if (max_slen1 < slen1_n[k] && max_slen2 < slen2_n[k]\n                && cod_info.part2_length > tab[k]) {\n                cod_info.part2_length = tab[k];\n                cod_info.scalefac_compress = k;\n            }\n        }\n        return cod_info.part2_length == QuantizePVT.LARGE_BITS;\n    }\n\n    /**\n     * table of largest scalefactor values for MPEG2\n     */\n    var max_range_sfac_tab = [[15, 15, 7, 7],\n        [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0],\n        [7, 7, 7, 0], [3, 3, 0, 0]];\n\n    /**\n     * Also counts the number of bits to encode the scalefacs but for MPEG 2\n     * Lower sampling frequencies (24, 22.05 and 16 kHz.)\n     *\n     * This is reverse-engineered from section 2.4.3.2 of the MPEG2 IS,\n     * \"Audio Decoding Layer III\"\n     */\n    this.scale_bitcount_lsf = function (gfc, cod_info) {\n        var table_number, row_in_table, partition, nr_sfb, window;\n        var over;\n        var i, sfb;\n        var max_sfac = new_int(4);\n//var partition_table;\n        var scalefac = cod_info.scalefac;\n\n        /*\n         * Set partition table. Note that should try to use table one, but do\n         * not yet...\n         */\n        if (cod_info.preflag != 0)\n            table_number = 2;\n        else\n            table_number = 0;\n\n        for (i = 0; i < 4; i++)\n            max_sfac[i] = 0;\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            row_in_table = 1;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition] / 3;\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    for (window = 0; window < 3; window++)\n                        if (scalefac[sfb * 3 + window] > max_sfac[partition])\n                            max_sfac[partition] = scalefac[sfb * 3 + window];\n            }\n        } else {\n            row_in_table = 0;\n            var partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (sfb = 0, partition = 0; partition < 4; partition++) {\n                nr_sfb = partition_table[partition];\n                for (i = 0; i < nr_sfb; i++, sfb++)\n                    if (scalefac[sfb] > max_sfac[partition])\n                        max_sfac[partition] = scalefac[sfb];\n            }\n        }\n\n        for (over = false, partition = 0; partition < 4; partition++) {\n            if (max_sfac[partition] > max_range_sfac_tab[table_number][partition])\n                over = true;\n        }\n        if (!over) {\n            var slen1, slen2, slen3, slen4;\n\n            cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[table_number][row_in_table];\n            for (partition = 0; partition < 4; partition++)\n                cod_info.slen[partition] = log2tab[max_sfac[partition]];\n\n            /* set scalefac_compress */\n            slen1 = cod_info.slen[0];\n            slen2 = cod_info.slen[1];\n            slen3 = cod_info.slen[2];\n            slen4 = cod_info.slen[3];\n\n            switch (table_number) {\n                case 0:\n                    cod_info.scalefac_compress = (((slen1 * 5) + slen2) << 4)\n                        + (slen3 << 2) + slen4;\n                    break;\n\n                case 1:\n                    cod_info.scalefac_compress = 400 + (((slen1 * 5) + slen2) << 2)\n                        + slen3;\n                    break;\n\n                case 2:\n                    cod_info.scalefac_compress = 500 + (slen1 * 3) + slen2;\n                    break;\n\n                default:\n                    System.err.printf(\"intensity stereo not implemented yet\\n\");\n                    break;\n            }\n        }\n        if (!over) {\n            assert(cod_info.sfb_partition_table != null);\n            cod_info.part2_length = 0;\n            for (partition = 0; partition < 4; partition++)\n                cod_info.part2_length += cod_info.slen[partition]\n                    * cod_info.sfb_partition_table[partition];\n        }\n        return over;\n    }\n\n    /*\n     * Since no bands have been over-amplified, we can set scalefac_compress and\n     * slen[] for the formatter\n     */\n    var log2tab = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,\n        4, 4, 4, 4];\n\n    this.huffman_init = function (gfc) {\n        for (var i = 2; i <= 576; i += 2) {\n            var scfb_anz = 0, bv_index;\n            while (gfc.scalefac_band.l[++scfb_anz] < i)\n                ;\n\n            bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            while (gfc.scalefac_band.l[bv_index + 1] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                /*\n                 * this is an indication that everything is going to be encoded\n                 * as region0: bigvalues < region0 < region1 so lets set\n                 * region0, region1 to some value larger than bigvalues\n                 */\n                bv_index = subdv_table[scfb_anz][0]; // .region0_count\n            }\n\n            gfc.bv_scf[i - 2] = bv_index;\n\n            bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            while (gfc.scalefac_band.l[bv_index + gfc.bv_scf[i - 2] + 2] > i)\n                bv_index--;\n\n            if (bv_index < 0) {\n                bv_index = subdv_table[scfb_anz][1]; // .region1_count\n            }\n\n            gfc.bv_scf[i - 1] = bv_index;\n        }\n    }\n}\n\nmodule.exports = Takehiro;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Takehiro.js\n// module id = 1gAI\n// module chunks = 0","//package mp3;\n\nvar III_psy_xmin = require('./III_psy_xmin.js');\n\nfunction III_psy_ratio() {\n\tthis.thm = new III_psy_xmin();\n\tthis.en = new III_psy_xmin();\n}\n\nmodule.exports = III_psy_ratio;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/III_psy_ratio.js\n// module id = 1xnL\n// module chunks = 0","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/settle.js\n// module id = 21It\n// module chunks = 0","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/normalizeHeaderName.js\n// module id = 5VQ+\n// module chunks = 0","/*!\n * Vue.js v2.6.11\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn)) {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.11';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:|^#/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /\\s+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anyting as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (name === 'v-slot' || name[0] === '#') {\n            checkFunctionParameterExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stripped = exp.replace(stripStringRE, '');\n  var keywordMatch = stripped.match(unaryOperatorsRE);\n  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\nfunction checkFunctionParameterExpression (exp, text, warn, range) {\n  try {\n    new Function(exp, '');\n  } catch (e) {\n    warn(\n      \"invalid function parameter expression: \" + (e.message) + \" in\\n\\n\" +\n      \"    \" + exp + \"\\n\\n\" +\n      \"  Raw expression: \" + (text.trim()) + \"\\n\",\n      range\n    );\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 77Pl\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/adapters/xhr.js\n// module id = 7GwW\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 7KvD\n// module chunks = 0","var MPEGMode = require('./MPEGMode.js');\n\nfunction LameGlobalFlags() {\n\n    this.class_id = 0;\n\n    /* input description */\n\n    /**\n     * number of samples. default=-1\n     */\n    this.num_samples = 0;\n    /**\n     * input number of channels. default=2\n     */\n    this.num_channels = 0;\n    /**\n     * input_samp_rate in Hz. default=44.1 kHz\n     */\n    this.in_samplerate = 0;\n    /**\n     * output_samp_rate. default: LAME picks best value at least not used for\n     * MP3 decoding: Remember 44.1 kHz MP3s and AC97\n     */\n    this.out_samplerate = 0;\n    /**\n     * scale input by this amount before encoding at least not used for MP3\n     * decoding\n     */\n    this.scale = 0.;\n    /**\n     * scale input of channel 0 (left) by this amount before encoding\n     */\n    this.scale_left = 0.;\n    /**\n     * scale input of channel 1 (right) by this amount before encoding\n     */\n    this.scale_right = 0.;\n\n    /* general control params */\n    /**\n     * collect data for a MP3 frame analyzer?\n     */\n    this.analysis = false;\n    /**\n     * add Xing VBR tag?\n     */\n    this.bWriteVbrTag = false;\n\n    /**\n     * use lame/mpglib to convert mp3 to wav\n     */\n    this.decode_only = false;\n    /**\n     * quality setting 0=best, 9=worst default=5\n     */\n    this.quality = 0;\n    /**\n     * see enum default = LAME picks best value\n     */\n    this.mode = MPEGMode.STEREO;\n    /**\n     * force M/S mode. requires mode=1\n     */\n    this.force_ms = false;\n    /**\n     * use free format? default=0\n     */\n    this.free_format = false;\n    /**\n     * find the RG value? default=0\n     */\n    this.findReplayGain = false;\n    /**\n     * decode on the fly? default=0\n     */\n    this.decode_on_the_fly = false;\n    /**\n     * 1 (default) writes ID3 tags, 0 not\n     */\n    this.write_id3tag_automatic = false;\n\n    /*\n     * set either brate>0 or compression_ratio>0, LAME will compute the value of\n     * the variable not set. Default is compression_ratio = 11.025\n     */\n    /**\n     * bitrate\n     */\n    this.brate = 0;\n    /**\n     * sizeof(wav file)/sizeof(mp3 file)\n     */\n    this.compression_ratio = 0.;\n\n    /* frame params */\n    /**\n     * mark as copyright. default=0\n     */\n    this.copyright = 0;\n    /**\n     * mark as original. default=1\n     */\n    this.original = 0;\n    /**\n     * the MP3 'private extension' bit. Meaningless\n     */\n    this.extension = 0;\n    /**\n     * Input PCM is emphased PCM (for instance from one of the rarely emphased\n     * CDs), it is STRONGLY not recommended to use this, because psycho does not\n     * take it into account, and last but not least many decoders don't care\n     * about these bits\n     */\n    this.emphasis = 0;\n    /**\n     * use 2 bytes per frame for a CRC checksum. default=0\n     */\n    this.error_protection = 0;\n    /**\n     * enforce ISO spec as much as possible\n     */\n    this.strict_ISO = false;\n\n    /**\n     * use bit reservoir?\n     */\n    this.disable_reservoir = false;\n\n    /* quantization/noise shaping */\n    this.quant_comp = 0;\n    this.quant_comp_short = 0;\n    this.experimentalY = false;\n    this.experimentalZ = 0;\n    this.exp_nspsytune = 0;\n\n    this.preset = 0;\n\n    /* VBR control */\n    this.VBR = null;\n    /**\n     * Range [0,...,1[\n     */\n    this.VBR_q_frac = 0.;\n    /**\n     * Range [0,...,9]\n     */\n    this.VBR_q = 0;\n    this.VBR_mean_bitrate_kbps = 0;\n    this.VBR_min_bitrate_kbps = 0;\n    this.VBR_max_bitrate_kbps = 0;\n    /**\n     * strictly enforce VBR_min_bitrate normaly, it will be violated for analog\n     * silence\n     */\n    this.VBR_hard_min = 0;\n\n    /* resampling and filtering */\n\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.lowpassfreq = 0;\n    /**\n     * freq in Hz. 0=lame choses. -1=no filter\n     */\n    this.highpassfreq = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.lowpasswidth = 0;\n    /**\n     * freq width of filter, in Hz (default=15%)\n     */\n    this.highpasswidth = 0;\n\n    /*\n     * psycho acoustics and other arguments which you should not change unless\n     * you know what you are doing\n     */\n\n    this.maskingadjust = 0.;\n    this.maskingadjust_short = 0.;\n    /**\n     * only use ATH\n     */\n    this.ATHonly = false;\n    /**\n     * only use ATH for short blocks\n     */\n    this.ATHshort = false;\n    /**\n     * disable ATH\n     */\n    this.noATH = false;\n    /**\n     * select ATH formula\n     */\n    this.ATHtype = 0;\n    /**\n     * change ATH formula 4 shape\n     */\n    this.ATHcurve = 0.;\n    /**\n     * lower ATH by this many db\n     */\n    this.ATHlower = 0.;\n    /**\n     * select ATH auto-adjust scheme\n     */\n    this.athaa_type = 0;\n    /**\n     * select ATH auto-adjust loudness calc\n     */\n    this.athaa_loudapprox = 0;\n    /**\n     * dB, tune active region of auto-level\n     */\n    this.athaa_sensitivity = 0.;\n    this.short_blocks = null;\n    /**\n     * use temporal masking effect\n     */\n    this.useTemporal = false;\n    this.interChRatio = 0.;\n    /**\n     * Naoki's adjustment of Mid/Side maskings\n     */\n    this.msfix = 0.;\n\n    /**\n     * 0 off, 1 on\n     */\n    this.tune = false;\n    /**\n     * used to pass values for debugging and stuff\n     */\n    this.tune_value_a = 0.;\n\n    /************************************************************************/\n    /* internal variables, do not set... */\n    /* provided because they may be of use to calling application */\n    /************************************************************************/\n\n    /**\n     * 0=MPEG-2/2.5 1=MPEG-1\n     */\n    this.version = 0;\n    this.encoder_delay = 0;\n    /**\n     * number of samples of padding appended to input\n     */\n    this.encoder_padding = 0;\n    this.framesize = 0;\n    /**\n     * number of frames encoded\n     */\n    this.frameNum = 0;\n    /**\n     * is this struct owned by calling program or lame?\n     */\n    this.lame_allocated_gfp = 0;\n    /**************************************************************************/\n    /* more internal variables are stored in this structure: */\n    /**************************************************************************/\n    this.internal_flags = null;\n}\n\nmodule.exports = LameGlobalFlags;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/LameGlobalFlags.js\n// module id = 9Zs0\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/define-property.js\n// module id = 9bBU\n// module chunks = 0","function VBRQuantize() {\n    var qupvt;\n    var tak;\n\n    this.setModules = function (_qupvt, _tk) {\n        qupvt = _qupvt;\n        tak = _tk;\n    }\n    //TODO\n\n}\n\nmodule.exports = VBRQuantize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/VBRQuantize.js\n// module id = AWUW\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/define-property.js\n// module id = C4MV\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = D2L2\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/buildURL.js\n// module id = DQCr\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * A Vbr header may be present in the ancillary data field of the first frame of\n * an mp3 bitstream<BR>\n * The Vbr header (optionally) contains\n * <UL>\n * <LI>frames total number of audio frames in the bitstream\n * <LI>bytes total number of bytes in the bitstream\n * <LI>toc table of contents\n * </UL>\n *\n * toc (table of contents) gives seek points for random access.<BR>\n * The ith entry determines the seek point for i-percent duration.<BR>\n * seek point in bytes = (toc[i]/256.0) * total_bitstream_bytes<BR>\n * e.g. half duration seek point = (toc[50]/256.0) * total_bitstream_bytes\n */\nVBRTag.NUMTOCENTRIES = 100;\nVBRTag.MAXFRAMESIZE = 2880;\n\nfunction VBRTag() {\n\n    var lame;\n    var bs;\n    var v;\n\n    this.setModules = function (_lame, _bs, _v) {\n        lame = _lame;\n        bs = _bs;\n        v = _v;\n    };\n\n    var FRAMES_FLAG = 0x0001;\n    var BYTES_FLAG = 0x0002;\n    var TOC_FLAG = 0x0004;\n    var VBR_SCALE_FLAG = 0x0008;\n\n    var NUMTOCENTRIES = VBRTag.NUMTOCENTRIES;\n\n    /**\n     * (0xB40) the max freeformat 640 32kHz framesize.\n     */\n    var MAXFRAMESIZE = VBRTag.MAXFRAMESIZE;\n\n    /**\n     * <PRE>\n     *    4 bytes for Header Tag\n     *    4 bytes for Header Flags\n     *  100 bytes for entry (toc)\n     *    4 bytes for frame size\n     *    4 bytes for stream size\n     *    4 bytes for VBR scale. a VBR quality indicator: 0=best 100=worst\n     *   20 bytes for LAME tag.  for example, \"LAME3.12 (beta 6)\"\n     * ___________\n     *  140 bytes\n     * </PRE>\n     */\n    var VBRHEADERSIZE = (NUMTOCENTRIES + 4 + 4 + 4 + 4 + 4);\n\n    var LAMEHEADERSIZE = (VBRHEADERSIZE + 9 + 1 + 1 + 8\n    + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2);\n\n    /**\n     * The size of the Xing header MPEG-1, bit rate in kbps.\n     */\n    var XING_BITRATE1 = 128;\n    /**\n     * The size of the Xing header MPEG-2, bit rate in kbps.\n     */\n    var XING_BITRATE2 = 64;\n    /**\n     * The size of the Xing header MPEG-2.5, bit rate in kbps.\n     */\n    var XING_BITRATE25 = 32;\n\n    /**\n     * ISO-8859-1 charset for byte to string operations.\n     */\n    var ISO_8859_1 = null; //Charset.forName(\"ISO-8859-1\");\n\n    /**\n     * VBR header magic string.\n     */\n    var VBRTag0 = \"Xing\";\n    /**\n     * VBR header magic string (VBR == VBRMode.vbr_off).\n     */\n    var VBRTag1 = \"Info\";\n\n    /**\n     * Lookup table for fast CRC-16 computation. Uses the polynomial\n     * x^16+x^15+x^2+1\n     */\n    var crc16Lookup = [0x0000, 0xC0C1, 0xC181, 0x0140,\n        0xC301, 0x03C0, 0x0280, 0xC241, 0xC601, 0x06C0, 0x0780, 0xC741,\n        0x0500, 0xC5C1, 0xC481, 0x0440, 0xCC01, 0x0CC0, 0x0D80, 0xCD41,\n        0x0F00, 0xCFC1, 0xCE81, 0x0E40, 0x0A00, 0xCAC1, 0xCB81, 0x0B40,\n        0xC901, 0x09C0, 0x0880, 0xC841, 0xD801, 0x18C0, 0x1980, 0xD941,\n        0x1B00, 0xDBC1, 0xDA81, 0x1A40, 0x1E00, 0xDEC1, 0xDF81, 0x1F40,\n        0xDD01, 0x1DC0, 0x1C80, 0xDC41, 0x1400, 0xD4C1, 0xD581, 0x1540,\n        0xD701, 0x17C0, 0x1680, 0xD641, 0xD201, 0x12C0, 0x1380, 0xD341,\n        0x1100, 0xD1C1, 0xD081, 0x1040, 0xF001, 0x30C0, 0x3180, 0xF141,\n        0x3300, 0xF3C1, 0xF281, 0x3240, 0x3600, 0xF6C1, 0xF781, 0x3740,\n        0xF501, 0x35C0, 0x3480, 0xF441, 0x3C00, 0xFCC1, 0xFD81, 0x3D40,\n        0xFF01, 0x3FC0, 0x3E80, 0xFE41, 0xFA01, 0x3AC0, 0x3B80, 0xFB41,\n        0x3900, 0xF9C1, 0xF881, 0x3840, 0x2800, 0xE8C1, 0xE981, 0x2940,\n        0xEB01, 0x2BC0, 0x2A80, 0xEA41, 0xEE01, 0x2EC0, 0x2F80, 0xEF41,\n        0x2D00, 0xEDC1, 0xEC81, 0x2C40, 0xE401, 0x24C0, 0x2580, 0xE541,\n        0x2700, 0xE7C1, 0xE681, 0x2640, 0x2200, 0xE2C1, 0xE381, 0x2340,\n        0xE101, 0x21C0, 0x2080, 0xE041, 0xA001, 0x60C0, 0x6180, 0xA141,\n        0x6300, 0xA3C1, 0xA281, 0x6240, 0x6600, 0xA6C1, 0xA781, 0x6740,\n        0xA501, 0x65C0, 0x6480, 0xA441, 0x6C00, 0xACC1, 0xAD81, 0x6D40,\n        0xAF01, 0x6FC0, 0x6E80, 0xAE41, 0xAA01, 0x6AC0, 0x6B80, 0xAB41,\n        0x6900, 0xA9C1, 0xA881, 0x6840, 0x7800, 0xB8C1, 0xB981, 0x7940,\n        0xBB01, 0x7BC0, 0x7A80, 0xBA41, 0xBE01, 0x7EC0, 0x7F80, 0xBF41,\n        0x7D00, 0xBDC1, 0xBC81, 0x7C40, 0xB401, 0x74C0, 0x7580, 0xB541,\n        0x7700, 0xB7C1, 0xB681, 0x7640, 0x7200, 0xB2C1, 0xB381, 0x7340,\n        0xB101, 0x71C0, 0x7080, 0xB041, 0x5000, 0x90C1, 0x9181, 0x5140,\n        0x9301, 0x53C0, 0x5280, 0x9241, 0x9601, 0x56C0, 0x5780, 0x9741,\n        0x5500, 0x95C1, 0x9481, 0x5440, 0x9C01, 0x5CC0, 0x5D80, 0x9D41,\n        0x5F00, 0x9FC1, 0x9E81, 0x5E40, 0x5A00, 0x9AC1, 0x9B81, 0x5B40,\n        0x9901, 0x59C0, 0x5880, 0x9841, 0x8801, 0x48C0, 0x4980, 0x8941,\n        0x4B00, 0x8BC1, 0x8A81, 0x4A40, 0x4E00, 0x8EC1, 0x8F81, 0x4F40,\n        0x8D01, 0x4DC0, 0x4C80, 0x8C41, 0x4400, 0x84C1, 0x8581, 0x4540,\n        0x8701, 0x47C0, 0x4680, 0x8641, 0x8201, 0x42C0, 0x4380, 0x8341,\n        0x4100, 0x81C1, 0x8081, 0x4040];\n\n    /***********************************************************************\n     * Robert Hegemann 2001-01-17\n     ***********************************************************************/\n\n    function addVbr(v, bitrate) {\n        v.nVbrNumFrames++;\n        v.sum += bitrate;\n        v.seen++;\n\n        if (v.seen < v.want) {\n            return;\n        }\n\n        if (v.pos < v.size) {\n            v.bag[v.pos] = v.sum;\n            v.pos++;\n            v.seen = 0;\n        }\n        if (v.pos == v.size) {\n            for (var i = 1; i < v.size; i += 2) {\n                v.bag[i / 2] = v.bag[i];\n            }\n            v.want *= 2;\n            v.pos /= 2;\n        }\n    }\n\n    function xingSeekTable(v, t) {\n        if (v.pos <= 0)\n            return;\n\n        for (var i = 1; i < NUMTOCENTRIES; ++i) {\n            var j = i / NUMTOCENTRIES, act, sum;\n            var indx = 0 | (Math.floor(j * v.pos));\n            if (indx > v.pos - 1)\n                indx = v.pos - 1;\n            act = v.bag[indx];\n            sum = v.sum;\n            var seek_point = 0 | (256. * act / sum);\n            if (seek_point > 255)\n                seek_point = 255;\n            t[i] = 0xff & seek_point;\n        }\n    }\n\n    /**\n     * Add VBR entry, used to fill the VBR TOC entries.\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.addVbrFrame = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var kbps = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        assert(gfc.VBR_seek_table.bag != null);\n        addVbr(gfc.VBR_seek_table, kbps);\n    }\n\n    /**\n     * Read big endian integer (4-bytes) from header.\n     *\n     * @param buf\n     *            header containing the integer\n     * @param bufPos\n     *            offset into the header\n     * @return extracted integer\n     */\n    function extractInteger(buf, bufPos) {\n        var x = buf[bufPos + 0] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 1] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 2] & 0xff;\n        x <<= 8;\n        x |= buf[bufPos + 3] & 0xff;\n        return x;\n    }\n\n    /**\n     * Write big endian integer (4-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createInteger(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 24) & 0xff);\n        buf[bufPos + 1] = 0xff & ((value >> 16) & 0xff);\n        buf[bufPos + 2] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 3] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Write big endian short (2-bytes) in the header.\n     *\n     * @param buf\n     *            header to write the integer into\n     * @param bufPos\n     *            offset into the header\n     * @param value\n     *            integer value to write\n     */\n    function createShort(buf, bufPos, value) {\n        buf[bufPos + 0] = 0xff & ((value >> 8) & 0xff);\n        buf[bufPos + 1] = 0xff & (value & 0xff);\n    }\n\n    /**\n     * Check for magic strings (Xing/Info).\n     *\n     * @param buf\n     *            header to check\n     * @param bufPos\n     *            header offset to check\n     * @return magic string found\n     */\n    function isVbrTag(buf, bufPos) {\n        return new String(buf, bufPos, VBRTag0.length(), ISO_8859_1)\n                .equals(VBRTag0)\n            || new String(buf, bufPos, VBRTag1.length(), ISO_8859_1)\n                .equals(VBRTag1);\n    }\n\n    function shiftInBitsValue(x, n, v) {\n        return 0xff & ((x << n) | (v & ~(-1 << n)));\n    }\n\n    /**\n     * Construct the MP3 header using the settings of the global flags.\n     *\n     * <img src=\"1000px-Mp3filestructure.svg.png\">\n     *\n     * @param gfp\n     *            global flags\n     * @param buffer\n     *            header\n     */\n    function setLameTagFrameHeader(gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        // MP3 Sync Word\n        buffer[0] = shiftInBitsValue(buffer[0], 8, 0xff);\n\n        buffer[1] = shiftInBitsValue(buffer[1], 3, 7);\n        buffer[1] = shiftInBitsValue(buffer[1], 1,\n            (gfp.out_samplerate < 16000) ? 0 : 1);\n        // Version\n        buffer[1] = shiftInBitsValue(buffer[1], 1, gfp.version);\n        // 01 == Layer 3\n        buffer[1] = shiftInBitsValue(buffer[1], 2, 4 - 3);\n        // Error protection\n        buffer[1] = shiftInBitsValue(buffer[1], 1, (!gfp.error_protection) ? 1\n            : 0);\n\n        // Bit rate\n        buffer[2] = shiftInBitsValue(buffer[2], 4, gfc.bitrate_index);\n        // Frequency\n        buffer[2] = shiftInBitsValue(buffer[2], 2, gfc.samplerate_index);\n        // Pad. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, 0);\n        // Priv. Bit\n        buffer[2] = shiftInBitsValue(buffer[2], 1, gfp.extension);\n\n        // Mode\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.mode.ordinal());\n        // Mode extension (Used with Joint Stereo)\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfc.mode_ext);\n        // Copy\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.copyright);\n        // Original\n        buffer[3] = shiftInBitsValue(buffer[3], 1, gfp.original);\n        // Emphasis\n        buffer[3] = shiftInBitsValue(buffer[3], 2, gfp.emphasis);\n\n        /* the default VBR header. 48 kbps layer III, no padding, no crc */\n        /* but sampling freq, mode and copyright/copy protection taken */\n        /* from first valid frame */\n        buffer[0] = 0xff;\n        var abyte = 0xff & (buffer[1] & 0xf1);\n        var bitrate;\n        if (1 == gfp.version) {\n            bitrate = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                bitrate = XING_BITRATE25;\n            else\n                bitrate = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            bitrate = gfp.brate;\n\n        var bbyte;\n        if (gfp.free_format)\n            bbyte = 0x00;\n        else\n            bbyte = 0xff & (16 * lame.BitrateIndex(bitrate, gfp.version,\n                    gfp.out_samplerate));\n\n        /*\n         * Use as much of the info from the real frames in the Xing header:\n         * samplerate, channels, crc, etc...\n         */\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            buffer[1] = 0xff & (abyte | 0x0a);\n            /* was 0x0b; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG1 frame */\n        } else {\n            /* MPEG2 */\n            buffer[1] = 0xff & (abyte | 0x02);\n            /* was 0x03; */\n            abyte = 0xff & (buffer[2] & 0x0d);\n            /* AF keep also private bit */\n            buffer[2] = 0xff & (bbyte | abyte);\n            /* 64kbs MPEG2 frame */\n        }\n    }\n\n    /**\n     * Get VBR tag information\n     *\n     * @param buf\n     *            header to analyze\n     * @param bufPos\n     *            offset into the header\n     * @return VBR tag data\n     */\n    this.getVbrTag = function (buf) {\n        var pTagData = new VBRTagData();\n        var bufPos = 0;\n\n        /* get Vbr header data */\n        pTagData.flags = 0;\n\n        /* get selected MPEG header data */\n        var hId = (buf[bufPos + 1] >> 3) & 1;\n        var hSrIndex = (buf[bufPos + 2] >> 2) & 3;\n        var hMode = (buf[bufPos + 3] >> 6) & 3;\n        var hBitrate = ((buf[bufPos + 2] >> 4) & 0xf);\n        hBitrate = Tables.bitrate_table[hId][hBitrate];\n\n        /* check for FFE syncword */\n        if ((buf[bufPos + 1] >> 4) == 0xE)\n            pTagData.samprate = Tables.samplerate_table[2][hSrIndex];\n        else\n            pTagData.samprate = Tables.samplerate_table[hId][hSrIndex];\n\n        /* determine offset of header */\n        if (hId != 0) {\n            /* mpeg1 */\n            if (hMode != 3)\n                bufPos += (32 + 4);\n            else\n                bufPos += (17 + 4);\n        } else {\n            /* mpeg2 */\n            if (hMode != 3)\n                bufPos += (17 + 4);\n            else\n                bufPos += (9 + 4);\n        }\n\n        if (!isVbrTag(buf, bufPos))\n            return null;\n\n        bufPos += 4;\n\n        pTagData.hId = hId;\n\n        /* get flags */\n        var head_flags = pTagData.flags = extractInteger(buf, bufPos);\n        bufPos += 4;\n\n        if ((head_flags & FRAMES_FLAG) != 0) {\n            pTagData.frames = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & BYTES_FLAG) != 0) {\n            pTagData.bytes = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        if ((head_flags & TOC_FLAG) != 0) {\n            if (pTagData.toc != null) {\n                for (var i = 0; i < NUMTOCENTRIES; i++)\n                    pTagData.toc[i] = buf[bufPos + i];\n            }\n            bufPos += NUMTOCENTRIES;\n        }\n\n        pTagData.vbrScale = -1;\n\n        if ((head_flags & VBR_SCALE_FLAG) != 0) {\n            pTagData.vbrScale = extractInteger(buf, bufPos);\n            bufPos += 4;\n        }\n\n        pTagData.headersize = ((hId + 1) * 72000 * hBitrate)\n            / pTagData.samprate;\n\n        bufPos += 21;\n        var encDelay = buf[bufPos + 0] << 4;\n        encDelay += buf[bufPos + 1] >> 4;\n        var encPadding = (buf[bufPos + 1] & 0x0F) << 8;\n        encPadding += buf[bufPos + 2] & 0xff;\n        /* check for reasonable values (this may be an old Xing header, */\n        /* not a INFO tag) */\n        if (encDelay < 0 || encDelay > 3000)\n            encDelay = -1;\n        if (encPadding < 0 || encPadding > 3000)\n            encPadding = -1;\n\n        pTagData.encDelay = encDelay;\n        pTagData.encPadding = encPadding;\n\n        /* success */\n        return pTagData;\n    }\n\n    /**\n     * Initializes the header\n     *\n     * @param gfp\n     *            global flags\n     */\n    this.InitVbrTag = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        /**\n         * <PRE>\n         * Xing VBR pretends to be a 48kbs layer III frame.  (at 44.1kHz).\n         * (at 48kHz they use 56kbs since 48kbs frame not big enough for\n         * table of contents)\n         * let's always embed Xing header inside a 64kbs layer III frame.\n         * this gives us enough room for a LAME version string too.\n         * size determined by sampling frequency (MPEG1)\n         * 32kHz:    216 bytes@48kbs    288bytes@ 64kbs\n         * 44.1kHz:  156 bytes          208bytes@64kbs     (+1 if padding = 1)\n         * 48kHz:    144 bytes          192\n         *\n         * MPEG 2 values are the same since the framesize and samplerate\n         * are each reduced by a factor of 2.\n         * </PRE>\n         */\n        var kbps_header;\n        if (1 == gfp.version) {\n            kbps_header = XING_BITRATE1;\n        } else {\n            if (gfp.out_samplerate < 16000)\n                kbps_header = XING_BITRATE25;\n            else\n                kbps_header = XING_BITRATE2;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            kbps_header = gfp.brate;\n\n        // make sure LAME Header fits into Frame\n        var totalFrameSize = ((gfp.version + 1) * 72000 * kbps_header)\n            / gfp.out_samplerate;\n        var headerSize = (gfc.sideinfo_len + LAMEHEADERSIZE);\n        gfc.VBR_seek_table.TotalFrameSize = totalFrameSize;\n        if (totalFrameSize < headerSize || totalFrameSize > MAXFRAMESIZE) {\n            /* disable tag, it wont fit */\n            gfp.bWriteVbrTag = false;\n            return;\n        }\n\n        gfc.VBR_seek_table.nVbrNumFrames = 0;\n        gfc.VBR_seek_table.nBytesWritten = 0;\n        gfc.VBR_seek_table.sum = 0;\n\n        gfc.VBR_seek_table.seen = 0;\n        gfc.VBR_seek_table.want = 1;\n        gfc.VBR_seek_table.pos = 0;\n\n        if (gfc.VBR_seek_table.bag == null) {\n            gfc.VBR_seek_table.bag = new int[400];\n            gfc.VBR_seek_table.size = 400;\n        }\n\n        // write dummy VBR tag of all 0's into bitstream\n        var buffer = new_byte(MAXFRAMESIZE);\n\n        setLameTagFrameHeader(gfp, buffer);\n        var n = gfc.VBR_seek_table.TotalFrameSize;\n        for (var i = 0; i < n; ++i) {\n            bs.add_dummy_byte(gfp, buffer[i] & 0xff, 1);\n        }\n    }\n\n    /**\n     * Fast CRC-16 computation (uses table crc16Lookup).\n     *\n     * @param value\n     * @param crc\n     * @return\n     */\n    function crcUpdateLookup(value, crc) {\n        var tmp = crc ^ value;\n        crc = (crc >> 8) ^ crc16Lookup[tmp & 0xff];\n        return crc;\n    }\n\n    this.updateMusicCRC = function (crc, buffer, bufferPos, size) {\n        for (var i = 0; i < size; ++i)\n            crc[0] = crcUpdateLookup(buffer[bufferPos + i], crc[0]);\n    }\n\n    /**\n     * Write LAME info: mini version + info on various switches used (Jonathan\n     * Dee 2001/08/31).\n     *\n     * @param gfp\n     *            global flags\n     * @param musicLength\n     *            music length\n     * @param streamBuffer\n     *            pointer to output buffer\n     * @param streamBufferPos\n     *            offset into the output buffer\n     * @param crc\n     *            computation of CRC-16 of Lame Tag so far (starting at frame\n     *            sync)\n     * @return number of bytes written to the stream\n     */\n    function putLameVBR(gfp, musicLength, streamBuffer, streamBufferPos, crc) {\n        var gfc = gfp.internal_flags;\n        var bytesWritten = 0;\n\n        /* encoder delay */\n        var encDelay = gfp.encoder_delay;\n        /* encoder padding */\n        var encPadding = gfp.encoder_padding;\n\n        /* recall: gfp.VBR_q is for example set by the switch -V */\n        /* gfp.quality by -q, -h, -f, etc */\n        var quality = (100 - 10 * gfp.VBR_q - gfp.quality);\n\n        var version = v.getLameVeryShortVersion();\n        var vbr;\n        var revision = 0x00;\n        var revMethod;\n        // numbering different in vbr_mode vs. Lame tag\n        var vbrTypeTranslator = [1, 5, 3, 2, 4, 0, 3];\n        var lowpass = 0 | (((gfp.lowpassfreq / 100.0) + .5) > 255 ? 255\n                : (gfp.lowpassfreq / 100.0) + .5);\n        var peakSignalAmplitude = 0;\n        var radioReplayGain = 0;\n        var audiophileReplayGain = 0;\n        var noiseShaping = gfp.internal_flags.noise_shaping;\n        var stereoMode = 0;\n        var nonOptimal = 0;\n        var sourceFreq = 0;\n        var misc = 0;\n        var musicCRC = 0;\n\n        // psy model type: Gpsycho or NsPsytune\n        var expNPsyTune = (gfp.exp_nspsytune & 1) != 0;\n        var safeJoint = (gfp.exp_nspsytune & 2) != 0;\n        var noGapMore = false;\n        var noGapPrevious = false;\n        var noGapCount = gfp.internal_flags.nogap_total;\n        var noGapCurr = gfp.internal_flags.nogap_current;\n\n        // 4 bits\n        var athType = gfp.ATHtype;\n        var flags = 0;\n\n        // vbr modes\n        var abrBitrate;\n        switch (gfp.VBR) {\n            case vbr_abr:\n                abrBitrate = gfp.VBR_mean_bitrate_kbps;\n                break;\n            case vbr_off:\n                abrBitrate = gfp.brate;\n                break;\n            default:\n                abrBitrate = gfp.VBR_min_bitrate_kbps;\n        }\n\n        // revision and vbr method\n        if (gfp.VBR.ordinal() < vbrTypeTranslator.length)\n            vbr = vbrTypeTranslator[gfp.VBR.ordinal()];\n        else\n            vbr = 0x00; // unknown\n\n        revMethod = 0x10 * revision + vbr;\n\n        // ReplayGain\n        if (gfc.findReplayGain) {\n            if (gfc.RadioGain > 0x1FE)\n                gfc.RadioGain = 0x1FE;\n            if (gfc.RadioGain < -0x1FE)\n                gfc.RadioGain = -0x1FE;\n\n            // set name code\n            radioReplayGain = 0x2000;\n            // set originator code to `determined automatically'\n            radioReplayGain |= 0xC00;\n\n            if (gfc.RadioGain >= 0) {\n                // set gain adjustment\n                radioReplayGain |= gfc.RadioGain;\n            } else {\n                // set the sign bit\n                radioReplayGain |= 0x200;\n                // set gain adjustment\n                radioReplayGain |= -gfc.RadioGain;\n            }\n        }\n\n        // peak sample\n        if (gfc.findPeakSample)\n            peakSignalAmplitude = Math\n                .abs(0 | ((( gfc.PeakSample) / 32767.0) * Math.pow(2, 23) + .5));\n\n        // nogap\n        if (noGapCount != -1) {\n            if (noGapCurr > 0)\n                noGapPrevious = true;\n\n            if (noGapCurr < noGapCount - 1)\n                noGapMore = true;\n        }\n\n        // flags\n        flags = athType + ((expNPsyTune ? 1 : 0) << 4)\n            + ((safeJoint ? 1 : 0) << 5) + ((noGapMore ? 1 : 0) << 6)\n            + ((noGapPrevious ? 1 : 0) << 7);\n\n        if (quality < 0)\n            quality = 0;\n\n        // stereo mode field (Intensity stereo is not implemented)\n        switch (gfp.mode) {\n            case MONO:\n                stereoMode = 0;\n                break;\n            case STEREO:\n                stereoMode = 1;\n                break;\n            case DUAL_CHANNEL:\n                stereoMode = 2;\n                break;\n            case JOINT_STEREO:\n                if (gfp.force_ms)\n                    stereoMode = 4;\n                else\n                    stereoMode = 3;\n                break;\n            case NOT_SET:\n            //$FALL-THROUGH$\n            default:\n                stereoMode = 7;\n                break;\n        }\n\n        if (gfp.in_samplerate <= 32000)\n            sourceFreq = 0x00;\n        else if (gfp.in_samplerate == 48000)\n            sourceFreq = 0x02;\n        else if (gfp.in_samplerate > 48000)\n            sourceFreq = 0x03;\n        else {\n            // default is 44100Hz\n            sourceFreq = 0x01;\n        }\n\n        // Check if the user overrided the default LAME behavior with some\n        // nasty options\n        if (gfp.short_blocks == ShortBlock.short_block_forced\n            || gfp.short_blocks == ShortBlock.short_block_dispensed\n            || ((gfp.lowpassfreq == -1) && (gfp.highpassfreq == -1)) || /* \"-k\" */\n            (gfp.scale_left < gfp.scale_right)\n            || (gfp.scale_left > gfp.scale_right)\n            || (gfp.disable_reservoir && gfp.brate < 320) || gfp.noATH\n            || gfp.ATHonly || (athType == 0) || gfp.in_samplerate <= 32000)\n            nonOptimal = 1;\n\n        misc = noiseShaping + (stereoMode << 2) + (nonOptimal << 5)\n            + (sourceFreq << 6);\n\n        musicCRC = gfc.nMusicCRC;\n\n        // Write all this information into the stream\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, quality);\n        bytesWritten += 4;\n\n        for (var j = 0; j < 9; j++) {\n            streamBuffer[streamBufferPos + bytesWritten + j] = 0xff & version .charAt(j);\n        }\n        bytesWritten += 9;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & revMethod;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & lowpass;\n        bytesWritten++;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten,\n            peakSignalAmplitude);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            radioReplayGain);\n        bytesWritten += 2;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten,\n            audiophileReplayGain);\n        bytesWritten += 2;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & flags;\n        bytesWritten++;\n\n        if (abrBitrate >= 255)\n            streamBuffer[streamBufferPos + bytesWritten] = 0xFF;\n        else\n            streamBuffer[streamBufferPos + bytesWritten] = 0xff & abrBitrate;\n        bytesWritten++;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & (encDelay >> 4);\n        streamBuffer[streamBufferPos + bytesWritten + 1] = 0xff & ((encDelay << 4) + (encPadding >> 8));\n        streamBuffer[streamBufferPos + bytesWritten + 2] = 0xff & encPadding;\n\n        bytesWritten += 3;\n\n        streamBuffer[streamBufferPos + bytesWritten] = 0xff & misc;\n        bytesWritten++;\n\n        // unused in rev0\n        streamBuffer[streamBufferPos + bytesWritten++] = 0;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, gfp.preset);\n        bytesWritten += 2;\n\n        createInteger(streamBuffer, streamBufferPos + bytesWritten, musicLength);\n        bytesWritten += 4;\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, musicCRC);\n        bytesWritten += 2;\n\n        // Calculate tag CRC.... must be done here, since it includes previous\n        // information\n\n        for (var i = 0; i < bytesWritten; i++)\n            crc = crcUpdateLookup(streamBuffer[streamBufferPos + i], crc);\n\n        createShort(streamBuffer, streamBufferPos + bytesWritten, crc);\n        bytesWritten += 2;\n\n        return bytesWritten;\n    }\n\n    function skipId3v2(fpStream) {\n        // seek to the beginning of the stream\n        fpStream.seek(0);\n        // read 10 bytes in case there's an ID3 version 2 header here\n        var id3v2Header = new_byte(10);\n        fpStream.readFully(id3v2Header);\n        /* does the stream begin with the ID3 version 2 file identifier? */\n        var id3v2TagSize;\n        if (!new String(id3v2Header, \"ISO-8859-1\").startsWith(\"ID3\")) {\n            /*\n             * the tag size (minus the 10-byte header) is encoded into four\n             * bytes where the most significant bit is clear in each byte\n             */\n            id3v2TagSize = (((id3v2Header[6] & 0x7f) << 21)\n                | ((id3v2Header[7] & 0x7f) << 14)\n                | ((id3v2Header[8] & 0x7f) << 7) | (id3v2Header[9] & 0x7f))\n                + id3v2Header.length;\n        } else {\n            /* no ID3 version 2 tag in this stream */\n            id3v2TagSize = 0;\n        }\n        return id3v2TagSize;\n    }\n\n    this.getLameTagFrame = function (gfp, buffer) {\n        var gfc = gfp.internal_flags;\n\n        if (!gfp.bWriteVbrTag) {\n            return 0;\n        }\n        if (gfc.Class_ID != Lame.LAME_ID) {\n            return 0;\n        }\n        if (gfc.VBR_seek_table.pos <= 0) {\n            return 0;\n        }\n        if (buffer.length < gfc.VBR_seek_table.TotalFrameSize) {\n            return gfc.VBR_seek_table.TotalFrameSize;\n        }\n\n        Arrays.fill(buffer, 0, gfc.VBR_seek_table.TotalFrameSize, 0);\n\n        // 4 bytes frame header\n        setLameTagFrameHeader(gfp, buffer);\n\n        // Create TOC entries\n        var toc = new_byte(NUMTOCENTRIES);\n\n        if (gfp.free_format) {\n            for (var i = 1; i < NUMTOCENTRIES; ++i)\n                toc[i] = 0xff & (255 * i / 100);\n        } else {\n            xingSeekTable(gfc.VBR_seek_table, toc);\n        }\n\n        // Start writing the tag after the zero frame\n        var streamIndex = gfc.sideinfo_len;\n        /**\n         * Note: Xing header specifies that Xing data goes in the ancillary data\n         * with NO ERROR PROTECTION. If error protecton in enabled, the Xing\n         * data still starts at the same offset, and now it is in sideinfo data\n         * block, and thus will not decode correctly by non-Xing tag aware\n         * players\n         */\n        if (gfp.error_protection)\n            streamIndex -= 2;\n\n        // Put Vbr tag\n        if (gfp.VBR == VbrMode.vbr_off) {\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag1.charAt(3);\n\n        } else {\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(0);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(1);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(2);\n            buffer[streamIndex++] = 0xff & VBRTag0.charAt(3);\n        }\n\n        // Put header flags\n        createInteger(buffer, streamIndex, FRAMES_FLAG + BYTES_FLAG + TOC_FLAG\n            + VBR_SCALE_FLAG);\n        streamIndex += 4;\n\n        // Put Total Number of frames\n        createInteger(buffer, streamIndex, gfc.VBR_seek_table.nVbrNumFrames);\n        streamIndex += 4;\n\n        // Put total audio stream size, including Xing/LAME Header\n        var streamSize = (gfc.VBR_seek_table.nBytesWritten + gfc.VBR_seek_table.TotalFrameSize);\n        createInteger(buffer, streamIndex, 0 | streamSize);\n        streamIndex += 4;\n\n        /* Put TOC */\n        System.arraycopy(toc, 0, buffer, streamIndex, toc.length);\n        streamIndex += toc.length;\n\n        if (gfp.error_protection) {\n            // (jo) error_protection: add crc16 information to header\n            bs.CRC_writeheader(gfc, buffer);\n        }\n\n        // work out CRC so far: initially crc = 0\n        var crc = 0x00;\n        for (var i = 0; i < streamIndex; i++)\n            crc = crcUpdateLookup(buffer[i], crc);\n        // Put LAME VBR info\n        streamIndex += putLameVBR(gfp, streamSize, buffer, streamIndex, crc);\n\n        return gfc.VBR_seek_table.TotalFrameSize;\n    }\n\n    /**\n     * Write final VBR tag to the file.\n     *\n     * @param gfp\n     *            global flags\n     * @param stream\n     *            stream to add the VBR tag to\n     * @return 0 (OK), -1 else\n     * @throws IOException\n     *             I/O error\n     */\n    this.putVbrTag = function (gfp, stream) {\n        var gfc = gfp.internal_flags;\n\n        if (gfc.VBR_seek_table.pos <= 0)\n            return -1;\n\n        // Seek to end of file\n        stream.seek(stream.length());\n\n        // Get file size, abort if file has zero length.\n        if (stream.length() == 0)\n            return -1;\n\n        // The VBR tag may NOT be located at the beginning of the stream. If an\n        // ID3 version 2 tag was added, then it must be skipped to write the VBR\n        // tag data.\n        var id3v2TagSize = skipId3v2(stream);\n\n        // Seek to the beginning of the stream\n        stream.seek(id3v2TagSize);\n\n        var buffer = new_byte(MAXFRAMESIZE);\n        var bytes = getLameTagFrame(gfp, buffer);\n        if (bytes > buffer.length) {\n            return -1;\n        }\n\n        if (bytes < 1) {\n            return 0;\n        }\n\n        // Put it all to disk again\n        stream.write(buffer, 0, bytes);\n        // success\n        return 0;\n    }\n\n}\n\nmodule.exports = VBRTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/VBRTag.js\n// module id = E7gl\n// module chunks = 0","function MeanBits(meanBits) {\n    this.bits = meanBits;\n}\n\nmodule.exports = MeanBits;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/MeanBits.js\n// module id = ELaV\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = EqjI\n// module chunks = 0","var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = FeBl\n// module chunks = 0","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/createError.js\n// module id = FtD3\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isURLSameOrigin.js\n// module id = GHBc\n// module chunks = 0","/*\n * MP3 quantization\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 1999-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2007 Robert Hegemann\n *      Copyright (c) 2001-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.     See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Quantize.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar VBRQuantize = require('./VBRQuantize.js');\nvar CalcNoiseResult = require('./CalcNoiseResult.js');\nvar CalcNoiseData = require('./CalcNoiseData.js');\nvar Encoder = require('./Encoder.js');\nvar GrInfo = require('./GrInfo.js');\nvar L3Side = require('./L3Side.js');\n\nfunction Quantize() {\n    var bs;\n    this.rv = null;\n    var rv;\n    this.qupvt = null;\n    var qupvt;\n\n    var vbr = new VBRQuantize();\n    var tk;\n\n    this.setModules = function (_bs, _rv, _qupvt, _tk) {\n        bs = _bs;\n        rv = _rv;\n        this.rv = _rv;\n        qupvt = _qupvt;\n        this.qupvt = _qupvt;\n        tk = _tk;\n        vbr.setModules(qupvt, tk);\n    }\n\n    /**\n     * convert from L/R <. Mid/Side\n     */\n    this.ms_convert = function (l3_side, gr) {\n        for (var i = 0; i < 576; ++i) {\n            var l = l3_side.tt[gr][0].xr[i];\n            var r = l3_side.tt[gr][1].xr[i];\n            l3_side.tt[gr][0].xr[i] = (l + r) * (Util.SQRT2 * 0.5);\n            l3_side.tt[gr][1].xr[i] = (l - r) * (Util.SQRT2 * 0.5);\n        }\n    };\n\n    /**\n     * mt 6/99\n     *\n     * initializes cod_info, scalefac and xrpow\n     *\n     * returns 0 if all energies in xr are zero, else 1\n     */\n    function init_xrpow_core(cod_info, xrpow, upper, sum) {\n        sum = 0;\n        for (var i = 0; i <= upper; ++i) {\n            var tmp = Math.abs(cod_info.xr[i]);\n            sum += tmp;\n            xrpow[i] = Math.sqrt(tmp * Math.sqrt(tmp));\n\n            if (xrpow[i] > cod_info.xrpow_max)\n                cod_info.xrpow_max = xrpow[i];\n        }\n        return sum;\n    }\n\n    this.init_xrpow = function (gfc, cod_info, xrpow) {\n        var sum = 0;\n        var upper = 0 | cod_info.max_nonzero_coeff;\n\n        assert(xrpow != null);\n        cod_info.xrpow_max = 0;\n\n        /*\n         * check if there is some energy we have to quantize and calculate xrpow\n         * matching our fresh scalefactors\n         */\n        assert(0 <= upper && upper <= 575);\n\n        Arrays.fill(xrpow, upper, 576, 0);\n\n        sum = init_xrpow_core(cod_info, xrpow, upper, sum);\n\n        /*\n         * return 1 if we have something to quantize, else 0\n         */\n        if (sum > 1E-20) {\n            var j = 0;\n            if ((gfc.substep_shaping & 2) != 0)\n                j = 1;\n\n            for (var i = 0; i < cod_info.psymax; i++)\n                gfc.pseudohalf[i] = j;\n\n            return true;\n        }\n\n        Arrays.fill(cod_info.l3_enc, 0, 576, 0);\n        return false;\n    }\n\n    /**\n     * Gabriel Bouvigne feb/apr 2003<BR>\n     * Analog silence detection in partitionned sfb21 or sfb12 for short blocks\n     *\n     * From top to bottom of sfb, changes to 0 coeffs which are below ath. It\n     * stops on the first coeff higher than ath.\n     */\n    function psfb21_analogsilence(gfc, cod_info) {\n        var ath = gfc.ATH;\n        var xr = cod_info.xr;\n\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            /* NORM, START or STOP type, but not SHORT blocks */\n            var stop = false;\n            for (var gsfb = Encoder.PSFB21 - 1; gsfb >= 0 && !stop; gsfb--) {\n                var start = gfc.scalefac_band.psfb21[gsfb];\n                var end = gfc.scalefac_band.psfb21[gsfb + 1];\n                var ath21 = qupvt.athAdjust(ath.adjust, ath.psfb21[gsfb],\n                    ath.floor);\n\n                if (gfc.nsPsy.longfact[21] > 1e-12)\n                    ath21 *= gfc.nsPsy.longfact[21];\n\n                for (var j = end - 1; j >= start; j--) {\n                    if (Math.abs(xr[j]) < ath21)\n                        xr[j] = 0;\n                    else {\n                        stop = true;\n                        break;\n                    }\n                }\n            }\n        } else {\n            /* note: short blocks coeffs are reordered */\n            for (var block = 0; block < 3; block++) {\n                var stop = false;\n                for (var gsfb = Encoder.PSFB12 - 1; gsfb >= 0 && !stop; gsfb--) {\n                    var start = gfc.scalefac_band.s[12]\n                        * 3\n                        + (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                        * block\n                        + (gfc.scalefac_band.psfb12[gsfb] - gfc.scalefac_band.psfb12[0]);\n                    var end = start\n                        + (gfc.scalefac_band.psfb12[gsfb + 1] - gfc.scalefac_band.psfb12[gsfb]);\n                    var ath12 = qupvt.athAdjust(ath.adjust, ath.psfb12[gsfb],\n                        ath.floor);\n\n                    if (gfc.nsPsy.shortfact[12] > 1e-12)\n                        ath12 *= gfc.nsPsy.shortfact[12];\n\n                    for (var j = end - 1; j >= start; j--) {\n                        if (Math.abs(xr[j]) < ath12)\n                            xr[j] = 0;\n                        else {\n                            stop = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    this.init_outer_loop = function (gfc, cod_info) {\n        /*\n         * initialize fresh cod_info\n         */\n        cod_info.part2_3_length = 0;\n        cod_info.big_values = 0;\n        cod_info.count1 = 0;\n        cod_info.global_gain = 210;\n        cod_info.scalefac_compress = 0;\n        /* mixed_block_flag, block_type was set in psymodel.c */\n        cod_info.table_select[0] = 0;\n        cod_info.table_select[1] = 0;\n        cod_info.table_select[2] = 0;\n        cod_info.subblock_gain[0] = 0;\n        cod_info.subblock_gain[1] = 0;\n        cod_info.subblock_gain[2] = 0;\n        cod_info.subblock_gain[3] = 0;\n        /* this one is always 0 */\n        cod_info.region0_count = 0;\n        cod_info.region1_count = 0;\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 0;\n        cod_info.count1table_select = 0;\n        cod_info.part2_length = 0;\n        cod_info.sfb_lmax = Encoder.SBPSY_l;\n        cod_info.sfb_smin = Encoder.SBPSY_s;\n        cod_info.psy_lmax = gfc.sfb21_extra ? Encoder.SBMAX_l : Encoder.SBPSY_l;\n        cod_info.psymax = cod_info.psy_lmax;\n        cod_info.sfbmax = cod_info.sfb_lmax;\n        cod_info.sfbdivide = 11;\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            cod_info.width[sfb] = gfc.scalefac_band.l[sfb + 1]\n                - gfc.scalefac_band.l[sfb];\n            /* which is always 0. */\n            cod_info.window[sfb] = 3;\n        }\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            var ixwork = new_float(576);\n\n            cod_info.sfb_smin = 0;\n            cod_info.sfb_lmax = 0;\n            if (cod_info.mixed_block_flag != 0) {\n                /*\n                 * MPEG-1: sfbs 0-7 long block, 3-12 short blocks MPEG-2(.5):\n                 * sfbs 0-5 long block, 3-12 short blocks\n                 */\n                cod_info.sfb_smin = 3;\n                cod_info.sfb_lmax = gfc.mode_gr * 2 + 4;\n            }\n            cod_info.psymax = cod_info.sfb_lmax\n                + 3\n                * ((gfc.sfb21_extra ? Encoder.SBMAX_s : Encoder.SBPSY_s) - cod_info.sfb_smin);\n            cod_info.sfbmax = cod_info.sfb_lmax + 3\n                * (Encoder.SBPSY_s - cod_info.sfb_smin);\n            cod_info.sfbdivide = cod_info.sfbmax - 18;\n            cod_info.psy_lmax = cod_info.sfb_lmax;\n            /* re-order the short blocks, for more efficient encoding below */\n            /* By Takehiro TOMINAGA */\n            /*\n             * Within each scalefactor band, data is given for successive time\n             * windows, beginning with window 0 and ending with window 2. Within\n             * each window, the quantized values are then arranged in order of\n             * increasing frequency...\n             */\n            var ix = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            System.arraycopy(cod_info.xr, 0, ixwork, 0, 576);\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                for (var window = 0; window < 3; window++) {\n                    for (var l = start; l < end; l++) {\n                        cod_info.xr[ix++] = ixwork[3 * l + window];\n                    }\n                }\n            }\n\n            var j = cod_info.sfb_lmax;\n            for (var sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                cod_info.width[j] = cod_info.width[j + 1] = cod_info.width[j + 2] = gfc.scalefac_band.s[sfb + 1]\n                    - gfc.scalefac_band.s[sfb];\n                cod_info.window[j] = 0;\n                cod_info.window[j + 1] = 1;\n                cod_info.window[j + 2] = 2;\n                j += 3;\n            }\n        }\n\n        cod_info.count1bits = 0;\n        cod_info.sfb_partition_table = qupvt.nr_of_sfb_block[0][0];\n        cod_info.slen[0] = 0;\n        cod_info.slen[1] = 0;\n        cod_info.slen[2] = 0;\n        cod_info.slen[3] = 0;\n\n        cod_info.max_nonzero_coeff = 575;\n\n        /*\n         * fresh scalefactors are all zero\n         */\n        Arrays.fill(cod_info.scalefac, 0);\n\n        psfb21_analogsilence(gfc, cod_info);\n    };\n\n    function BinSearchDirection(ordinal) {\n        this.ordinal = ordinal;\n    }\n\n    BinSearchDirection.BINSEARCH_NONE = new BinSearchDirection(0);\n    BinSearchDirection.BINSEARCH_UP = new BinSearchDirection(1);\n    BinSearchDirection.BINSEARCH_DOWN = new BinSearchDirection(2);\n\n    /**\n     * author/date??\n     *\n     * binary step size search used by outer_loop to get a quantizer step size\n     * to start with\n     */\n    function bin_search_StepSize(gfc, cod_info, desired_rate, ch, xrpow) {\n        var nBits;\n        var CurrentStep = gfc.CurrentStep[ch];\n        var flagGoneOver = false;\n        var start = gfc.OldValue[ch];\n        var Direction = BinSearchDirection.BINSEARCH_NONE;\n        cod_info.global_gain = start;\n        desired_rate -= cod_info.part2_length;\n\n        assert(CurrentStep != 0);\n        for (; ;) {\n            var step;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n\n            if (CurrentStep == 1 || nBits == desired_rate)\n                break;\n            /* nothing to adjust anymore */\n\n            if (nBits > desired_rate) {\n                /* increase Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_DOWN)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_UP;\n                step = CurrentStep;\n            } else {\n                /* decrease Quantize_StepSize */\n                if (Direction == BinSearchDirection.BINSEARCH_UP)\n                    flagGoneOver = true;\n\n                if (flagGoneOver)\n                    CurrentStep /= 2;\n                Direction = BinSearchDirection.BINSEARCH_DOWN;\n                step = -CurrentStep;\n            }\n            cod_info.global_gain += step;\n            if (cod_info.global_gain < 0) {\n                cod_info.global_gain = 0;\n                flagGoneOver = true;\n            }\n            if (cod_info.global_gain > 255) {\n                cod_info.global_gain = 255;\n                flagGoneOver = true;\n            }\n        }\n\n        assert(cod_info.global_gain >= 0);\n        assert(cod_info.global_gain < 256);\n\n        while (nBits > desired_rate && cod_info.global_gain < 255) {\n            cod_info.global_gain++;\n            nBits = tk.count_bits(gfc, xrpow, cod_info, null);\n        }\n        gfc.CurrentStep[ch] = (start - cod_info.global_gain >= 4) ? 4 : 2;\n        gfc.OldValue[ch] = cod_info.global_gain;\n        cod_info.part2_3_length = nBits;\n        return nBits;\n    }\n\n    this.trancate_smallspectrums = function (gfc, gi, l3_xmin, work) {\n        var distort = new_float(L3Side.SFBMAX);\n\n        if ((0 == (gfc.substep_shaping & 4) && gi.block_type == Encoder.SHORT_TYPE)\n            || (gfc.substep_shaping & 0x80) != 0)\n            return;\n        qupvt.calc_noise(gi, l3_xmin, distort, new CalcNoiseResult(), null);\n        for (var j = 0; j < 576; j++) {\n            var xr = 0.0;\n            if (gi.l3_enc[j] != 0)\n                xr = Math.abs(gi.xr[j]);\n            work[j] = xr;\n        }\n\n        var j = 0;\n        var sfb = 8;\n        if (gi.block_type == Encoder.SHORT_TYPE)\n            sfb = 6;\n        do {\n            var allowedNoise, trancateThreshold;\n            var nsame, start;\n\n            var width = gi.width[sfb];\n            j += width;\n            if (distort[sfb] >= 1.0)\n                continue;\n\n            Arrays.sort(work, j - width, width);\n            if (BitStream.EQ(work[j - 1], 0.0))\n                continue;\n            /* all zero sfb */\n\n            allowedNoise = (1.0 - distort[sfb]) * l3_xmin[sfb];\n            trancateThreshold = 0.0;\n            start = 0;\n            do {\n                var noise;\n                for (nsame = 1; start + nsame < width; nsame++)\n                    if (BitStream.NEQ(work[start + j - width], work[start + j\n                        + nsame - width]))\n                        break;\n\n                noise = work[start + j - width] * work[start + j - width]\n                    * nsame;\n                if (allowedNoise < noise) {\n                    if (start != 0)\n                        trancateThreshold = work[start + j - width - 1];\n                    break;\n                }\n                allowedNoise -= noise;\n                start += nsame;\n            } while (start < width);\n            if (BitStream.EQ(trancateThreshold, 0.0))\n                continue;\n\n            do {\n                if (Math.abs(gi.xr[j - width]) <= trancateThreshold)\n                    gi.l3_enc[j - width] = 0;\n            } while (--width > 0);\n        } while (++sfb < gi.psymax);\n\n        gi.part2_3_length = tk.noquant_count_bits(gfc, gi, null);\n    };\n\n    /**\n     * author/date??\n     *\n     * Function: Returns zero if there is a scalefac which has not been\n     * amplified. Otherwise it returns one.\n     */\n    function loop_break(cod_info) {\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++)\n            if (cod_info.scalefac[sfb]\n                + cod_info.subblock_gain[cod_info.window[sfb]] == 0)\n                return false;\n\n        return true;\n    }\n\n    /* mt 5/99: Function: Improved calc_noise for a single channel */\n\n    function penalties(noise) {\n        return Util.FAST_LOG10((0.368 + 0.632 * noise * noise * noise));\n    }\n\n    /**\n     * author/date??\n     *\n     * several different codes to decide which quantization is better\n     */\n    function get_klemm_noise(distort, gi) {\n        var klemm_noise = 1E-37;\n        for (var sfb = 0; sfb < gi.psymax; sfb++)\n            klemm_noise += penalties(distort[sfb]);\n\n        return Math.max(1e-20, klemm_noise);\n    }\n\n    function quant_compare(quant_comp, best, calc, gi, distort) {\n        /**\n         * noise is given in decibels (dB) relative to masking thesholds.<BR>\n         *\n         * over_noise: ??? (the previous comment is fully wrong)<BR>\n         * tot_noise: ??? (the previous comment is fully wrong)<BR>\n         * max_noise: max quantization noise\n         */\n        var better;\n\n        switch (quant_comp) {\n            default:\n            case 9:\n            {\n                if (best.over_count > 0) {\n                    /* there are distorted sfb */\n                    better = calc.over_SSD <= best.over_SSD;\n                    if (calc.over_SSD == best.over_SSD)\n                        better = calc.bits < best.bits;\n                } else {\n                    /* no distorted sfb */\n                    better = ((calc.max_noise < 0) && ((calc.max_noise * 10 + calc.bits) <= (best.max_noise * 10 + best.bits)));\n                }\n                break;\n            }\n\n            case 0:\n                better = calc.over_count < best.over_count\n                    || (calc.over_count == best.over_count && calc.over_noise < best.over_noise)\n                    || (calc.over_count == best.over_count\n                    && BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n\n            case 8:\n                calc.max_noise = get_klemm_noise(distort, gi);\n            //$FALL-THROUGH$\n            case 1:\n                better = calc.max_noise < best.max_noise;\n                break;\n            case 2:\n                better = calc.tot_noise < best.tot_noise;\n                break;\n            case 3:\n                better = (calc.tot_noise < best.tot_noise)\n                    && (calc.max_noise < best.max_noise);\n                break;\n            case 4:\n                better = (calc.max_noise <= 0.0 && best.max_noise > 0.2)\n                    || (calc.max_noise <= 0.0 && best.max_noise < 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise)\n                    || (calc.max_noise <= 0.0 && best.max_noise > 0.0\n                    && best.max_noise > calc.max_noise - 0.2 && calc.tot_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.05\n                    && best.max_noise > calc.max_noise - 0.1 && calc.tot_noise\n                    + calc.over_noise < best.tot_noise\n                    + best.over_noise)\n                    || (calc.max_noise > 0.0 && best.max_noise > -0.1\n                    && best.max_noise > calc.max_noise - 0.15 && calc.tot_noise\n                    + calc.over_noise + calc.over_noise < best.tot_noise\n                    + best.over_noise + best.over_noise);\n                break;\n            case 5:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && calc.tot_noise < best.tot_noise);\n                break;\n            case 6:\n                better = calc.over_noise < best.over_noise\n                    || (BitStream.EQ(calc.over_noise, best.over_noise) && (calc.max_noise < best.max_noise || (BitStream\n                        .EQ(calc.max_noise, best.max_noise) && calc.tot_noise <= best.tot_noise)));\n                break;\n            case 7:\n                better = calc.over_count < best.over_count\n                    || calc.over_noise < best.over_noise;\n                break;\n        }\n\n        if (best.over_count == 0) {\n            /*\n             * If no distorted bands, only use this quantization if it is\n             * better, and if it uses less bits. Unfortunately, part2_3_length\n             * is sometimes a poor estimator of the final size at low bitrates.\n             */\n            better = better && calc.bits < best.bits;\n        }\n\n        return better;\n    }\n\n    /**\n     * author/date??\n     *\n     * <PRE>\n     *  Amplify the scalefactor bands that violate the masking threshold.\n     *  See ISO 11172-3 Section C.1.5.4.3.5\n     *\n     *  distort[] = noise/masking\n     *  distort[] > 1   ==> noise is not masked\n     *  distort[] < 1   ==> noise is masked\n     *  max_dist = maximum value of distort[]\n     *\n     *  Three algorithms:\n     *  noise_shaping_amp\n     *        0             Amplify all bands with distort[]>1.\n     *\n     *        1             Amplify all bands with distort[] >= max_dist^(.5);\n     *                     ( 50% in the db scale)\n     *\n     *        2             Amplify first band with distort[] >= max_dist;\n     *\n     *\n     *  For algorithms 0 and 1, if max_dist < 1, then amplify all bands\n     *  with distort[] >= .95*max_dist.  This is to make sure we always\n     *  amplify at least one band.\n     * </PRE>\n     */\n    function amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n        var ifqstep34;\n\n        if (cod_info.scalefac_scale == 0) {\n            ifqstep34 = 1.29683955465100964055;\n            /* 2**(.75*.5) */\n        } else {\n            ifqstep34 = 1.68179283050742922612;\n            /* 2**(.75*1) */\n        }\n\n        /* compute maximum value of distort[] */\n        var trigger = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            if (trigger < distort[sfb])\n                trigger = distort[sfb];\n        }\n\n        var noise_shaping_amp = gfc.noise_shaping_amp;\n        if (noise_shaping_amp == 3) {\n            if (bRefine)\n                noise_shaping_amp = 2;\n            else\n                noise_shaping_amp = 1;\n        }\n        switch (noise_shaping_amp) {\n            case 2:\n                /* amplify exactly 1 band */\n                break;\n\n            case 1:\n                /* amplify bands within 50% of max (on db scale) */\n                if (trigger > 1.0)\n                    trigger = Math.pow(trigger, .5);\n                else\n                    trigger *= .95;\n                break;\n\n            case 0:\n            default:\n                /* ISO algorithm. amplify all bands with distort>1 */\n                if (trigger > 1.0)\n                    trigger = 1.0;\n                else\n                    trigger *= .95;\n                break;\n        }\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var l;\n            j += width;\n            if (distort[sfb] < trigger)\n                continue;\n\n            if ((gfc.substep_shaping & 2) != 0) {\n                gfc.pseudohalf[sfb] = (0 == gfc.pseudohalf[sfb]) ? 1 : 0;\n                if (0 == gfc.pseudohalf[sfb] && gfc.noise_shaping_amp == 2)\n                    return;\n            }\n            cod_info.scalefac[sfb]++;\n            for (l = -width; l < 0; l++) {\n                xrpow[j + l] *= ifqstep34;\n                if (xrpow[j + l] > cod_info.xrpow_max)\n                    cod_info.xrpow_max = xrpow[j + l];\n            }\n\n            if (gfc.noise_shaping_amp == 2)\n                return;\n        }\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * turns on scalefac scale and adjusts scalefactors\n     */\n    function inc_scalefac_scale(cod_info, xrpow) {\n        var ifqstep34 = 1.29683955465100964055;\n\n        var j = 0;\n        for (var sfb = 0; sfb < cod_info.sfbmax; sfb++) {\n            var width = cod_info.width[sfb];\n            var s = cod_info.scalefac[sfb];\n            if (cod_info.preflag != 0)\n                s += qupvt.pretab[sfb];\n            j += width;\n            if ((s & 1) != 0) {\n                s++;\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= ifqstep34;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n            cod_info.scalefac[sfb] = s >> 1;\n        }\n        cod_info.preflag = 0;\n        cod_info.scalefac_scale = 1;\n    }\n\n    /**\n     * Takehiro Tominaga 2000-xx-xx\n     *\n     * increases the subblock gain and adjusts scalefactors\n     */\n    function inc_subblock_gain(gfc, cod_info, xrpow) {\n        var sfb;\n        var scalefac = cod_info.scalefac;\n\n        /* subbloc_gain can't do anything in the long block region */\n        for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n            if (scalefac[sfb] >= 16)\n                return true;\n        }\n\n        for (var window = 0; window < 3; window++) {\n            var s1 = 0;\n            var s2 = 0;\n\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbdivide; sfb += 3) {\n                if (s1 < scalefac[sfb])\n                    s1 = scalefac[sfb];\n            }\n            for (; sfb < cod_info.sfbmax; sfb += 3) {\n                if (s2 < scalefac[sfb])\n                    s2 = scalefac[sfb];\n            }\n\n            if (s1 < 16 && s2 < 8)\n                continue;\n\n            if (cod_info.subblock_gain[window] >= 7)\n                return true;\n\n            /*\n             * even though there is no scalefactor for sfb12 subblock gain\n             * affects upper frequencies too, that's why we have to go up to\n             * SBMAX_s\n             */\n            cod_info.subblock_gain[window]++;\n            var j = gfc.scalefac_band.l[cod_info.sfb_lmax];\n            for (sfb = cod_info.sfb_lmax + window; sfb < cod_info.sfbmax; sfb += 3) {\n                var amp;\n                var width = cod_info.width[sfb];\n                var s = scalefac[sfb];\n                assert(s >= 0);\n                s = s - (4 >> cod_info.scalefac_scale);\n                if (s >= 0) {\n                    scalefac[sfb] = s;\n                    j += width * 3;\n                    continue;\n                }\n\n                scalefac[sfb] = 0;\n                {\n                    var gain = 210 + (s << (cod_info.scalefac_scale + 1));\n                    amp = qupvt.IPOW20(gain);\n                }\n                j += width * (window + 1);\n                for (var l = -width; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n                j += width * (3 - window - 1);\n            }\n\n            {\n                var amp = qupvt.IPOW20(202);\n                j += cod_info.width[sfb] * (window + 1);\n                for (var l = -cod_info.width[sfb]; l < 0; l++) {\n                    xrpow[j + l] *= amp;\n                    if (xrpow[j + l] > cod_info.xrpow_max)\n                        cod_info.xrpow_max = xrpow[j + l];\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * <PRE>\n     *  Takehiro Tominaga /date??\n     *  Robert Hegemann 2000-09-06: made a function of it\n     *\n     *  amplifies scalefactor bands,\n     *   - if all are already amplified returns 0\n     *   - if some bands are amplified too much:\n     *      * try to increase scalefac_scale\n     *      * if already scalefac_scale was set\n     *          try on short blocks to increase subblock gain\n     * </PRE>\n     */\n    function balance_noise(gfp, cod_info, distort, xrpow, bRefine) {\n        var gfc = gfp.internal_flags;\n\n        amp_scalefac_bands(gfp, cod_info, distort, xrpow, bRefine);\n\n        /*\n         * check to make sure we have not amplified too much loop_break returns\n         * 0 if there is an unamplified scalefac scale_bitcount returns 0 if no\n         * scalefactors are too large\n         */\n\n        var status = loop_break(cod_info);\n\n        if (status)\n            return false;\n        /* all bands amplified */\n\n        /*\n         * not all scalefactors have been amplified. so these scalefacs are\n         * possibly valid. encode them:\n         */\n        if (gfc.mode_gr == 2)\n            status = tk.scale_bitcount(cod_info);\n        else\n            status = tk.scale_bitcount_lsf(gfc, cod_info);\n\n        if (!status)\n            return true;\n        /* amplified some bands not exceeding limits */\n\n        /*\n         * some scalefactors are too large. lets try setting scalefac_scale=1\n         */\n        if (gfc.noise_shaping > 1) {\n            Arrays.fill(gfc.pseudohalf, 0);\n            if (0 == cod_info.scalefac_scale) {\n                inc_scalefac_scale(cod_info, xrpow);\n                status = false;\n            } else {\n                if (cod_info.block_type == Encoder.SHORT_TYPE\n                    && gfc.subblock_gain > 0) {\n                    status = (inc_subblock_gain(gfc, cod_info, xrpow) || loop_break(cod_info));\n                }\n            }\n        }\n\n        if (!status) {\n            if (gfc.mode_gr == 2)\n                status = tk.scale_bitcount(cod_info);\n            else\n                status = tk.scale_bitcount_lsf(gfc, cod_info);\n        }\n        return !status;\n    }\n\n    /**\n     * <PRE>\n     *  Function: The outer iteration loop controls the masking conditions\n     *  of all scalefactorbands. It computes the best scalefac and\n     *  global gain. This module calls the inner iteration loop\n     *\n     *  mt 5/99 completely rewritten to allow for bit reservoir control,\n     *  mid/side channels with L/R or mid/side masking thresholds,\n     *  and chooses best quantization instead of last quantization when\n     *  no distortion free quantization can be found.\n     *\n     *  added VBR support mt 5/99\n     *\n     *  some code shuffle rh 9/00\n     * </PRE>\n     *\n     * @param l3_xmin\n     *            allowed distortion\n     * @param xrpow\n     *            coloured magnitudes of spectral\n     * @param targ_bits\n     *            maximum allowed bits\n     */\n    this.outer_loop = function (gfp, cod_info, l3_xmin, xrpow, ch, targ_bits) {\n        var gfc = gfp.internal_flags;\n        var cod_info_w = new GrInfo();\n        var save_xrpow = new_float(576);\n        var distort = new_float(L3Side.SFBMAX);\n        var best_noise_info = new CalcNoiseResult();\n        var better;\n        var prev_noise = new CalcNoiseData();\n        var best_part2_3_length = 9999999;\n        var bEndOfSearch = false;\n        var bRefine = false;\n        var best_ggain_pass1 = 0;\n\n        bin_search_StepSize(gfc, cod_info, targ_bits, ch, xrpow);\n\n        if (0 == gfc.noise_shaping)\n        /* fast mode, no noise shaping, we are ready */\n            return 100;\n        /* default noise_info.over_count */\n\n        /* compute the distortion in this quantization */\n        /* coefficients and thresholds both l/r (or both mid/side) */\n        qupvt.calc_noise(cod_info, l3_xmin, distort, best_noise_info,\n            prev_noise);\n        best_noise_info.bits = cod_info.part2_3_length;\n\n        cod_info_w.assign(cod_info);\n        var age = 0;\n        System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n\n        while (!bEndOfSearch) {\n            /* BEGIN MAIN LOOP */\n            do {\n                var noise_info = new CalcNoiseResult();\n                var search_limit;\n                var maxggain = 255;\n\n                /*\n                 * When quantization with no distorted bands is found, allow up\n                 * to X new unsuccesful tries in serial. This gives us more\n                 * possibilities for different quant_compare modes. Much more\n                 * than 3 makes not a big difference, it is only slower.\n                 */\n\n                if ((gfc.substep_shaping & 2) != 0) {\n                    search_limit = 20;\n                } else {\n                    search_limit = 3;\n                }\n\n                /*\n                 * Check if the last scalefactor band is distorted. in VBR mode\n                 * we can't get rid of the distortion, so quit now and VBR mode\n                 * will try again with more bits. (makes a 10% speed increase,\n                 * the files I tested were binary identical, 2000/05/20 Robert\n                 * Hegemann) distort[] > 1 means noise > allowed noise\n                 */\n                if (gfc.sfb21_extra) {\n                    if (distort[cod_info_w.sfbmax] > 1.0)\n                        break;\n                    if (cod_info_w.block_type == Encoder.SHORT_TYPE\n                        && (distort[cod_info_w.sfbmax + 1] > 1.0 || distort[cod_info_w.sfbmax + 2] > 1.0))\n                        break;\n                }\n\n                /* try a new scalefactor conbination on cod_info_w */\n                if (!balance_noise(gfp, cod_info_w, distort, xrpow, bRefine))\n                    break;\n                if (cod_info_w.scalefac_scale != 0)\n                    maxggain = 254;\n\n                /*\n                 * inner_loop starts with the initial quantization step computed\n                 * above and slowly increases until the bits < huff_bits. Thus\n                 * it is important not to start with too large of an inital\n                 * quantization step. Too small is ok, but inner_loop will take\n                 * longer\n                 */\n                var huff_bits = targ_bits - cod_info_w.part2_length;\n                if (huff_bits <= 0)\n                    break;\n\n                /*\n                 * increase quantizer stepsize until needed bits are below\n                 * maximum\n                 */\n                while ((cod_info_w.part2_3_length = tk.count_bits(gfc, xrpow,\n                    cod_info_w, prev_noise)) > huff_bits\n                && cod_info_w.global_gain <= maxggain)\n                    cod_info_w.global_gain++;\n\n                if (cod_info_w.global_gain > maxggain)\n                    break;\n\n                if (best_noise_info.over_count == 0) {\n\n                    while ((cod_info_w.part2_3_length = tk.count_bits(gfc,\n                        xrpow, cod_info_w, prev_noise)) > best_part2_3_length\n                    && cod_info_w.global_gain <= maxggain)\n                        cod_info_w.global_gain++;\n\n                    if (cod_info_w.global_gain > maxggain)\n                        break;\n                }\n\n                /* compute the distortion in this quantization */\n                qupvt.calc_noise(cod_info_w, l3_xmin, distort, noise_info,\n                    prev_noise);\n                noise_info.bits = cod_info_w.part2_3_length;\n\n                /*\n                 * check if this quantization is better than our saved\n                 * quantization\n                 */\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    better = gfp.quant_comp;\n                } else\n                    better = gfp.quant_comp_short;\n\n                better = quant_compare(better, best_noise_info, noise_info,\n                    cod_info_w, distort) ? 1 : 0;\n\n                /* save data so we can restore this quantization later */\n                if (better != 0) {\n                    best_part2_3_length = cod_info.part2_3_length;\n                    best_noise_info = noise_info;\n                    cod_info.assign(cod_info_w);\n                    age = 0;\n                    /* save data so we can restore this quantization later */\n                    /* store for later reuse */\n                    System.arraycopy(xrpow, 0, save_xrpow, 0, 576);\n                } else {\n                    /* early stop? */\n                    if (gfc.full_outer_loop == 0) {\n                        if (++age > search_limit\n                            && best_noise_info.over_count == 0)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3) && bRefine && age > 30)\n                            break;\n                        if ((gfc.noise_shaping_amp == 3)\n                            && bRefine\n                            && (cod_info_w.global_gain - best_ggain_pass1) > 15)\n                            break;\n                    }\n                }\n            } while ((cod_info_w.global_gain + cod_info_w.scalefac_scale) < 255);\n\n            if (gfc.noise_shaping_amp == 3) {\n                if (!bRefine) {\n                    /* refine search */\n                    cod_info_w.assign(cod_info);\n                    System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n                    age = 0;\n                    best_ggain_pass1 = cod_info_w.global_gain;\n\n                    bRefine = true;\n                } else {\n                    /* search already refined, stop */\n                    bEndOfSearch = true;\n                }\n\n            } else {\n                bEndOfSearch = true;\n            }\n        }\n\n        assert((cod_info.global_gain + cod_info.scalefac_scale) <= 255);\n        /*\n         * finish up\n         */\n        if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n        /* restore for reuse on next try */\n            System.arraycopy(save_xrpow, 0, xrpow, 0, 576);\n        /*\n         * do the 'substep shaping'\n         */\n        else if ((gfc.substep_shaping & 1) != 0)\n            trancate_smallspectrums(gfc, cod_info, l3_xmin, xrpow);\n\n        return best_noise_info.over_count;\n    }\n\n    /**\n     * Robert Hegemann 2000-09-06\n     *\n     * update reservoir status after FINAL quantization/bitrate\n     */\n    this.iteration_finish_one = function (gfc, gr, ch) {\n        var l3_side = gfc.l3_side;\n        var cod_info = l3_side.tt[gr][ch];\n\n        /*\n         * try some better scalefac storage\n         */\n        tk.best_scalefac_store(gfc, gr, ch, l3_side);\n\n        /*\n         * best huffman_divide may save some bits too\n         */\n        if (gfc.use_best_huffman == 1)\n            tk.best_huffman_divide(gfc, cod_info);\n\n        /*\n         * update reservoir status after FINAL quantization/bitrate\n         */\n        rv.ResvAdjust(gfc, cod_info);\n    };\n\n    /**\n     *\n     * 2000-09-04 Robert Hegemann\n     *\n     * @param l3_xmin\n     *            allowed distortion of the scalefactor\n     * @param xrpow\n     *            coloured magnitudes of spectral values\n     */\n    this.VBR_encode_granule = function (gfp, cod_info, l3_xmin, xrpow, ch, min_bits, max_bits) {\n        var gfc = gfp.internal_flags;\n        var bst_cod_info = new GrInfo();\n        var bst_xrpow = new_float(576);\n        var Max_bits = max_bits;\n        var real_bits = max_bits + 1;\n        var this_bits = (max_bits + min_bits) / 2;\n        var dbits, over, found = 0;\n        var sfb21_extra = gfc.sfb21_extra;\n\n        assert(Max_bits <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        Arrays.fill(bst_cod_info.l3_enc, 0);\n\n        /*\n         * search within round about 40 bits of optimal\n         */\n        do {\n            assert(this_bits >= min_bits);\n            assert(this_bits <= max_bits);\n            assert(min_bits <= max_bits);\n\n            if (this_bits > Max_bits - 42)\n                gfc.sfb21_extra = false;\n            else\n                gfc.sfb21_extra = sfb21_extra;\n\n            over = outer_loop(gfp, cod_info, l3_xmin, xrpow, ch, this_bits);\n\n            /*\n             * is quantization as good as we are looking for ? in this case: is\n             * no scalefactor band distorted?\n             */\n            if (over <= 0) {\n                found = 1;\n                /*\n                 * now we know it can be done with \"real_bits\" and maybe we can\n                 * skip some iterations\n                 */\n                real_bits = cod_info.part2_3_length;\n\n                /*\n                 * store best quantization so far\n                 */\n                bst_cod_info.assign(cod_info);\n                System.arraycopy(xrpow, 0, bst_xrpow, 0, 576);\n\n                /*\n                 * try with fewer bits\n                 */\n                max_bits = real_bits - 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n            } else {\n                /*\n                 * try with more bits\n                 */\n                min_bits = this_bits + 32;\n                dbits = max_bits - min_bits;\n                this_bits = (max_bits + min_bits) / 2;\n\n                if (found != 0) {\n                    found = 2;\n                    /*\n                     * start again with best quantization so far\n                     */\n                    cod_info.assign(bst_cod_info);\n                    System.arraycopy(bst_xrpow, 0, xrpow, 0, 576);\n                }\n            }\n        } while (dbits > 12);\n\n        gfc.sfb21_extra = sfb21_extra;\n\n        /*\n         * found=0 => nothing found, use last one found=1 => we just found the\n         * best and left the loop found=2 => we restored a good one and have now\n         * l3_enc to restore too\n         */\n        if (found == 2) {\n            System.arraycopy(bst_cod_info.l3_enc, 0, cod_info.l3_enc, 0, 576);\n        }\n        assert(cod_info.part2_3_length <= Max_bits);\n    }\n\n    /**\n     * Robert Hegemann 2000-09-05\n     *\n     * calculates * how many bits are available for analog silent granules * how\n     * many bits to use for the lowest allowed bitrate * how many bits each\n     * bitrate would provide\n     */\n    this.get_framebits = function (gfp, frameBits) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * always use at least this many bits per granule per channel unless we\n         * detect analog silence, see below\n         */\n        gfc.bitrate_index = gfc.VBR_min_bitrate;\n        var bitsPerFrame = bs.getframebits(gfp);\n\n        /*\n         * bits for analog silence\n         */\n        gfc.bitrate_index = 1;\n        bitsPerFrame = bs.getframebits(gfp);\n\n        for (var i = 1; i <= gfc.VBR_max_bitrate; i++) {\n            gfc.bitrate_index = i;\n            var mb = new MeanBits(bitsPerFrame);\n            frameBits[i] = rv.ResvFrameBegin(gfp, mb);\n            bitsPerFrame = mb.bits;\n        }\n    };\n\n    /* RH: this one needs to be overhauled sometime */\n\n    /**\n     * <PRE>\n     *  2000-09-04 Robert Hegemann\n     *\n     *  * converts LR to MS coding when necessary\n     *  * calculates allowed/adjusted quantization noise amounts\n     *  * detects analog silent frames\n     *\n     *  some remarks:\n     *  - lower masking depending on Quality setting\n     *  - quality control together with adjusted ATH MDCT scaling\n     *    on lower quality setting allocate more noise from\n     *    ATH masking, and on higher quality setting allocate\n     *    less noise from ATH masking.\n     *  - experiments show that going more than 2dB over GPSYCHO's\n     *    limits ends up in very annoying artefacts\n     * </PRE>\n     */\n    this.VBR_old_prepare = function (gfp, pe, ms_ener_ratio, ratio, l3_xmin, frameBits, min_bits,\n                                     max_bits, bands) {\n        var gfc = gfp.internal_flags;\n\n        var masking_lower_db, adjust = 0.0;\n        var analog_silence = 1;\n        var bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var avg = rv.ResvFrameBegin(gfp, new MeanBits(0)) / gfc.mode_gr;\n\n        get_framebits(gfp, frameBits);\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            var mxb = qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n                qupvt.reduce_side(max_bits[gr], ms_ener_ratio[gr], avg, mxb);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                if (cod_info.block_type != Encoder.SHORT_TYPE) {\n                    // NORM, START or STOP type\n                    adjust = 1.28 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.05;\n                    masking_lower_db = gfc.PSY.mask_adjust - adjust;\n                } else {\n                    adjust = 2.56 / (1 + Math\n                            .exp(3.5 - pe[gr][ch] / 300.)) - 0.14;\n                    masking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n                }\n                gfc.masking_lower = Math.pow(10.0,\n                    masking_lower_db * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                bands[gr][ch] = qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                    l3_xmin[gr][ch]);\n                if (bands[gr][ch] != 0)\n                    analog_silence = 0;\n\n                min_bits[gr][ch] = 126;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > frameBits[gfc.VBR_max_bitrate]) {\n                    max_bits[gr][ch] *= frameBits[gfc.VBR_max_bitrate];\n                    max_bits[gr][ch] /= bits;\n                }\n                if (min_bits[gr][ch] > max_bits[gr][ch])\n                    min_bits[gr][ch] = max_bits[gr][ch];\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    this.bitpressure_strategy = function (gfc, l3_xmin, min_bits, max_bits) {\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = gfc.l3_side.tt[gr][ch];\n                var pxmin = l3_xmin[gr][ch];\n                var pxminPos = 0;\n                for (var sfb = 0; sfb < gi.psy_lmax; sfb++)\n                    pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                        / Encoder.SBMAX_l / Encoder.SBMAX_l;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (var sfb = gi.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                        pxmin[pxminPos++] *= 1. + .029 * sfb * sfb\n                            / Encoder.SBMAX_s / Encoder.SBMAX_s;\n                    }\n                }\n                max_bits[gr][ch] = 0 | Math.max(min_bits[gr][ch],\n                        0.9 * max_bits[gr][ch]);\n            }\n        }\n    };\n\n    this.VBR_new_prepare = function (gfp, pe, ratio, l3_xmin, frameBits, max_bits) {\n        var gfc = gfp.internal_flags;\n\n        var analog_silence = 1;\n        var avg = 0, bits = 0;\n        var maximum_framebits;\n\n        if (!gfp.free_format) {\n            gfc.bitrate_index = gfc.VBR_max_bitrate;\n\n            var mb = new MeanBits(avg);\n            rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n\n            get_framebits(gfp, frameBits);\n            maximum_framebits = frameBits[gfc.VBR_max_bitrate];\n        } else {\n            gfc.bitrate_index = 0;\n            var mb = new MeanBits(avg);\n            maximum_framebits = rv.ResvFrameBegin(gfp, mb);\n            avg = mb.bits;\n            frameBits[0] = maximum_framebits;\n        }\n\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            qupvt.on_pe(gfp, pe, max_bits[gr], avg, gr, 0);\n            if (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n                ms_convert(gfc.l3_side, gr);\n            }\n            for (var ch = 0; ch < gfc.channels_out; ++ch) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n\n                gfc.masking_lower = Math.pow(10.0,\n                    gfc.PSY.mask_adjust * 0.1);\n\n                init_outer_loop(gfc, cod_info);\n                if (0 != qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n                        l3_xmin[gr][ch]))\n                    analog_silence = 0;\n\n                bits += max_bits[gr][ch];\n            }\n        }\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                if (bits > maximum_framebits) {\n                    max_bits[gr][ch] *= maximum_framebits;\n                    max_bits[gr][ch] /= bits;\n                }\n\n            }\n            /* for ch */\n        }\n        /* for gr */\n\n        return analog_silence;\n    };\n\n    /**\n     * calculates target bits for ABR encoding\n     *\n     * mt 2000/05/31\n     */\n    this.calc_target_bits = function (gfp, pe, ms_ener_ratio, targ_bits, analog_silence_bits, max_frame_bits) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var res_factor;\n        var gr, ch, totbits, mean_bits = 0;\n\n        gfc.bitrate_index = gfc.VBR_max_bitrate;\n        var mb = new MeanBits(mean_bits);\n        max_frame_bits[0] = rv.ResvFrameBegin(gfp, mb);\n        mean_bits = mb.bits;\n\n        gfc.bitrate_index = 1;\n        mean_bits = bs.getframebits(gfp) - gfc.sideinfo_len * 8;\n        analog_silence_bits[0] = mean_bits / (gfc.mode_gr * gfc.channels_out);\n\n        mean_bits = gfp.VBR_mean_bitrate_kbps * gfp.framesize * 1000;\n        if ((gfc.substep_shaping & 1) != 0)\n            mean_bits *= 1.09;\n        mean_bits /= gfp.out_samplerate;\n        mean_bits -= gfc.sideinfo_len * 8;\n        mean_bits /= (gfc.mode_gr * gfc.channels_out);\n\n        /**\n         * <PRE>\n         *           res_factor is the percentage of the target bitrate that should\n         *           be used on average.  the remaining bits are added to the\n         *           bitreservoir and used for difficult to encode frames.\n         *\n         *           Since we are tracking the average bitrate, we should adjust\n         *           res_factor \"on the fly\", increasing it if the average bitrate\n         *           is greater than the requested bitrate, and decreasing it\n         *           otherwise.  Reasonable ranges are from .9 to 1.0\n         *\n         *           Until we get the above suggestion working, we use the following\n         *           tuning:\n         *           compression ratio    res_factor\n         *           5.5  (256kbps)         1.0      no need for bitreservoir\n         *           11   (128kbps)         .93      7% held for reservoir\n         *\n         *           with linear interpolation for other values.\n         * </PRE>\n         */\n        res_factor = .93 + .07 * (11.0 - gfp.compression_ratio)\n            / (11.0 - 5.5);\n        if (res_factor < .90)\n            res_factor = .90;\n        if (res_factor > 1.00)\n            res_factor = 1.00;\n\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                if (pe[gr][ch] > 700) {\n                    var add_bits = (int)((pe[gr][ch] - 700) / 1.4);\n\n                    var cod_info = l3_side.tt[gr][ch];\n                    targ_bits[gr][ch] = (int)(res_factor * mean_bits);\n\n                    /* short blocks use a little extra, no matter what the pe */\n                    if (cod_info.block_type == Encoder.SHORT_TYPE) {\n                        if (add_bits < mean_bits / 2)\n                            add_bits = mean_bits / 2;\n                    }\n                    /* at most increase bits by 1.5*average */\n                    if (add_bits > mean_bits * 3 / 2)\n                        add_bits = mean_bits * 3 / 2;\n                    else if (add_bits < 0)\n                        add_bits = 0;\n\n                    targ_bits[gr][ch] += add_bits;\n                }\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL) {\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                }\n                sum += targ_bits[gr][ch];\n            }\n            /* for ch */\n            if (sum > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n                for (ch = 0; ch < gfc.channels_out; ++ch) {\n                    targ_bits[gr][ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                    targ_bits[gr][ch] /= sum;\n                }\n            }\n        }\n        /* for gr */\n\n        if (gfc.mode_ext == Encoder.MPG_MD_MS_LR)\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                qupvt.reduce_side(targ_bits[gr], ms_ener_ratio[gr], mean_bits\n                    * gfc.channels_out,\n                    LameInternalFlags.MAX_BITS_PER_GRANULE);\n            }\n\n        /*\n         * sum target bits\n         */\n        totbits = 0;\n        for (gr = 0; gr < gfc.mode_gr; gr++) {\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                if (targ_bits[gr][ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                    targ_bits[gr][ch] = LameInternalFlags.MAX_BITS_PER_CHANNEL;\n                totbits += targ_bits[gr][ch];\n            }\n        }\n\n        /*\n         * repartion target bits if needed\n         */\n        if (totbits > max_frame_bits[0]) {\n            for (gr = 0; gr < gfc.mode_gr; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    targ_bits[gr][ch] *= max_frame_bits[0];\n                    targ_bits[gr][ch] /= totbits;\n                }\n            }\n        }\n    }\n\n}\n\nmodule.exports = Quantize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Quantize.js\n// module id = HQRW\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\nfunction FFT() {\n\n    var window = new_float(Encoder.BLKSIZE);\n    var window_s = new_float(Encoder.BLKSIZE_s / 2);\n\n    var costab = [\n        9.238795325112867e-01, 3.826834323650898e-01,\n        9.951847266721969e-01, 9.801714032956060e-02,\n        9.996988186962042e-01, 2.454122852291229e-02,\n        9.999811752826011e-01, 6.135884649154475e-03\n    ];\n\n    function fht(fz, fzPos, n) {\n        var tri = 0;\n        var k4;\n        var fi;\n        var gi;\n\n        n <<= 1;\n        /* to get BLKSIZE, because of 3DNow! ASM routine */\n        var fn = fzPos + n;\n        k4 = 4;\n        do {\n            var s1, c1;\n            var i, k1, k2, k3, kx;\n            kx = k4 >> 1;\n            k1 = k4;\n            k2 = k4 << 1;\n            k3 = k2 + k1;\n            k4 = k2 << 1;\n            fi = fzPos;\n            gi = fi + kx;\n            do {\n                var f0, f1, f2, f3;\n                f1 = fz[fi + 0] - fz[fi + k1];\n                f0 = fz[fi + 0] + fz[fi + k1];\n                f3 = fz[fi + k2] - fz[fi + k3];\n                f2 = fz[fi + k2] + fz[fi + k3];\n                fz[fi + k2] = f0 - f2;\n                fz[fi + 0] = f0 + f2;\n                fz[fi + k3] = f1 - f3;\n                fz[fi + k1] = f1 + f3;\n                f1 = fz[gi + 0] - fz[gi + k1];\n                f0 = fz[gi + 0] + fz[gi + k1];\n                f3 = (Util.SQRT2 * fz[gi + k3]);\n                f2 = (Util.SQRT2 * fz[gi + k2]);\n                fz[gi + k2] = f0 - f2;\n                fz[gi + 0] = f0 + f2;\n                fz[gi + k3] = f1 - f3;\n                fz[gi + k1] = f1 + f3;\n                gi += k4;\n                fi += k4;\n            } while (fi < fn);\n            c1 = costab[tri + 0];\n            s1 = costab[tri + 1];\n            for (i = 1; i < kx; i++) {\n                var c2, s2;\n                c2 = 1 - (2 * s1) * s1;\n                s2 = (2 * s1) * c1;\n                fi = fzPos + i;\n                gi = fzPos + k1 - i;\n                do {\n                    var a, b, g0, f0, f1, g1, f2, g2, f3, g3;\n                    b = s2 * fz[fi + k1] - c2 * fz[gi + k1];\n                    a = c2 * fz[fi + k1] + s2 * fz[gi + k1];\n                    f1 = fz[fi + 0] - a;\n                    f0 = fz[fi + 0] + a;\n                    g1 = fz[gi + 0] - b;\n                    g0 = fz[gi + 0] + b;\n                    b = s2 * fz[fi + k3] - c2 * fz[gi + k3];\n                    a = c2 * fz[fi + k3] + s2 * fz[gi + k3];\n                    f3 = fz[fi + k2] - a;\n                    f2 = fz[fi + k2] + a;\n                    g3 = fz[gi + k2] - b;\n                    g2 = fz[gi + k2] + b;\n                    b = s1 * f2 - c1 * g3;\n                    a = c1 * f2 + s1 * g3;\n                    fz[fi + k2] = f0 - a;\n                    fz[fi + 0] = f0 + a;\n                    fz[gi + k3] = g1 - b;\n                    fz[gi + k1] = g1 + b;\n                    b = c1 * g2 - s1 * f3;\n                    a = s1 * g2 + c1 * f3;\n                    fz[gi + k2] = g0 - a;\n                    fz[gi + 0] = g0 + a;\n                    fz[fi + k3] = f1 - b;\n                    fz[fi + k1] = f1 + b;\n                    gi += k4;\n                    fi += k4;\n                } while (fi < fn);\n                c2 = c1;\n                c1 = c2 * costab[tri + 0] - s1 * costab[tri + 1];\n                s1 = c2 * costab[tri + 1] + s1 * costab[tri + 0];\n            }\n            tri += 2;\n        } while (k4 < n);\n    }\n\n    var rv_tbl = [0x00, 0x80, 0x40,\n        0xc0, 0x20, 0xa0, 0x60, 0xe0, 0x10,\n        0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70,\n        0xf0, 0x08, 0x88, 0x48, 0xc8, 0x28,\n        0xa8, 0x68, 0xe8, 0x18, 0x98, 0x58,\n        0xd8, 0x38, 0xb8, 0x78, 0xf8, 0x04,\n        0x84, 0x44, 0xc4, 0x24, 0xa4, 0x64,\n        0xe4, 0x14, 0x94, 0x54, 0xd4, 0x34,\n        0xb4, 0x74, 0xf4, 0x0c, 0x8c, 0x4c,\n        0xcc, 0x2c, 0xac, 0x6c, 0xec, 0x1c,\n        0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c,\n        0xfc, 0x02, 0x82, 0x42, 0xc2, 0x22,\n        0xa2, 0x62, 0xe2, 0x12, 0x92, 0x52,\n        0xd2, 0x32, 0xb2, 0x72, 0xf2, 0x0a,\n        0x8a, 0x4a, 0xca, 0x2a, 0xaa, 0x6a,\n        0xea, 0x1a, 0x9a, 0x5a, 0xda, 0x3a,\n        0xba, 0x7a, 0xfa, 0x06, 0x86, 0x46,\n        0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16,\n        0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76,\n        0xf6, 0x0e, 0x8e, 0x4e, 0xce, 0x2e,\n        0xae, 0x6e, 0xee, 0x1e, 0x9e, 0x5e,\n        0xde, 0x3e, 0xbe, 0x7e, 0xfe];\n\n    this.fft_short = function (gfc, x_real, chn, buffer, bufPos) {\n        for (var b = 0; b < 3; b++) {\n            var x = Encoder.BLKSIZE_s / 2;\n            var k = 0xffff & ((576 / 3) * (b + 1));\n            var j = Encoder.BLKSIZE_s / 8 - 1;\n            do {\n                var f0, f1, f2, f3, w;\n                var i = rv_tbl[j << 2] & 0xff;\n\n                f0 = window_s[i] * buffer[chn][bufPos + i + k];\n                w = window_s[0x7f - i] * buffer[chn][bufPos + i + k + 0x80];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x40] * buffer[chn][bufPos + i + k + 0x40];\n                w = window_s[0x3f - i] * buffer[chn][bufPos + i + k + 0xc0];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x -= 4;\n                x_real[b][x + 0] = f0 + f2;\n                x_real[b][x + 2] = f0 - f2;\n                x_real[b][x + 1] = f1 + f3;\n                x_real[b][x + 3] = f1 - f3;\n\n                f0 = window_s[i + 0x01] * buffer[chn][bufPos + i + k + 0x01];\n                w = window_s[0x7e - i] * buffer[chn][bufPos + i + k + 0x81];\n                f1 = f0 - w;\n                f0 = f0 + w;\n                f2 = window_s[i + 0x41] * buffer[chn][bufPos + i + k + 0x41];\n                w = window_s[0x3e - i] * buffer[chn][bufPos + i + k + 0xc1];\n                f3 = f2 - w;\n                f2 = f2 + w;\n\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 0] = f0 + f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 2] = f0 - f2;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 1] = f1 + f3;\n                x_real[b][x + Encoder.BLKSIZE_s / 2 + 3] = f1 - f3;\n            } while (--j >= 0);\n\n            fht(x_real[b], x, Encoder.BLKSIZE_s / 2);\n            /* BLKSIZE_s/2 because of 3DNow! ASM routine */\n            /* BLKSIZE/2 because of 3DNow! ASM routine */\n        }\n    }\n\n    this.fft_long = function (gfc, y, chn, buffer, bufPos) {\n        var jj = Encoder.BLKSIZE / 8 - 1;\n        var x = Encoder.BLKSIZE / 2;\n\n        do {\n            var f0, f1, f2, f3, w;\n            var i = rv_tbl[jj] & 0xff;\n            f0 = window[i] * buffer[chn][bufPos + i];\n            w = window[i + 0x200] * buffer[chn][bufPos + i + 0x200];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x100] * buffer[chn][bufPos + i + 0x100];\n            w = window[i + 0x300] * buffer[chn][bufPos + i + 0x300];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            x -= 4;\n            y[x + 0] = f0 + f2;\n            y[x + 2] = f0 - f2;\n            y[x + 1] = f1 + f3;\n            y[x + 3] = f1 - f3;\n\n            f0 = window[i + 0x001] * buffer[chn][bufPos + i + 0x001];\n            w = window[i + 0x201] * buffer[chn][bufPos + i + 0x201];\n            f1 = f0 - w;\n            f0 = f0 + w;\n            f2 = window[i + 0x101] * buffer[chn][bufPos + i + 0x101];\n            w = window[i + 0x301] * buffer[chn][bufPos + i + 0x301];\n            f3 = f2 - w;\n            f2 = f2 + w;\n\n            y[x + Encoder.BLKSIZE / 2 + 0] = f0 + f2;\n            y[x + Encoder.BLKSIZE / 2 + 2] = f0 - f2;\n            y[x + Encoder.BLKSIZE / 2 + 1] = f1 + f3;\n            y[x + Encoder.BLKSIZE / 2 + 3] = f1 - f3;\n        } while (--jj >= 0);\n\n        fht(y, x, Encoder.BLKSIZE / 2);\n        /* BLKSIZE/2 because of 3DNow! ASM routine */\n    }\n\n    this.init_fft = function (gfc) {\n        /* The type of window used here will make no real difference, but */\n        /*\n         * in the interest of merging nspsytune stuff - switch to blackman\n         * window\n         */\n        for (var i = 0; i < Encoder.BLKSIZE; i++)\n            /* blackman window */\n            window[i] = (0.42 - 0.5 * Math.cos(2 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (i + .5)\n                / Encoder.BLKSIZE));\n\n        for (var i = 0; i < Encoder.BLKSIZE_s / 2; i++)\n            window_s[i] = (0.5 * (1.0 - Math.cos(2.0 * Math.PI\n                * (i + 0.5) / Encoder.BLKSIZE_s)));\n\n    }\n\n}\n\nmodule.exports = FFT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/FFT.js\n// module id = Hbx0\n// module chunks = 0","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/bind.js\n// module id = JP+z\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/defaults.js\n// module id = KCLY\n// module chunks = 0","function Version() {\n\n    /**\n     * URL for the LAME website.\n     */\n    var LAME_URL = \"http://www.mp3dev.org/\";\n\n    /**\n     * Major version number.\n     */\n    var LAME_MAJOR_VERSION = 3;\n    /**\n     * Minor version number.\n     */\n    var LAME_MINOR_VERSION = 98;\n    /**\n     * Patch level.\n     */\n    var LAME_PATCH_VERSION = 4;\n\n    /**\n     * Major version number.\n     */\n    var PSY_MAJOR_VERSION = 0;\n    /**\n     * Minor version number.\n     */\n    var PSY_MINOR_VERSION = 93;\n\n    /**\n     * A string which describes the version of LAME.\n     *\n     * @return string which describes the version of LAME\n     */\n    this.getLameVersion = function () {\n        // primary to write screen reports\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The short version of the LAME version string.\n     *\n     * @return short version of the LAME version string\n     */\n    this.getLameShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        // validation\n        return (LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \".\" + LAME_PATCH_VERSION);\n    }\n\n    /**\n     * The shortest version of the LAME version string.\n     *\n     * @return shortest version of the LAME version string\n     */\n    this.getLameVeryShortVersion = function () {\n        // Adding date and time to version string makes it harder for output\n        return (\"LAME\" + LAME_MAJOR_VERSION + \".\" + LAME_MINOR_VERSION + \"r\");\n    }\n\n    /**\n     * String which describes the version of GPSYCHO\n     *\n     * @return string which describes the version of GPSYCHO\n     */\n    this.getPsyVersion = function () {\n        return (PSY_MAJOR_VERSION + \".\" + PSY_MINOR_VERSION);\n    }\n\n    /**\n     * String which is a URL for the LAME website.\n     *\n     * @return string which is a URL for the LAME website\n     */\n    this.getLameUrl = function () {\n        return LAME_URL;\n    }\n\n    /**\n     * Quite useless for a java version, however we are compatible ;-)\n     *\n     * @return \"32bits\"\n     */\n    this.getLameOsBitness = function () {\n        return \"32bits\";\n    }\n\n}\n\nmodule.exports = Version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Version.js\n// module id = LyDL\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = MmMw\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = ON07\n// module chunks = 0","function HuffCodeTab(len, max, tab, hl) {\n    this.xlen = len;\n    this.linmax = max;\n    this.table = tab;\n    this.hlen = hl;\n}\n\nvar Tables = {};\n\n\nTables.t1HB = [\n    1, 1,\n    1, 0\n];\n\nTables.t2HB = [\n    1, 2, 1,\n    3, 1, 1,\n    3, 2, 0\n];\n\nTables.t3HB = [\n    3, 2, 1,\n    1, 1, 1,\n    3, 2, 0\n];\n\nTables.t5HB = [\n    1, 2, 6, 5,\n    3, 1, 4, 4,\n    7, 5, 7, 1,\n    6, 1, 1, 0\n];\n\nTables.t6HB = [\n    7, 3, 5, 1,\n    6, 2, 3, 2,\n    5, 4, 4, 1,\n    3, 3, 2, 0\n];\n\nTables.t7HB = [\n    1, 2, 10, 19, 16, 10,\n    3, 3, 7, 10, 5, 3,\n    11, 4, 13, 17, 8, 4,\n    12, 11, 18, 15, 11, 2,\n    7, 6, 9, 14, 3, 1,\n    6, 4, 5, 3, 2, 0\n];\n\nTables.t8HB = [\n    3, 4, 6, 18, 12, 5,\n    5, 1, 2, 16, 9, 3,\n    7, 3, 5, 14, 7, 3,\n    19, 17, 15, 13, 10, 4,\n    13, 5, 8, 11, 5, 1,\n    12, 4, 4, 1, 1, 0\n];\n\nTables.t9HB = [\n    7, 5, 9, 14, 15, 7,\n    6, 4, 5, 5, 6, 7,\n    7, 6, 8, 8, 8, 5,\n    15, 6, 9, 10, 5, 1,\n    11, 7, 9, 6, 4, 1,\n    14, 4, 6, 2, 6, 0\n];\n\nTables.t10HB = [\n    1, 2, 10, 23, 35, 30, 12, 17,\n    3, 3, 8, 12, 18, 21, 12, 7,\n    11, 9, 15, 21, 32, 40, 19, 6,\n    14, 13, 22, 34, 46, 23, 18, 7,\n    20, 19, 33, 47, 27, 22, 9, 3,\n    31, 22, 41, 26, 21, 20, 5, 3,\n    14, 13, 10, 11, 16, 6, 5, 1,\n    9, 8, 7, 8, 4, 4, 2, 0\n];\n\nTables.t11HB = [\n    3, 4, 10, 24, 34, 33, 21, 15,\n    5, 3, 4, 10, 32, 17, 11, 10,\n    11, 7, 13, 18, 30, 31, 20, 5,\n    25, 11, 19, 59, 27, 18, 12, 5,\n    35, 33, 31, 58, 30, 16, 7, 5,\n    28, 26, 32, 19, 17, 15, 8, 14,\n    14, 12, 9, 13, 14, 9, 4, 1,\n    11, 4, 6, 6, 6, 3, 2, 0\n];\n\nTables.t12HB = [\n    9, 6, 16, 33, 41, 39, 38, 26,\n    7, 5, 6, 9, 23, 16, 26, 11,\n    17, 7, 11, 14, 21, 30, 10, 7,\n    17, 10, 15, 12, 18, 28, 14, 5,\n    32, 13, 22, 19, 18, 16, 9, 5,\n    40, 17, 31, 29, 17, 13, 4, 2,\n    27, 12, 11, 15, 10, 7, 4, 1,\n    27, 12, 8, 12, 6, 3, 1, 0\n];\n\nTables.t13HB = [\n    1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19,\n    3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14,\n    15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16,\n    22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14,\n    35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24,\n    58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17,\n    47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15,\n    72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42,\n    43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16,\n    53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11,\n    35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22,\n    53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7,\n    34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5,\n    45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3,\n    48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2,\n    16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1\n];\n\nTables.t15HB = [\n    7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63,\n    13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,\n    19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33,\n    29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29,\n    52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27,\n    77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38,\n    125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30,\n    109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25,\n    90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20,\n    71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15,\n    109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9,\n    86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11,\n    118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7,\n    91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3,\n    123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1,\n    71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0\n];\n\nTables.t16HB = [\n    1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17,\n    3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,\n    15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16,\n    45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26,\n    75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9,\n    66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16,\n    111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10,\n    98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8,\n    85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7,\n    154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11,\n    139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4,\n    243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6,\n    202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4,\n    747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2,\n    377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0,\n    12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3\n];\n\nTables.t24HB = [\n    15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88,\n    14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42,\n    47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18,\n    81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16,\n    147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14,\n    263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12,\n    249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10,\n    435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17,\n    427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16,\n    335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11,\n    668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10,\n    652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6,\n    648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4,\n    620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,\n    1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0,\n    43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3\n];\n\nTables.t32HB = [\n    1 << 0, 5 << 1, 4 << 1, 5 << 2, 6 << 1, 5 << 2, 4 << 2, 4 << 3,\n    7 << 1, 3 << 2, 6 << 2, 0 << 3, 7 << 2, 2 << 3, 3 << 3, 1 << 4\n];\n\nTables.t33HB = [\n    15 << 0, 14 << 1, 13 << 1, 12 << 2, 11 << 1, 10 << 2, 9 << 2, 8 << 3,\n    7 << 1, 6 << 2, 5 << 2, 4 << 3, 3 << 2, 2 << 3, 1 << 3, 0 << 4\n];\n\nTables.t1l = [\n    1, 4,\n    3, 5\n];\n\nTables.t2l = [\n    1, 4, 7,\n    4, 5, 7,\n    6, 7, 8\n];\n\nTables.t3l = [\n    2, 3, 7,\n    4, 4, 7,\n    6, 7, 8\n];\n\nTables.t5l = [\n    1, 4, 7, 8,\n    4, 5, 8, 9,\n    7, 8, 9, 10,\n    8, 8, 9, 10\n];\n\nTables.t6l = [\n    3, 4, 6, 8,\n    4, 4, 6, 7,\n    5, 6, 7, 8,\n    7, 7, 8, 9\n];\n\nTables.t7l = [\n    1, 4, 7, 9, 9, 10,\n    4, 6, 8, 9, 9, 10,\n    7, 7, 9, 10, 10, 11,\n    8, 9, 10, 11, 11, 11,\n    8, 9, 10, 11, 11, 12,\n    9, 10, 11, 12, 12, 12\n];\n\nTables.t8l = [\n    2, 4, 7, 9, 9, 10,\n    4, 4, 6, 10, 10, 10,\n    7, 6, 8, 10, 10, 11,\n    9, 10, 10, 11, 11, 12,\n    9, 9, 10, 11, 12, 12,\n    10, 10, 11, 11, 13, 13\n];\n\nTables.t9l = [\n    3, 4, 6, 7, 9, 10,\n    4, 5, 6, 7, 8, 10,\n    5, 6, 7, 8, 9, 10,\n    7, 7, 8, 9, 9, 10,\n    8, 8, 9, 9, 10, 11,\n    9, 9, 10, 10, 11, 11\n];\n\nTables.t10l = [\n    1, 4, 7, 9, 10, 10, 10, 11,\n    4, 6, 8, 9, 10, 11, 10, 10,\n    7, 8, 9, 10, 11, 12, 11, 11,\n    8, 9, 10, 11, 12, 12, 11, 12,\n    9, 10, 11, 12, 12, 12, 12, 12,\n    10, 11, 12, 12, 13, 13, 12, 13,\n    9, 10, 11, 12, 12, 12, 13, 13,\n    10, 10, 11, 12, 12, 13, 13, 13\n];\n\nTables.t11l = [\n    2, 4, 6, 8, 9, 10, 9, 10,\n    4, 5, 6, 8, 10, 10, 9, 10,\n    6, 7, 8, 9, 10, 11, 10, 10,\n    8, 8, 9, 11, 10, 12, 10, 11,\n    9, 10, 10, 11, 11, 12, 11, 12,\n    9, 10, 11, 12, 12, 13, 12, 13,\n    9, 9, 9, 10, 11, 12, 12, 12,\n    9, 9, 10, 11, 12, 12, 12, 12\n];\n\nTables.t12l = [\n    4, 4, 6, 8, 9, 10, 10, 10,\n    4, 5, 6, 7, 9, 9, 10, 10,\n    6, 6, 7, 8, 9, 10, 9, 10,\n    7, 7, 8, 8, 9, 10, 10, 10,\n    8, 8, 9, 9, 10, 10, 10, 11,\n    9, 9, 10, 10, 10, 11, 10, 11,\n    9, 9, 9, 10, 10, 11, 11, 12,\n    10, 10, 10, 11, 11, 11, 11, 12\n];\n\nTables.t13l = [\n    1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14,\n    4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14,\n    7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15,\n    8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15,\n    9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16,\n    10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16,\n    10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16,\n    11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18,\n    10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17,\n    11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17,\n    11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19,\n    12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18,\n    12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18,\n    13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,\n    14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18,\n    13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18\n];\n\nTables.t15l = [\n    3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14,\n    5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13,\n    6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13,\n    7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13,\n    9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14,\n    10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14,\n    10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14,\n    10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14,\n    11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15,\n    12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15,\n    12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15,\n    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15,\n    13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15\n];\n\nTables.t16_5l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14,\n    11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12\n];\n\nTables.t16l = [\n    1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10,\n    4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10,\n    7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11,\n    9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12,\n    10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11,\n    10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12,\n    11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12,\n    11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12,\n    11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12,\n    12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13,\n    12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12,\n    13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13,\n    13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13,\n    15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,\n    14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13,\n    10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10\n];\n\nTables.t24l = [\n    4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10,\n    5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10,\n    7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9,\n    8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9,\n    9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9,\n    10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9,\n    11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10,\n    11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10,\n    12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10,\n    12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,\n    13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10,\n    9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6\n];\n\nTables.t32l = [\n    1 + 0, 4 + 1, 4 + 1, 5 + 2, 4 + 1, 6 + 2, 5 + 2, 6 + 3,\n    4 + 1, 5 + 2, 5 + 2, 6 + 3, 5 + 2, 6 + 3, 6 + 3, 6 + 4\n];\n\nTables.t33l = [\n    4 + 0, 4 + 1, 4 + 1, 4 + 2, 4 + 1, 4 + 2, 4 + 2, 4 + 3,\n    4 + 1, 4 + 2, 4 + 2, 4 + 3, 4 + 2, 4 + 3, 4 + 3, 4 + 4\n];\n\nTables.ht = [\n    /* xlen, linmax, table, hlen */\n    new HuffCodeTab(0, 0, null, null),\n    new HuffCodeTab(2, 0, Tables.t1HB, Tables.t1l),\n    new HuffCodeTab(3, 0, Tables.t2HB, Tables.t2l),\n    new HuffCodeTab(3, 0, Tables.t3HB, Tables.t3l),\n    new HuffCodeTab(0, 0, null, null), /* Apparently not used */\n    new HuffCodeTab(4, 0, Tables.t5HB, Tables.t5l),\n    new HuffCodeTab(4, 0, Tables.t6HB, Tables.t6l),\n    new HuffCodeTab(6, 0, Tables.t7HB, Tables.t7l),\n    new HuffCodeTab(6, 0, Tables.t8HB, Tables.t8l),\n    new HuffCodeTab(6, 0, Tables.t9HB, Tables.t9l),\n    new HuffCodeTab(8, 0, Tables.t10HB, Tables.t10l),\n    new HuffCodeTab(8, 0, Tables.t11HB, Tables.t11l),\n    new HuffCodeTab(8, 0, Tables.t12HB, Tables.t12l),\n    new HuffCodeTab(16, 0, Tables.t13HB, Tables.t13l),\n    new HuffCodeTab(0, 0, null, Tables.t16_5l), /* Apparently not used */\n    new HuffCodeTab(16, 0, Tables.t15HB, Tables.t15l),\n\n    new HuffCodeTab(1, 1, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(2, 3, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(3, 7, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(4, 15, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(6, 63, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(8, 255, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(10, 1023, Tables.t16HB, Tables.t16l),\n    new HuffCodeTab(13, 8191, Tables.t16HB, Tables.t16l),\n\n    new HuffCodeTab(4, 15, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(5, 31, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(6, 63, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(7, 127, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(8, 255, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(9, 511, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(11, 2047, Tables.t24HB, Tables.t24l),\n    new HuffCodeTab(13, 8191, Tables.t24HB, Tables.t24l),\n\n    new HuffCodeTab(0, 0, Tables.t32HB, Tables.t32l),\n    new HuffCodeTab(0, 0, Tables.t33HB, Tables.t33l),\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 16*16; i++) [\n *      largetbl[i] = ((ht[16].hlen[i]) << 16) + ht[24].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.largetbl = [\n    0x010004, 0x050005, 0x070007, 0x090008, 0x0a0009, 0x0a000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000c, 0x0c000c, 0x0d000c, 0x0d000c, 0x0d000c, 0x0e000d, 0x0a000a,\n    0x040005, 0x060006, 0x080007, 0x090008, 0x0a0009, 0x0b000a, 0x0b000a, 0x0b000b,\n    0x0c000b, 0x0c000b, 0x0c000c, 0x0d000c, 0x0e000c, 0x0d000c, 0x0e000c, 0x0a000a,\n    0x070007, 0x080007, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0c000b, 0x0d000b, 0x0d000c, 0x0d000c, 0x0e000c, 0x0e000d, 0x0b0009,\n    0x090008, 0x090008, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0c000b,\n    0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0c0009,\n    0x0a0009, 0x0a0009, 0x0b0009, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000a, 0x0d000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000d, 0x0b0009,\n    0x0a000a, 0x0a0009, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0e000b,\n    0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0c0009,\n    0x0b000a, 0x0b000a, 0x0b000a, 0x0c000a, 0x0d000a, 0x0d000b, 0x0d000b, 0x0d000b,\n    0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000d, 0x0c0009,\n    0x0b000b, 0x0b000a, 0x0c000a, 0x0c000a, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b,\n    0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x0f000c, 0x11000d, 0x11000d, 0x0c000a,\n    0x0b000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b,\n    0x0f000b, 0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000d, 0x10000d, 0x0c000a,\n    0x0c000b, 0x0c000b, 0x0c000b, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000b, 0x0f000c,\n    0x0f000c, 0x0f000c, 0x0f000c, 0x10000c, 0x0f000d, 0x10000d, 0x0f000d, 0x0d000a,\n    0x0c000c, 0x0d000b, 0x0c000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0e000c, 0x0e000c,\n    0x0f000c, 0x10000c, 0x10000c, 0x10000d, 0x11000d, 0x11000d, 0x10000d, 0x0c000a,\n    0x0d000c, 0x0d000c, 0x0d000b, 0x0d000b, 0x0e000b, 0x0e000c, 0x0f000c, 0x10000c,\n    0x10000c, 0x10000c, 0x10000c, 0x10000d, 0x10000d, 0x0f000d, 0x10000d, 0x0d000a,\n    0x0d000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x0f000c,\n    0x0f000c, 0x11000c, 0x10000d, 0x10000d, 0x10000d, 0x10000d, 0x12000d, 0x0d000a,\n    0x0f000c, 0x0e000c, 0x0e000c, 0x0e000c, 0x0f000c, 0x0f000c, 0x10000c, 0x10000c,\n    0x10000d, 0x12000d, 0x11000d, 0x11000d, 0x11000d, 0x13000d, 0x11000d, 0x0d000a,\n    0x0e000d, 0x0f000c, 0x0d000c, 0x0e000c, 0x10000c, 0x10000c, 0x0f000c, 0x10000d,\n    0x10000d, 0x11000d, 0x12000d, 0x11000d, 0x13000d, 0x11000d, 0x10000d, 0x0d000a,\n    0x0a0009, 0x0a0009, 0x0a0009, 0x0b0009, 0x0b0009, 0x0c0009, 0x0c0009, 0x0c0009,\n    0x0d0009, 0x0d0009, 0x0d0009, 0x0d000a, 0x0d000a, 0x0d000a, 0x0d000a, 0x0a0006\n];\n/**\n * <CODE>\n *  for (i = 0; i < 3*3; i++) [\n *      table23[i] = ((ht[2].hlen[i]) << 16) + ht[3].hlen[i];\n *  ]\n * </CODE>\n *\n */\nTables.table23 = [\n    0x010002, 0x040003, 0x070007,\n    0x040004, 0x050004, 0x070007,\n    0x060006, 0x070007, 0x080008\n];\n\n/**\n * <CODE>\n *  for (i = 0; i < 4*4; i++) [\n *       table56[i] = ((ht[5].hlen[i]) << 16) + ht[6].hlen[i];\n *   ]\n * </CODE>\n *\n */\nTables.table56 = [\n    0x010003, 0x040004, 0x070006, 0x080008, 0x040004, 0x050004, 0x080006, 0x090007,\n    0x070005, 0x080006, 0x090007, 0x0a0008, 0x080007, 0x080007, 0x090008, 0x0a0009\n];\n\nTables.bitrate_table = [\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], /* MPEG 2 */\n    [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], /* MPEG 1 */\n    [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1], /* MPEG 2.5 */\n];\n\n/**\n * MPEG 2, MPEG 1, MPEG 2.5.\n */\nTables.samplerate_table = [\n    [22050, 24000, 16000, -1],\n    [44100, 48000, 32000, -1],\n    [11025, 12000, 8000, -1],\n];\n\n/**\n * This is the scfsi_band table from 2.4.2.7 of the IS.\n */\nTables.scfsi_band = [0, 6, 11, 16, 21];\n\nmodule.exports = Tables;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Tables.js\n// module id = OSvQ\n// module chunks = 0","/**\n  * vue-custom-element v3.2.12\n  * (c) 2019 Karol Fabjańczuk\n  * @license MIT\n  */\n/**\n * ES6 Object.getPrototypeOf Polyfill\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/setPrototypeOf\n */\n\nObject.setPrototypeOf = Object.setPrototypeOf || setPrototypeOf;\n\nfunction setPrototypeOf(obj, proto) {\n  obj.__proto__ = proto;\n  return obj;\n}\n\nvar setPrototypeOf_1 = setPrototypeOf.bind(Object);\n\nfunction isES2015() {\n  if (typeof Symbol === 'undefined' || typeof Reflect === 'undefined' || typeof Proxy === 'undefined' || Object.isSealed(Proxy)) return false;\n\n  return true;\n}\n\nvar isES2015$1 = isES2015();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _CustomElement() {\n  return Reflect.construct(HTMLElement, [], this.__proto__.constructor);\n}\n\n\nObject.setPrototypeOf(_CustomElement.prototype, HTMLElement.prototype);\nObject.setPrototypeOf(_CustomElement, HTMLElement);\nfunction registerCustomElement(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof customElements === 'undefined') {\n    return;\n  }\n\n  function constructorCallback() {\n    if (options.shadow === true && HTMLElement.prototype.attachShadow) {\n      this.attachShadow({ mode: 'open' });\n    }\n    typeof options.constructorCallback === 'function' && options.constructorCallback.call(this);\n  }\n  function connectedCallback() {\n    typeof options.connectedCallback === 'function' && options.connectedCallback.call(this);\n  }\n\n  function disconnectedCallback() {\n    typeof options.disconnectedCallback === 'function' && options.disconnectedCallback.call(this);\n  }\n\n  function attributeChangedCallback(name, oldValue, value) {\n    typeof options.attributeChangedCallback === 'function' && options.attributeChangedCallback.call(this, name, oldValue, value);\n  }\n\n  function define(tagName, CustomElement) {\n    var existingCustomElement = customElements.get(tagName);\n    return typeof existingCustomElement !== 'undefined' ? existingCustomElement : customElements.define(tagName, CustomElement);\n  }\n\n  if (isES2015$1) {\n    var CustomElement = function (_CustomElement2) {\n      _inherits(CustomElement, _CustomElement2);\n\n      function CustomElement(self) {\n        var _ret;\n\n        _classCallCheck(this, CustomElement);\n\n        var _this = _possibleConstructorReturn(this, (CustomElement.__proto__ || Object.getPrototypeOf(CustomElement)).call(this));\n\n        var me = self ? HTMLElement.call(self) : _this;\n\n        constructorCallback.call(me);\n        return _ret = me, _possibleConstructorReturn(_this, _ret);\n      }\n\n      _createClass(CustomElement, null, [{\n        key: 'observedAttributes',\n        get: function get() {\n          return options.observedAttributes || [];\n        }\n      }]);\n\n      return CustomElement;\n    }(_CustomElement);\n\n    CustomElement.prototype.connectedCallback = connectedCallback;\n    CustomElement.prototype.disconnectedCallback = disconnectedCallback;\n    CustomElement.prototype.attributeChangedCallback = attributeChangedCallback;\n\n    define(tag, CustomElement);\n    return CustomElement;\n  } else {\n    var _CustomElement3 = function _CustomElement3(self) {\n      var me = self ? HTMLElement.call(self) : this;\n\n      constructorCallback.call(me);\n      return me;\n    };\n\n    _CustomElement3.observedAttributes = options.observedAttributes || [];\n\n    _CustomElement3.prototype = Object.create(HTMLElement.prototype, {\n      constructor: {\n        configurable: true,\n        writable: true,\n        value: _CustomElement3\n      }\n    });\n\n    _CustomElement3.prototype.connectedCallback = connectedCallback;\n    _CustomElement3.prototype.disconnectedCallback = disconnectedCallback;\n    _CustomElement3.prototype.attributeChangedCallback = attributeChangedCallback;\n\n    define(tag, _CustomElement3);\n    return _CustomElement3;\n  }\n}\n\nvar camelizeRE = /-(\\w)/g;\nvar camelize = function camelize(str) {\n  return str.replace(camelizeRE, function (_, c) {\n    return c ? c.toUpperCase() : '';\n  });\n};\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = function hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();\n};\n\nfunction toArray(list) {\n  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction convertAttributeValue(value, overrideType) {\n  if (value === null || value === undefined) {\n    return overrideType === Boolean ? false : undefined;\n  }\n  var propsValue = value;\n  var isBoolean = ['true', 'false'].indexOf(value) > -1;\n  var valueParsed = parseFloat(propsValue, 10);\n  var isNumber = !isNaN(valueParsed) && isFinite(propsValue) && typeof propsValue === 'string' && !propsValue.match(/^0+[^.]\\d*$/g);\n\n  if (overrideType && overrideType !== Boolean && (typeof propsValue === 'undefined' ? 'undefined' : _typeof(propsValue)) !== overrideType) {\n    propsValue = overrideType(value);\n  } else if (isBoolean || overrideType === Boolean) {\n    propsValue = propsValue === '' ? true : propsValue === 'true';\n  } else if (isNumber) {\n    propsValue = valueParsed;\n  }\n\n  return propsValue;\n}\n\nfunction extractProps(collection, props) {\n  if (collection && collection.length) {\n    collection.forEach(function (prop) {\n      var camelCaseProp = camelize(prop);\n      props.camelCase.indexOf(camelCaseProp) === -1 && props.camelCase.push(camelCaseProp);\n    });\n  } else if (collection && (typeof collection === 'undefined' ? 'undefined' : _typeof(collection)) === 'object') {\n    for (var prop in collection) {\n      var camelCaseProp = camelize(prop);\n      props.camelCase.indexOf(camelCaseProp) === -1 && props.camelCase.push(camelCaseProp);\n\n      if (collection[camelCaseProp] && collection[camelCaseProp].type) {\n        props.types[prop] = [].concat(collection[camelCaseProp].type)[0];\n      }\n    }\n  }\n}\n\nfunction getProps() {\n  var componentDefinition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var props = {\n    camelCase: [],\n    hyphenate: [],\n    types: {}\n  };\n\n  if (componentDefinition.mixins) {\n    componentDefinition.mixins.forEach(function (mixin) {\n      extractProps(mixin.props, props);\n    });\n  }\n\n  if (componentDefinition.extends && componentDefinition.extends.props) {\n    var parentProps = componentDefinition.extends.props;\n\n\n    extractProps(parentProps, props);\n  }\n\n  extractProps(componentDefinition.props, props);\n\n  props.camelCase.forEach(function (prop) {\n    props.hyphenate.push(hyphenate(prop));\n  });\n\n  return props;\n}\n\nfunction reactiveProps(element, props) {\n  props.camelCase.forEach(function (name, index) {\n    Object.defineProperty(element, name, {\n      get: function get() {\n        return this.__vue_custom_element__[name];\n      },\n      set: function set(value) {\n        if (((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'function') && this.__vue_custom_element__) {\n          var propName = props.camelCase[index];\n          this.__vue_custom_element__[propName] = value;\n        } else {\n          var type = props.types[props.camelCase[index]];\n          this.setAttribute(props.hyphenate[index], convertAttributeValue(value, type));\n        }\n      }\n    });\n  });\n}\n\nfunction getPropsData(element, componentDefinition, props) {\n  var propsData = componentDefinition.propsData || {};\n\n  props.hyphenate.forEach(function (name, index) {\n    var propCamelCase = props.camelCase[index];\n    var propValue = element.attributes[name] || element[propCamelCase];\n\n    var type = null;\n    if (props.types[propCamelCase]) {\n      type = props.types[propCamelCase];\n    }\n\n    if (propValue instanceof Attr) {\n      propsData[propCamelCase] = convertAttributeValue(propValue.value, type);\n    } else if (typeof propValue !== 'undefined') {\n      propsData[propCamelCase] = propValue;\n    }\n  });\n\n  return propsData;\n}\n\nfunction getAttributes(children) {\n  var attributes = {};\n\n  toArray(children.attributes).forEach(function (attribute) {\n    attributes[attribute.nodeName === 'vue-slot' ? 'slot' : attribute.nodeName] = attribute.nodeValue;\n  });\n\n  return attributes;\n}\n\nfunction getChildNodes(element) {\n  if (element.childNodes.length) return element.childNodes;\n  if (element.content && element.content.childNodes && element.content.childNodes.length) {\n    return element.content.childNodes;\n  }\n\n  var placeholder = document.createElement('div');\n\n  placeholder.innerHTML = element.innerHTML;\n\n  return placeholder.childNodes;\n}\n\nfunction templateElement(createElement, element, elementOptions) {\n  var templateChildren = getChildNodes(element);\n\n  var vueTemplateChildren = toArray(templateChildren).map(function (child) {\n    if (child.nodeName === '#text') return child.nodeValue;\n\n    return createElement(child.tagName, {\n      attrs: getAttributes(child),\n      domProps: {\n        innerHTML: child.innerHTML\n      }\n    });\n  });\n\n  elementOptions.slot = element.id;\n\n  return createElement('template', elementOptions, vueTemplateChildren);\n}\n\nfunction getSlots() {\n  var children = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var createElement = arguments[1];\n\n  var slots = [];\n  toArray(children).forEach(function (child) {\n    if (child.nodeName === '#text') {\n      if (child.nodeValue.trim()) {\n        slots.push(createElement('span', child.nodeValue));\n      }\n    } else if (child.nodeName !== '#comment') {\n      var attributes = getAttributes(child);\n      var elementOptions = {\n        attrs: attributes,\n        domProps: {\n          innerHTML: child.innerHTML === '' ? child.innerText : child.innerHTML\n        }\n      };\n\n      if (attributes.slot) {\n        elementOptions.slot = attributes.slot;\n        attributes.slot = undefined;\n      }\n\n      var slotVueElement = child.tagName === 'TEMPLATE' ? templateElement(createElement, child, elementOptions) : createElement(child.tagName, elementOptions);\n\n      slots.push(slotVueElement);\n    }\n  });\n\n  return slots;\n}\n\nfunction customEvent(eventName, detail) {\n  var params = { bubbles: false, cancelable: false, detail: detail };\n  var event = void 0;\n  if (typeof window.CustomEvent === 'function') {\n    event = new CustomEvent(eventName, params);\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n  }\n  return event;\n}\n\nfunction customEmit(element, eventName) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var event = customEvent(eventName, [].concat(args));\n  element.dispatchEvent(event);\n}\n\nfunction createVueInstance(element, Vue, componentDefinition, props, options) {\n  if (!element.__vue_custom_element__) {\n    var beforeCreate = function beforeCreate() {\n      this.$emit = function emit() {\n        var _proto__$$emit;\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        customEmit.apply(undefined, [element].concat(args));\n        this.__proto__ && (_proto__$$emit = this.__proto__.$emit).call.apply(_proto__$$emit, [this].concat(args));\n      };\n    };\n\n    var ComponentDefinition = Vue.util.extend({}, componentDefinition);\n    var propsData = getPropsData(element, ComponentDefinition, props);\n    var vueVersion = Vue.version && parseInt(Vue.version.split('.')[0], 10) || 0;\n\n    ComponentDefinition.beforeCreate = [].concat(ComponentDefinition.beforeCreate || [], beforeCreate);\n\n    if (ComponentDefinition._compiled) {\n      var constructorOptions = {};\n      var _constructor = ComponentDefinition._Ctor;\n      if (_constructor) {\n        constructorOptions = Object.keys(_constructor).map(function (key) {\n          return _constructor[key];\n        })[0].options;\n      }\n      constructorOptions.beforeCreate = ComponentDefinition.beforeCreate;\n    }\n\n    var rootElement = void 0;\n\n    if (vueVersion >= 2) {\n      var elementOriginalChildren = element.cloneNode(true).childNodes;\n      rootElement = {\n        propsData: propsData,\n        props: props.camelCase,\n        computed: {\n          reactiveProps: function reactiveProps$$1() {\n            var _this = this;\n\n            var reactivePropsList = {};\n            props.camelCase.forEach(function (prop) {\n              typeof _this[prop] !== 'undefined' && (reactivePropsList[prop] = _this[prop]);\n            });\n\n            return reactivePropsList;\n          }\n        },\n        render: function render(createElement) {\n          var data = {\n            props: this.reactiveProps\n          };\n\n          return createElement(ComponentDefinition, data, getSlots(elementOriginalChildren, createElement));\n        }\n      };\n    } else if (vueVersion === 1) {\n      rootElement = ComponentDefinition;\n      rootElement.propsData = propsData;\n    } else {\n      rootElement = ComponentDefinition;\n      var propsWithDefault = {};\n      Object.keys(propsData).forEach(function (prop) {\n        propsWithDefault[prop] = { default: propsData[prop] };\n      });\n      rootElement.props = propsWithDefault;\n    }\n\n    var elementInnerHtml = vueVersion >= 2 ? '<div></div>' : ('<div>' + element.innerHTML + '</div>').replace(/vue-slot=/g, 'slot=');\n    if (options.shadow && element.shadowRoot) {\n      element.shadowRoot.innerHTML = elementInnerHtml;\n      rootElement.el = element.shadowRoot.children[0];\n    } else {\n      element.innerHTML = elementInnerHtml;\n      rootElement.el = element.children[0];\n    }\n\n    reactiveProps(element, props);\n\n    if (typeof options.beforeCreateVueInstance === 'function') {\n      rootElement = options.beforeCreateVueInstance(rootElement) || rootElement;\n    }\n\n    element.__vue_custom_element__ = new Vue(rootElement);\n    element.__vue_custom_element_props__ = props;\n    element.getVueInstance = function () {\n      var vueInstance = element.__vue_custom_element__;\n      return vueInstance.$children.length ? vueInstance.$children[0] : vueInstance;\n    };\n\n    if (options.shadow && options.shadowCss && element.shadowRoot) {\n      var style = document.createElement('style');\n      style.type = 'text/css';\n      style.appendChild(document.createTextNode(options.shadowCss));\n\n      element.shadowRoot.appendChild(style);\n    }\n    element.removeAttribute('vce-cloak');\n    element.setAttribute('vce-ready', '');\n    customEmit(element, 'vce-ready');\n  }\n}\n\nfunction install(Vue) {\n  Vue.customElement = function vueCustomElement(tag, componentDefinition) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var isAsyncComponent = typeof componentDefinition === 'function';\n    var optionsProps = isAsyncComponent && { props: options.props || [] };\n    var props = getProps(isAsyncComponent ? optionsProps : componentDefinition);\n\n    var CustomElement = registerCustomElement(tag, {\n      constructorCallback: function constructorCallback() {\n        typeof options.constructorCallback === 'function' && options.constructorCallback.call(this);\n      },\n      connectedCallback: function connectedCallback() {\n        var _this = this;\n\n        var asyncComponentPromise = isAsyncComponent && componentDefinition();\n        var isAsyncComponentPromise = asyncComponentPromise && asyncComponentPromise.then && typeof asyncComponentPromise.then === 'function';\n\n        typeof options.connectedCallback === 'function' && options.connectedCallback.call(this);\n\n        if (isAsyncComponent && !isAsyncComponentPromise) {\n          throw new Error('Async component ' + tag + ' do not returns Promise');\n        }\n        if (!this.__detached__) {\n          if (isAsyncComponentPromise) {\n            asyncComponentPromise.then(function (lazyLoadedComponent) {\n              var lazyLoadedComponentProps = getProps(lazyLoadedComponent);\n              createVueInstance(_this, Vue, lazyLoadedComponent, lazyLoadedComponentProps, options);\n              typeof options.vueInstanceCreatedCallback === 'function' && options.vueInstanceCreatedCallback.call(_this);\n            });\n          } else {\n            createVueInstance(this, Vue, componentDefinition, props, options);\n            typeof options.vueInstanceCreatedCallback === 'function' && options.vueInstanceCreatedCallback.call(this);\n          }\n        }\n\n        this.__detached__ = false;\n      },\n      disconnectedCallback: function disconnectedCallback() {\n        var _this2 = this;\n\n        this.__detached__ = true;\n        typeof options.disconnectedCallback === 'function' && options.disconnectedCallback.call(this);\n\n        options.destroyTimeout !== null && setTimeout(function () {\n          if (_this2.__detached__ && _this2.__vue_custom_element__) {\n            _this2.__detached__ = false;\n            _this2.__vue_custom_element__.$destroy(true);\n            delete _this2.__vue_custom_element__;\n            delete _this2.__vue_custom_element_props__;\n          }\n        }, options.destroyTimeout || 3000);\n      },\n      attributeChangedCallback: function attributeChangedCallback(name, oldValue, value) {\n        if (this.__vue_custom_element__ && typeof value !== 'undefined') {\n          var nameCamelCase = camelize(name);\n          typeof options.attributeChangedCallback === 'function' && options.attributeChangedCallback.call(this, name, oldValue, value);\n          var type = this.__vue_custom_element_props__.types[nameCamelCase];\n          this.__vue_custom_element__[nameCamelCase] = convertAttributeValue(value, type);\n        }\n      },\n\n\n      observedAttributes: props.hyphenate,\n\n      shadow: !!options.shadow && !!HTMLElement.prototype.attachShadow\n    });\n\n    return CustomElement;\n  };\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(install);\n  if (install.installed) {\n    install.installed = false;\n  }\n}\n\nexport default install;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-custom-element/dist/vue-custom-element.esm.js\n// module id = PXmv\n// module chunks = 0","var Encoder = require('./Encoder.js');\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction III_psy_xmin() {\n    this.l = new_float(Encoder.SBMAX_l);\n    this.s = new_float_n([Encoder.SBMAX_s, 3]);\n\n    var self = this;\n    this.assign = function (iii_psy_xmin) {\n        System.arraycopy(iii_psy_xmin.l, 0, self.l, 0, Encoder.SBMAX_l);\n        for (var i = 0; i < Encoder.SBMAX_s; i++) {\n            for (var j = 0; j < 3; j++) {\n                self.s[i][j] = iii_psy_xmin.s[i][j];\n            }\n        }\n    }\n}\n\nmodule.exports = III_psy_xmin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/III_psy_xmin.js\n// module id = QG6P\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = S82l\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = SfB7\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/transformData.js\n// module id = TNV1\n// module chunks = 0","function new_byte(count) {\n    return new Int8Array(count);\n}\n\nfunction new_short(count) {\n    return new Int16Array(count);\n}\n\nfunction new_int(count) {\n    return new Int32Array(count);\n}\n\nfunction new_float(count) {\n    return new Float32Array(count);\n}\n\nfunction new_double(count) {\n    return new Float64Array(count);\n}\n\nfunction new_float_n(args) {\n    if (args.length == 1) {\n        return new_float(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_float_n(args));\n    }\n    return A;\n}\nfunction new_int_n(args) {\n    if (args.length == 1) {\n        return new_int(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_int_n(args));\n    }\n    return A;\n}\n\nfunction new_short_n(args) {\n    if (args.length == 1) {\n        return new_short(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_short_n(args));\n    }\n    return A;\n}\n\nfunction new_array_n(args) {\n    if (args.length == 1) {\n        return new Array(args[0]);\n    }\n    var sz = args[0];\n    args = args.slice(1);\n    var A = [];\n    for (var i = 0; i < sz; i++) {\n        A.push(new_array_n(args));\n    }\n    return A;\n}\n\n\nvar Arrays = {};\n\nArrays.fill = function (a, fromIndex, toIndex, val) {\n    if (arguments.length == 2) {\n        for (var i = 0; i < a.length; i++) {\n            a[i] = arguments[1];\n        }\n    } else {\n        for (var i = fromIndex; i < toIndex; i++) {\n            a[i] = val;\n        }\n    }\n};\n\nvar System = {};\n\nSystem.arraycopy = function (src, srcPos, dest, destPos, length) {\n    var srcEnd = srcPos + length;\n    while (srcPos < srcEnd)\n        dest[destPos++] = src[srcPos++];\n};\n\n\nvar Util = {};\nUtil.SQRT2 = 1.41421356237309504880;\nUtil.FAST_LOG10 = function (x) {\n    return Math.log10(x);\n};\n\nUtil.FAST_LOG10_X = function (x, y) {\n    return Math.log10(x) * y;\n};\n\nfunction ShortBlock(ordinal) {\n    this.ordinal = ordinal;\n}\n/**\n * LAME may use them, even different block types for L/R.\n */\nShortBlock.short_block_allowed = new ShortBlock(0);\n/**\n * LAME may use them, but always same block types in L/R.\n */\nShortBlock.short_block_coupled = new ShortBlock(1);\n/**\n * LAME will not use short blocks, long blocks only.\n */\nShortBlock.short_block_dispensed = new ShortBlock(2);\n/**\n * LAME will not use long blocks, short blocks only.\n */\nShortBlock.short_block_forced = new ShortBlock(3);\n\nvar Float = {};\nFloat.MAX_VALUE = 3.4028235e+38;\n\nfunction VbrMode(ordinal) {\n    this.ordinal = ordinal;\n}\nVbrMode.vbr_off = new VbrMode(0);\nVbrMode.vbr_mt = new VbrMode(1);\nVbrMode.vbr_rh = new VbrMode(2);\nVbrMode.vbr_abr = new VbrMode(3);\nVbrMode.vbr_mtrh = new VbrMode(4);\nVbrMode.vbr_default = VbrMode.vbr_mtrh;\n\nvar assert = function (x) {\n    //console.assert(x);\n};\n\nmodule.exports = {\n    \"System\": System,\n    \"VbrMode\": VbrMode,\n    \"Float\": Float,\n    \"ShortBlock\": ShortBlock,\n    \"Util\": Util,\n    \"Arrays\": Arrays,\n    \"new_array_n\": new_array_n,\n    \"new_byte\": new_byte,\n    \"new_double\": new_double,\n    \"new_float\": new_float,\n    \"new_float_n\": new_float_n,\n    \"new_int\": new_int,\n    \"new_int_n\": new_int_n,\n    \"new_short\": new_short,\n    \"new_short_n\": new_short_n,\n    \"assert\": assert\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/common.js\n// module id = To6e\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar IIISideInfo = require('./IIISideInfo.js');\nvar ScaleFac = require('./ScaleFac.js');\nvar NsPsy = require('./NsPsy.js');\nvar VBRSeekInfo = require('./VBRSeekInfo.js');\nvar III_psy_xmin = require('./III_psy_xmin.js');\nvar Encoder = require('./Encoder.js');\nvar L3Side = require('./L3Side.js');\n\n\nLameInternalFlags.MFSIZE = (3 * 1152 + Encoder.ENCDELAY - Encoder.MDCTDELAY);\nLameInternalFlags.MAX_HEADER_BUF = 256;\nLameInternalFlags.MAX_BITS_PER_CHANNEL = 4095;\nLameInternalFlags.MAX_BITS_PER_GRANULE = 7680;\nLameInternalFlags.BPC = 320;\n\nfunction LameInternalFlags() {\n    var MAX_HEADER_LEN = 40;\n\n\n    /********************************************************************\n     * internal variables NOT set by calling program, and should not be *\n     * modified by the calling program *\n     ********************************************************************/\n\n    /**\n     * Some remarks to the Class_ID field: The Class ID is an Identifier for a\n     * pointer to this struct. It is very unlikely that a pointer to\n     * lame_global_flags has the same 32 bits in it's structure (large and other\n     * special properties, for instance prime).\n     *\n     * To test that the structure is right and initialized, use: if ( gfc .\n     * Class_ID == LAME_ID ) ... Other remark: If you set a flag to 0 for uninit\n     * data and 1 for init data, the right test should be \"if (flag == 1)\" and\n     * NOT \"if (flag)\". Unintended modification of this element will be\n     * otherwise misinterpreted as an init.\n     */\n    this.Class_ID = 0;\n\n    this.lame_encode_frame_init = 0;\n    this.iteration_init_init = 0;\n    this.fill_buffer_resample_init = 0;\n\n    //public float mfbuf[][] = new float[2][MFSIZE];\n    this.mfbuf = new_float_n([2, LameInternalFlags.MFSIZE]);\n\n    /**\n     * granules per frame\n     */\n    this.mode_gr = 0;\n    /**\n     * number of channels in the input data stream (PCM or decoded PCM)\n     */\n    this.channels_in = 0;\n    /**\n     * number of channels in the output data stream (not used for decoding)\n     */\n    this.channels_out = 0;\n    /**\n     * input_samp_rate/output_samp_rate\n     */\n        //public double resample_ratio;\n    this.resample_ratio = 0.;\n\n    this.mf_samples_to_encode = 0;\n    this.mf_size = 0;\n    /**\n     * min bitrate index\n     */\n    this.VBR_min_bitrate = 0;\n    /**\n     * max bitrate index\n     */\n    this.VBR_max_bitrate = 0;\n    this.bitrate_index = 0;\n    this.samplerate_index = 0;\n    this.mode_ext = 0;\n\n    /* lowpass and highpass filter control */\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.lowpass1 = 0.;\n    this.lowpass2 = 0.;\n    /**\n     * normalized frequency bounds of passband\n     */\n    this.highpass1 = 0.;\n    this.highpass2 = 0.;\n\n    /**\n     * 0 = none 1 = ISO AAC model 2 = allow scalefac_select=1\n     */\n    this.noise_shaping = 0;\n\n    /**\n     * 0 = ISO model: amplify all distorted bands<BR>\n     * 1 = amplify within 50% of max (on db scale)<BR>\n     * 2 = amplify only most distorted band<BR>\n     * 3 = method 1 and refine with method 2<BR>\n     */\n    this.noise_shaping_amp = 0;\n    /**\n     * 0 = no substep<BR>\n     * 1 = use substep shaping at last step(VBR only)<BR>\n     * (not implemented yet)<BR>\n     * 2 = use substep inside loop<BR>\n     * 3 = use substep inside loop and last step<BR>\n     */\n    this.substep_shaping = 0;\n\n    /**\n     * 1 = gpsycho. 0 = none\n     */\n    this.psymodel = 0;\n    /**\n     * 0 = stop at over=0, all scalefacs amplified or<BR>\n     * a scalefac has reached max value<BR>\n     * 1 = stop when all scalefacs amplified or a scalefac has reached max value<BR>\n     * 2 = stop when all scalefacs amplified\n     */\n    this.noise_shaping_stop = 0;\n\n    /**\n     * 0 = no, 1 = yes\n     */\n    this.subblock_gain = 0;\n    /**\n     * 0 = no. 1=outside loop 2=inside loop(slow)\n     */\n    this.use_best_huffman = 0;\n\n    /**\n     * 0 = stop early after 0 distortion found. 1 = full search\n     */\n    this.full_outer_loop = 0;\n\n    //public IIISideInfo l3_side = new IIISideInfo();\n    this.l3_side = new IIISideInfo();\n    this.ms_ratio = new_float(2);\n\n    /* used for padding */\n    /**\n     * padding for the current frame?\n     */\n    this.padding = 0;\n    this.frac_SpF = 0;\n    this.slot_lag = 0;\n\n    /**\n     * optional ID3 tags\n     */\n        //public ID3TagSpec tag_spec;\n    this.tag_spec = null;\n    this.nMusicCRC = 0;\n\n    /* variables used by Quantize */\n    //public int OldValue[] = new int[2];\n    this.OldValue = new_int(2);\n    //public int CurrentStep[] = new int[2];\n    this.CurrentStep = new_int(2);\n\n    this.masking_lower = 0.;\n    //public int bv_scf[] = new int[576];\n    this.bv_scf = new_int(576);\n    //public int pseudohalf[] = new int[L3Side.SFBMAX];\n    this.pseudohalf = new_int(L3Side.SFBMAX);\n\n    /**\n     * will be set in lame_init_params\n     */\n    this.sfb21_extra = false;\n\n    /* BPC = maximum number of filter convolution windows to precompute */\n    //public float[][] inbuf_old = new float[2][];\n    this.inbuf_old = new Array(2);\n    //public float[][] blackfilt = new float[2 * BPC + 1][];\n    this.blackfilt = new Array(2 * LameInternalFlags.BPC + 1);\n    //public double itime[] = new double[2];\n    this.itime = new_double(2);\n    this.sideinfo_len = 0;\n\n    /* variables for newmdct.c */\n    //public float sb_sample[][][][] = new float[2][2][18][Encoder.SBLIMIT];\n    this.sb_sample = new_float_n([2, 2, 18, Encoder.SBLIMIT]);\n    this.amp_filter = new_float(32);\n\n    /* variables for BitStream */\n\n    /**\n     * <PRE>\n     * mpeg1: buffer=511 bytes  smallest frame: 96-38(sideinfo)=58\n     * max number of frames in reservoir:  8\n     * mpeg2: buffer=255 bytes.  smallest frame: 24-23bytes=1\n     * with VBR, if you are encoding all silence, it is possible to\n     * have 8kbs/24khz frames with 1byte of data each, which means we need\n     * to buffer up to 255 headers!\n     * </PRE>\n     */\n    /**\n     * also, max_header_buf has to be a power of two\n     */\n    /**\n     * max size of header is 38\n     */\n\n    function Header() {\n        this.write_timing = 0;\n        this.ptr = 0;\n        //public byte buf[] = new byte[MAX_HEADER_LEN];\n        this.buf = new_byte(MAX_HEADER_LEN);\n    }\n\n    this.header = new Array(LameInternalFlags.MAX_HEADER_BUF);\n\n    this.h_ptr = 0;\n    this.w_ptr = 0;\n    this.ancillary_flag = 0;\n\n    /* variables for Reservoir */\n    /**\n     * in bits\n     */\n    this.ResvSize = 0;\n    /**\n     * in bits\n     */\n    this.ResvMax = 0;\n\n    //public ScaleFac scalefac_band = new ScaleFac();\n    this.scalefac_band = new ScaleFac();\n\n    /* daa from PsyModel */\n    /* The static variables \"r\", \"phi_sav\", \"new\", \"old\" and \"oldest\" have */\n    /* to be remembered for the unpredictability measure. For \"r\" and */\n    /* \"phi_sav\", the first index from the left is the channel select and */\n    /* the second index is the \"age\" of the data. */\n    this.minval_l = new_float(Encoder.CBANDS);\n    this.minval_s = new_float(Encoder.CBANDS);\n    this.nb_1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_2 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s1 = new_float_n([4, Encoder.CBANDS]);\n    this.nb_s2 = new_float_n([4, Encoder.CBANDS]);\n    this.s3_ss = null;\n    this.s3_ll = null;\n    this.decay = 0.;\n\n    //public III_psy_xmin[] thm = new III_psy_xmin[4];\n    //public III_psy_xmin[] en = new III_psy_xmin[4];\n    this.thm = new Array(4);\n    this.en = new Array(4);\n\n    /**\n     * fft and energy calculation\n     */\n    this.tot_ener = new_float(4);\n\n    /* loudness calculation (for adaptive threshold of hearing) */\n    /**\n     * loudness^2 approx. per granule and channel\n     */\n    this.loudness_sq = new_float_n([2, 2]);\n    /**\n     * account for granule delay of L3psycho_anal\n     */\n    this.loudness_sq_save = new_float(2);\n\n    /**\n     * Scale Factor Bands\n     */\n    this.mld_l = new_float(Encoder.SBMAX_l);\n    this.mld_s = new_float(Encoder.SBMAX_s);\n    this.bm_l = new_int(Encoder.SBMAX_l);\n    this.bo_l = new_int(Encoder.SBMAX_l);\n    this.bm_s = new_int(Encoder.SBMAX_s);\n    this.bo_s = new_int(Encoder.SBMAX_s);\n    this.npart_l = 0;\n    this.npart_s = 0;\n\n    this.s3ind = new_int_n([Encoder.CBANDS, 2]);\n    this.s3ind_s = new_int_n([Encoder.CBANDS, 2]);\n\n    this.numlines_s = new_int(Encoder.CBANDS);\n    this.numlines_l = new_int(Encoder.CBANDS);\n    this.rnumlines_l = new_float(Encoder.CBANDS);\n    this.mld_cb_l = new_float(Encoder.CBANDS);\n    this.mld_cb_s = new_float(Encoder.CBANDS);\n    this.numlines_s_num1 = 0;\n    this.numlines_l_num1 = 0;\n\n    /* ratios */\n    this.pe = new_float(4);\n    this.ms_ratio_s_old = 0.;\n    this.ms_ratio_l_old = 0.;\n    this.ms_ener_ratio_old = 0.;\n\n    /**\n     * block type\n     */\n    this.blocktype_old = new_int(2);\n\n    /**\n     * variables used for --nspsytune\n     */\n    this.nsPsy = new NsPsy();\n\n    /**\n     * used for Xing VBR header\n     */\n    this.VBR_seek_table = new VBRSeekInfo();\n\n    /**\n     * all ATH related stuff\n     */\n        //public ATH ATH;\n    this.ATH = null;\n\n    this.PSY = null;\n\n    this.nogap_total = 0;\n    this.nogap_current = 0;\n\n    /* ReplayGain */\n    this.decode_on_the_fly = true;\n    this.findReplayGain = true;\n    this.findPeakSample = true;\n    this.PeakSample = 0.;\n    this.RadioGain = 0;\n    this.AudiophileGain = 0;\n    //public ReplayGain rgdata;\n    this.rgdata = null;\n\n    /**\n     * gain change required for preventing clipping\n     */\n    this.noclipGainChange = 0;\n    /**\n     * user-specified scale factor required for preventing clipping\n     */\n    this.noclipScale = 0.;\n\n    /* simple statistics */\n    this.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n    /**\n     * norm/start/short/stop/mixed(short)/sum\n     */\n    this.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n    //public PlottingData pinfo;\n    //public MPGLib.mpstr_tag hip;\n    this.pinfo = null;\n    this.hip = null;\n\n    this.in_buffer_nsamples = 0;\n    //public float[] in_buffer_0;\n    //public float[] in_buffer_1;\n    this.in_buffer_0 = null;\n    this.in_buffer_1 = null;\n\n    //public IIterationLoop iteration_loop;\n    this.iteration_loop = null;\n\n    for (var i = 0; i < this.en.length; i++) {\n        this.en[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.thm.length; i++) {\n        this.thm[i] = new III_psy_xmin();\n    }\n    for (var i = 0; i < this.header.length; i++) {\n        this.header[i] = new Header();\n    }\n\n}\n\nmodule.exports = LameInternalFlags;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/LameInternalFlags.js\n// module id = V0p0\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","//package mp3;\n\nfunction CalcNoiseResult() {\n    /**\n     * sum of quantization noise > masking\n     */\n    this.over_noise = 0.;\n    /**\n     * sum of all quantization noise\n     */\n    this.tot_noise = 0.;\n    /**\n     * max quantization noise\n     */\n    this.max_noise = 0.;\n    /**\n     * number of quantization noise > masking\n     */\n    this.over_count = 0;\n    /**\n     * SSD-like cost of distorted bands\n     */\n    this.over_SSD = 0;\n    this.bits = 0;\n}\n\nmodule.exports = CalcNoiseResult;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/CalcNoiseResult.js\n// module id = X5vS\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = X8DO\n// module chunks = 0","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/Axios.js\n// module id = XmWM\n// module chunks = 0","/*\n *  ReplayGainAnalysis - analyzes input samples and give the recommended dB change\n *  Copyright (C) 2001 David Robinson and Glen Sawyer\n *  Improvements and optimizations added by Frank Klemm, and by Marcel Muller \n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Lesser General Public\n *  License as published by the Free Software Foundation; either\n *  version 2.1 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public\n *  License along with this library; if not, write to the Free Software\n *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n *\n *  concept and filter values by David Robinson (David@Robinson.org)\n *    -- blame him if you think the idea is flawed\n *  original coding by Glen Sawyer (mp3gain@hotmail.com)\n *    -- blame him if you think this runs too slowly, or the coding is otherwise flawed\n *\n *  lots of code improvements by Frank Klemm ( http://www.uni-jena.de/~pfk/mpp/ )\n *    -- credit him for all the _good_ programming ;)\n *\n *\n *  For an explanation of the concepts and the basic algorithms involved, go to:\n *    http://www.replaygain.org/\n */\n\n/*\n *  Here's the deal. Call\n *\n *    InitGainAnalysis ( long samplefreq );\n *\n *  to initialize everything. Call\n *\n *    AnalyzeSamples ( var Float_t*  left_samples,\n *                     var Float_t*  right_samples,\n *                     size_t          num_samples,\n *                     int             num_channels );\n *\n *  as many times as you want, with as many or as few samples as you want.\n *  If mono, pass the sample buffer in through left_samples, leave\n *  right_samples NULL, and make sure num_channels = 1.\n *\n *    GetTitleGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  SINCE THE LAST TIME you called GetTitleGain() OR InitGainAnalysis().\n *\n *    GetAlbumGain()\n *\n *  will return the recommended dB level change for all samples analyzed\n *  since InitGainAnalysis() was called and finalized with GetTitleGain().\n *\n *  Pseudo-code to process an album:\n *\n *    Float_t       l_samples [4096];\n *    Float_t       r_samples [4096];\n *    size_t        num_samples;\n *    unsigned int  num_songs;\n *    unsigned int  i;\n *\n *    InitGainAnalysis ( 44100 );\n *    for ( i = 1; i <= num_songs; i++ ) {\n *        while ( ( num_samples = getSongSamples ( song[i], left_samples, right_samples ) ) > 0 )\n *            AnalyzeSamples ( left_samples, right_samples, num_samples, 2 );\n *        fprintf (\"Recommended dB change for song %2d: %+6.2 dB\\n\", i, GetTitleGain() );\n *    }\n *    fprintf (\"Recommended dB change for whole album: %+6.2 dB\\n\", GetAlbumGain() );\n */\n\n/*\n *  So here's the main source of potential code confusion:\n *\n *  The filters applied to the incoming samples are IIR filters,\n *  meaning they rely on up to <filter order> number of previous samples\n *  AND up to <filter order> number of previous filtered samples.\n *\n *  I set up the AnalyzeSamples routine to minimize memory usage and interface\n *  complexity. The speed isn't compromised too much (I don't think), but the\n *  internal complexity is higher than it should be for such a relatively\n *  simple routine.\n *\n *  Optimization/clarity suggestions are welcome.\n */\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\n/**\n * Table entries per dB\n */\nGainAnalysis.STEPS_per_dB = 100.;\n/**\n * Table entries for 0...MAX_dB (normal max. values are 70...80 dB)\n */\nGainAnalysis.MAX_dB = 120.;\nGainAnalysis.GAIN_NOT_ENOUGH_SAMPLES = -24601;\nGainAnalysis.GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.GAIN_ANALYSIS_OK = 1;\nGainAnalysis.INIT_GAIN_ANALYSIS_ERROR = 0;\nGainAnalysis.INIT_GAIN_ANALYSIS_OK = 1;\n\nGainAnalysis.YULE_ORDER = 10;\nGainAnalysis.MAX_ORDER = GainAnalysis.YULE_ORDER;\n\nGainAnalysis.MAX_SAMP_FREQ = 48000;\nGainAnalysis.RMS_WINDOW_TIME_NUMERATOR = 1;\nGainAnalysis.RMS_WINDOW_TIME_DENOMINATOR = 20;\nGainAnalysis.MAX_SAMPLES_PER_WINDOW = ((GainAnalysis.MAX_SAMP_FREQ * GainAnalysis.RMS_WINDOW_TIME_NUMERATOR) / GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR + 1);\n\nfunction GainAnalysis() {\n    /**\n     * calibration value for 89dB\n     */\n    var PINK_REF = 64.82;\n\n    var YULE_ORDER = GainAnalysis.YULE_ORDER;\n    /**\n     * percentile which is louder than the proposed level\n     */\n    var RMS_PERCENTILE = 0.95;\n    /**\n     * maximum allowed sample frequency [Hz]\n     */\n    var MAX_SAMP_FREQ = GainAnalysis.MAX_SAMP_FREQ;\n    var RMS_WINDOW_TIME_NUMERATOR = GainAnalysis.RMS_WINDOW_TIME_NUMERATOR;\n    /**\n     * numerator / denominator = time slice size [s]\n     */\n    var RMS_WINDOW_TIME_DENOMINATOR = GainAnalysis.RMS_WINDOW_TIME_DENOMINATOR;\n    /**\n     * max. Samples per Time slice\n     */\n    var MAX_SAMPLES_PER_WINDOW = GainAnalysis.MAX_SAMPLES_PER_WINDOW;\n\n\n    var ABYule = [\n        [0.03857599435200, -3.84664617118067, -0.02160367184185,\n            7.81501653005538, -0.00123395316851, -11.34170355132042,\n            -0.00009291677959, 13.05504219327545, -0.01655260341619,\n            -12.28759895145294, 0.02161526843274, 9.48293806319790,\n            -0.02074045215285, -5.87257861775999, 0.00594298065125,\n            2.75465861874613, 0.00306428023191, -0.86984376593551,\n            0.00012025322027, 0.13919314567432, 0.00288463683916],\n        [0.05418656406430, -3.47845948550071, -0.02911007808948,\n            6.36317777566148, -0.00848709379851, -8.54751527471874,\n            -0.00851165645469, 9.47693607801280, -0.00834990904936,\n            -8.81498681370155, 0.02245293253339, 6.85401540936998,\n            -0.02596338512915, -4.39470996079559, 0.01624864962975,\n            2.19611684890774, -0.00240879051584, -0.75104302451432,\n            0.00674613682247, 0.13149317958808, -0.00187763777362],\n        [0.15457299681924, -2.37898834973084, -0.09331049056315,\n            2.84868151156327, -0.06247880153653, -2.64577170229825,\n            0.02163541888798, 2.23697657451713, -0.05588393329856,\n            -1.67148153367602, 0.04781476674921, 1.00595954808547,\n            0.00222312597743, -0.45953458054983, 0.03174092540049,\n            0.16378164858596, -0.01390589421898, -0.05032077717131,\n            0.00651420667831, 0.02347897407020, -0.00881362733839],\n        [0.30296907319327, -1.61273165137247, -0.22613988682123,\n            1.07977492259970, -0.08587323730772, -0.25656257754070,\n            0.03282930172664, -0.16276719120440, -0.00915702933434,\n            -0.22638893773906, -0.02364141202522, 0.39120800788284,\n            -0.00584456039913, -0.22138138954925, 0.06276101321749,\n            0.04500235387352, -0.00000828086748, 0.02005851806501,\n            0.00205861885564, 0.00302439095741, -0.02950134983287],\n        [0.33642304856132, -1.49858979367799, -0.25572241425570,\n            0.87350271418188, -0.11828570177555, 0.12205022308084,\n            0.11921148675203, -0.80774944671438, -0.07834489609479,\n            0.47854794562326, -0.00469977914380, -0.12453458140019,\n            -0.00589500224440, -0.04067510197014, 0.05724228140351,\n            0.08333755284107, 0.00832043980773, -0.04237348025746,\n            -0.01635381384540, 0.02977207319925, -0.01760176568150],\n        [0.44915256608450, -0.62820619233671, -0.14351757464547,\n            0.29661783706366, -0.22784394429749, -0.37256372942400,\n            -0.01419140100551, 0.00213767857124, 0.04078262797139,\n            -0.42029820170918, -0.12398163381748, 0.22199650564824,\n            0.04097565135648, 0.00613424350682, 0.10478503600251,\n            0.06747620744683, -0.01863887810927, 0.05784820375801,\n            -0.03193428438915, 0.03222754072173, 0.00541907748707],\n        [0.56619470757641, -1.04800335126349, -0.75464456939302,\n            0.29156311971249, 0.16242137742230, -0.26806001042947,\n            0.16744243493672, 0.00819999645858, -0.18901604199609,\n            0.45054734505008, 0.30931782841830, -0.33032403314006,\n            -0.27562961986224, 0.06739368333110, 0.00647310677246,\n            -0.04784254229033, 0.08647503780351, 0.01639907836189,\n            -0.03788984554840, 0.01807364323573, -0.00588215443421],\n        [0.58100494960553, -0.51035327095184, -0.53174909058578,\n            -0.31863563325245, -0.14289799034253, -0.20256413484477,\n            0.17520704835522, 0.14728154134330, 0.02377945217615,\n            0.38952639978999, 0.15558449135573, -0.23313271880868,\n            -0.25344790059353, -0.05246019024463, 0.01628462406333,\n            -0.02505961724053, 0.06920467763959, 0.02442357316099,\n            -0.03721611395801, 0.01818801111503, -0.00749618797172],\n        [0.53648789255105, -0.25049871956020, -0.42163034350696,\n            -0.43193942311114, -0.00275953611929, -0.03424681017675,\n            0.04267842219415, -0.04678328784242, -0.10214864179676,\n            0.26408300200955, 0.14590772289388, 0.15113130533216,\n            -0.02459864859345, -0.17556493366449, -0.11202315195388,\n            -0.18823009262115, -0.04060034127000, 0.05477720428674,\n            0.04788665548180, 0.04704409688120, -0.02217936801134]];\n\n    var ABButter = [\n        [0.98621192462708, -1.97223372919527, -1.97242384925416,\n            0.97261396931306, 0.98621192462708],\n        [0.98500175787242, -1.96977855582618, -1.97000351574484,\n            0.97022847566350, 0.98500175787242],\n        [0.97938932735214, -1.95835380975398, -1.95877865470428,\n            0.95920349965459, 0.97938932735214],\n        [0.97531843204928, -1.95002759149878, -1.95063686409857,\n            0.95124613669835, 0.97531843204928],\n        [0.97316523498161, -1.94561023566527, -1.94633046996323,\n            0.94705070426118, 0.97316523498161],\n        [0.96454515552826, -1.92783286977036, -1.92909031105652,\n            0.93034775234268, 0.96454515552826],\n        [0.96009142950541, -1.91858953033784, -1.92018285901082,\n            0.92177618768381, 0.96009142950541],\n        [0.95856916599601, -1.91542108074780, -1.91713833199203,\n            0.91885558323625, 0.95856916599601],\n        [0.94597685600279, -1.88903307939452, -1.89195371200558,\n            0.89487434461664, 0.94597685600279]];\n\n\n    /**\n     * When calling this procedure, make sure that ip[-order] and op[-order]\n     * point to real data\n     */\n    //private void filterYule(final float[] input, int inputPos, float[] output,\n    //int outputPos, int nSamples, final float[] kernel) {\n    function filterYule(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            /* 1e-10 is a hack to avoid slowdown because of denormals */\n            output[outputPos] = 1e-10 + input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4] - output[outputPos - 3]\n                * kernel[5] + input[inputPos - 3] * kernel[6]\n                - output[outputPos - 4] * kernel[7] + input[inputPos - 4]\n                * kernel[8] - output[outputPos - 5] * kernel[9]\n                + input[inputPos - 5] * kernel[10] - output[outputPos - 6]\n                * kernel[11] + input[inputPos - 6] * kernel[12]\n                - output[outputPos - 7] * kernel[13] + input[inputPos - 7]\n                * kernel[14] - output[outputPos - 8] * kernel[15]\n                + input[inputPos - 8] * kernel[16] - output[outputPos - 9]\n                * kernel[17] + input[inputPos - 9] * kernel[18]\n                - output[outputPos - 10] * kernel[19]\n                + input[inputPos - 10] * kernel[20];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n//private void filterButter(final float[] input, int inputPos,\n//    float[] output, int outputPos, int nSamples, final float[] kernel) {\n    function filterButter(input, inputPos, output, outputPos, nSamples, kernel) {\n\n        while ((nSamples--) != 0) {\n            output[outputPos] = input[inputPos + 0] * kernel[0]\n                - output[outputPos - 1] * kernel[1] + input[inputPos - 1]\n                * kernel[2] - output[outputPos - 2] * kernel[3]\n                + input[inputPos - 2] * kernel[4];\n            ++outputPos;\n            ++inputPos;\n        }\n    }\n\n    /**\n     * @return INIT_GAIN_ANALYSIS_OK if successful, INIT_GAIN_ANALYSIS_ERROR if\n     *         not\n     */\n    function ResetSampleFrequency(rgData, samplefreq) {\n        /* zero out initial values */\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        switch (0 | (samplefreq)) {\n            case 48000:\n                rgData.reqindex = 0;\n                break;\n            case 44100:\n                rgData.reqindex = 1;\n                break;\n            case 32000:\n                rgData.reqindex = 2;\n                break;\n            case 24000:\n                rgData.reqindex = 3;\n                break;\n            case 22050:\n                rgData.reqindex = 4;\n                break;\n            case 16000:\n                rgData.reqindex = 5;\n                break;\n            case 12000:\n                rgData.reqindex = 6;\n                break;\n            case 11025:\n                rgData.reqindex = 7;\n                break;\n            case 8000:\n                rgData.reqindex = 8;\n                break;\n            default:\n                return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.sampleWindow = 0 | ((samplefreq * RMS_WINDOW_TIME_NUMERATOR\n            + RMS_WINDOW_TIME_DENOMINATOR - 1) / RMS_WINDOW_TIME_DENOMINATOR);\n\n        rgData.lsum = 0.;\n        rgData.rsum = 0.;\n        rgData.totsamp = 0;\n\n        Arrays.ill(rgData.A, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    }\n\n    this.InitGainAnalysis = function (rgData, samplefreq) {\n        if (ResetSampleFrequency(rgData, samplefreq) != INIT_GAIN_ANALYSIS_OK) {\n            return INIT_GAIN_ANALYSIS_ERROR;\n        }\n\n        rgData.linpre = MAX_ORDER;\n        rgData.rinpre = MAX_ORDER;\n        rgData.lstep = MAX_ORDER;\n        rgData.rstep = MAX_ORDER;\n        rgData.lout = MAX_ORDER;\n        rgData.rout = MAX_ORDER;\n\n        Arrays.fill(rgData.B, 0);\n\n        return INIT_GAIN_ANALYSIS_OK;\n    };\n\n    /**\n     * square\n     */\n    function fsqr(d) {\n        return d * d;\n    }\n\n    this.AnalyzeSamples = function (rgData, left_samples, left_samplesPos, right_samples, right_samplesPos, num_samples,\n                                    num_channels) {\n        var curleft;\n        var curleftBase;\n        var curright;\n        var currightBase;\n        var batchsamples;\n        var cursamples;\n        var cursamplepos;\n\n        if (num_samples == 0)\n            return GAIN_ANALYSIS_OK;\n\n        cursamplepos = 0;\n        batchsamples = num_samples;\n\n        switch (num_channels) {\n            case 1:\n                right_samples = left_samples;\n                right_samplesPos = left_samplesPos;\n                break;\n            case 2:\n                break;\n            default:\n                return GAIN_ANALYSIS_ERROR;\n        }\n\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER, MAX_ORDER);\n        }\n\n        while (batchsamples > 0) {\n            cursamples = batchsamples > rgData.sampleWindow - rgData.totsamp ? rgData.sampleWindow\n            - rgData.totsamp\n                : batchsamples;\n            if (cursamplepos < MAX_ORDER) {\n                curleft = rgData.linpre + cursamplepos;\n                curleftBase = rgData.linprebuf;\n                curright = rgData.rinpre + cursamplepos;\n                currightBase = rgData.rinprebuf;\n                if (cursamples > MAX_ORDER - cursamplepos)\n                    cursamples = MAX_ORDER - cursamplepos;\n            } else {\n                curleft = left_samplesPos + cursamplepos;\n                curleftBase = left_samples;\n                curright = right_samplesPos + cursamplepos;\n                currightBase = right_samples;\n            }\n\n            filterYule(curleftBase, curleft, rgData.lstepbuf, rgData.lstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n            filterYule(currightBase, curright, rgData.rstepbuf, rgData.rstep\n                + rgData.totsamp, cursamples, ABYule[rgData.reqindex]);\n\n            filterButter(rgData.lstepbuf, rgData.lstep + rgData.totsamp,\n                rgData.loutbuf, rgData.lout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n            filterButter(rgData.rstepbuf, rgData.rstep + rgData.totsamp,\n                rgData.routbuf, rgData.rout + rgData.totsamp, cursamples,\n                ABButter[rgData.reqindex]);\n\n            curleft = rgData.lout + rgData.totsamp;\n            /* Get the squared values */\n            curleftBase = rgData.loutbuf;\n            curright = rgData.rout + rgData.totsamp;\n            currightBase = rgData.routbuf;\n\n            var i = cursamples % 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft++]);\n                rgData.rsum += fsqr(currightBase[curright++]);\n            }\n            i = cursamples / 8;\n            while ((i--) != 0) {\n                rgData.lsum += fsqr(curleftBase[curleft + 0])\n                    + fsqr(curleftBase[curleft + 1])\n                    + fsqr(curleftBase[curleft + 2])\n                    + fsqr(curleftBase[curleft + 3])\n                    + fsqr(curleftBase[curleft + 4])\n                    + fsqr(curleftBase[curleft + 5])\n                    + fsqr(curleftBase[curleft + 6])\n                    + fsqr(curleftBase[curleft + 7]);\n                curleft += 8;\n                rgData.rsum += fsqr(currightBase[curright + 0])\n                    + fsqr(currightBase[curright + 1])\n                    + fsqr(currightBase[curright + 2])\n                    + fsqr(currightBase[curright + 3])\n                    + fsqr(currightBase[curright + 4])\n                    + fsqr(currightBase[curright + 5])\n                    + fsqr(currightBase[curright + 6])\n                    + fsqr(currightBase[curright + 7]);\n                curright += 8;\n            }\n\n            batchsamples -= cursamples;\n            cursamplepos += cursamples;\n            rgData.totsamp += cursamples;\n            if (rgData.totsamp == rgData.sampleWindow) {\n                /* Get the Root Mean Square (RMS) for this set of samples */\n                var val = GainAnalysis.STEPS_per_dB\n                    * 10.\n                    * Math.log10((rgData.lsum + rgData.rsum)\n                        / rgData.totsamp * 0.5 + 1.e-37);\n                var ival = (val <= 0) ? 0 : 0 | val;\n                if (ival >= rgData.A.length)\n                    ival = rgData.A.length - 1;\n                rgData.A[ival]++;\n                rgData.lsum = rgData.rsum = 0.;\n\n                System.arraycopy(rgData.loutbuf, rgData.totsamp,\n                    rgData.loutbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.routbuf, rgData.totsamp,\n                    rgData.routbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.lstepbuf, rgData.totsamp,\n                    rgData.lstepbuf, 0, MAX_ORDER);\n                System.arraycopy(rgData.rstepbuf, rgData.totsamp,\n                    rgData.rstepbuf, 0, MAX_ORDER);\n                rgData.totsamp = 0;\n            }\n            if (rgData.totsamp > rgData.sampleWindow) {\n                /*\n                 * somehow I really screwed up: Error in programming! Contact\n                 * author about totsamp > sampleWindow\n                 */\n                return GAIN_ANALYSIS_ERROR;\n            }\n        }\n        if (num_samples < MAX_ORDER) {\n            System.arraycopy(rgData.linprebuf, num_samples, rgData.linprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(rgData.rinprebuf, num_samples, rgData.rinprebuf,\n                0, MAX_ORDER - num_samples);\n            System.arraycopy(left_samples, left_samplesPos, rgData.linprebuf,\n                MAX_ORDER - num_samples, num_samples);\n            System.arraycopy(right_samples, right_samplesPos, rgData.rinprebuf,\n                MAX_ORDER - num_samples, num_samples);\n        } else {\n            System.arraycopy(left_samples, left_samplesPos + num_samples\n                - MAX_ORDER, rgData.linprebuf, 0, MAX_ORDER);\n            System.arraycopy(right_samples, right_samplesPos + num_samples\n                - MAX_ORDER, rgData.rinprebuf, 0, MAX_ORDER);\n        }\n\n        return GAIN_ANALYSIS_OK;\n    };\n\n    function analyzeResult(Array, len) {\n        var i;\n\n        var elems = 0;\n        for (i = 0; i < len; i++)\n            elems += Array[i];\n        if (elems == 0)\n            return GAIN_NOT_ENOUGH_SAMPLES;\n\n        var upper = 0 | Math.ceil(elems * (1. - RMS_PERCENTILE));\n        for (i = len; i-- > 0;) {\n            if ((upper -= Array[i]) <= 0)\n                break;\n        }\n\n        //return (float) ((float) PINK_REF - (float) i / (float) STEPS_per_dB);\n        return (PINK_REF - i / GainAnalysis.STEPS_per_dB);\n    }\n\n    this.GetTitleGain = function (rgData) {\n        var retval = analyzeResult(rgData.A, rgData.A.length);\n\n        for (var i = 0; i < rgData.A.length; i++) {\n            rgData.B[i] += rgData.A[i];\n            rgData.A[i] = 0;\n        }\n\n        for (var i = 0; i < MAX_ORDER; i++)\n            rgData.linprebuf[i] = rgData.lstepbuf[i] = rgData.loutbuf[i] = rgData.rinprebuf[i] = rgData.rstepbuf[i] = rgData.routbuf[i] = 0.;\n\n        rgData.totsamp = 0;\n        rgData.lsum = rgData.rsum = 0.;\n        return retval;\n    }\n\n}\n\nmodule.exports = GainAnalysis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/GainAnalysis.js\n// module id = Y2/2\n// module chunks = 0","export function calculateLineHeadPosition (ev, element) {\n  const progressWidth = element.getBoundingClientRect().width\n  const leftPosition = ev.target.getBoundingClientRect().left\n  let pos = (ev.clientX - leftPosition) / progressWidth\n\n  try {\n    if (!ev.target.className.match(/^ar\\-line\\-control/)) {\n      return\n    }\n  } catch (err) {\n    return\n  }\n\n  pos = pos < 0 ? 0 : pos\n  pos = pos > 1 ? 1 : pos\n\n  return pos\n}\n\nexport function convertTimeMMSS (seconds) {\n  return new Date(seconds * 1000).toISOString().substr(14, 5)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-audio-recorder/src/lib/utils.js\n// module id = ZdGo\n// module chunks = 0","//package mp3;\n\n/* MPEG modes */\nfunction MPEGMode(ordinal) {\n    var _ordinal = ordinal;\n    this.ordinal = function () {\n        return _ordinal;\n    }\n}\n\nMPEGMode.STEREO = new MPEGMode(0);\nMPEGMode.JOINT_STEREO = new MPEGMode(1);\nMPEGMode.DUAL_CHANNEL = new MPEGMode(2);\nMPEGMode.MONO = new MPEGMode(3);\nMPEGMode.NOT_SET = new MPEGMode(4);\n\nmodule.exports = MPEGMode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/MPEGMode.js\n// module id = ZezE\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n/**\n * ATH related stuff, if something new ATH related has to be added, please plug\n * it here into the ATH.\n */\nfunction ATH() {\n    /**\n     * Method for the auto adjustment.\n     */\n    this.useAdjust = 0;\n    /**\n     * factor for tuning the (sample power) point below which adaptive threshold\n     * of hearing adjustment occurs\n     */\n    this.aaSensitivityP = 0.;\n    /**\n     * Lowering based on peak volume, 1 = no lowering.\n     */\n    this.adjust = 0.;\n    /**\n     * Limit for dynamic ATH adjust.\n     */\n    this.adjustLimit = 0.;\n    /**\n     * Determined to lower x dB each second.\n     */\n    this.decay = 0.;\n    /**\n     * Lowest ATH value.\n     */\n    this.floor = 0.;\n    /**\n     * ATH for sfbs in long blocks.\n     */\n    this.l = new_float(Encoder.SBMAX_l);\n    /**\n     * ATH for sfbs in short blocks.\n     */\n    this.s = new_float(Encoder.SBMAX_s);\n    /**\n     * ATH for partitioned sfb21 in long blocks.\n     */\n    this.psfb21 = new_float(Encoder.PSFB21);\n    /**\n     * ATH for partitioned sfb12 in short blocks.\n     */\n    this.psfb12 = new_float(Encoder.PSFB12);\n    /**\n     * ATH for long block convolution bands.\n     */\n    this.cb_l = new_float(Encoder.CBANDS);\n    /**\n     * ATH for short block convolution bands.\n     */\n    this.cb_s = new_float(Encoder.CBANDS);\n    /**\n     * Equal loudness weights (based on ATH).\n     */\n    this.eql_w = new_float(Encoder.BLKSIZE / 2);\n}\n\nmodule.exports = ATH;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/ATH.js\n// module id = Zo5e\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/classCallCheck.js\n// module id = Zrlr\n// module chunks = 0","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/utils.js\n// module id = cGG2\n// module chunks = 0","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/CancelToken.js\n// module id = cWxy\n// module chunks = 0","//package mp3;\n\n/**\n * Layer III side information.\n *\n * @author Ken\n *\n */\n\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\nfunction ScaleFac(arrL, arrS, arr21, arr12) {\n\n    this.l = new_int(1 + Encoder.SBMAX_l);\n    this.s = new_int(1 + Encoder.SBMAX_s);\n    this.psfb21 = new_int(1 + Encoder.PSFB21);\n    this.psfb12 = new_int(1 + Encoder.PSFB12);\n    var l = this.l;\n    var s = this.s;\n\n    if (arguments.length == 4) {\n        //public ScaleFac(final int[] arrL, final int[] arrS, final int[] arr21,\n        //    final int[] arr12) {\n        this.arrL = arguments[0];\n        this.arrS = arguments[1];\n        this.arr21 = arguments[2];\n        this.arr12 = arguments[3];\n\n        System.arraycopy(this.arrL, 0, l, 0, Math.min(this.arrL.length, this.l.length));\n        System.arraycopy(this.arrS, 0, s, 0, Math.min(this.arrS.length, this.s.length));\n        System.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length));\n        System.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length));\n    }\n}\n\nmodule.exports = ScaleFac;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/ScaleFac.js\n// module id = d4lq\n// module chunks = 0","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isAbsoluteURL.js\n// module id = dIwP\n// module chunks = 0","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/Cancel.js\n// module id = dVOP\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = evD5\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar GrInfo = require('./GrInfo.js');\n\nfunction IIISideInfo() {\n    this.tt = [[null, null], [null, null]];\n    this.main_data_begin = 0;\n    this.private_bits = 0;\n    this.resvDrain_pre = 0;\n    this.resvDrain_post = 0;\n    this.scfsi = [new_int(4), new_int(4)];\n\n    for (var gr = 0; gr < 2; gr++) {\n        for (var ch = 0; ch < 2; ch++) {\n            this.tt[gr][ch] = new GrInfo();\n        }\n    }\n}\n\nmodule.exports = IIISideInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/IIISideInfo.js\n// module id = f64w\n// module chunks = 0","//package mp3;\n\nfunction VBRSeekInfo() {\n    /**\n     * What we have seen so far.\n     */\n    this.sum = 0;\n    /**\n     * How many frames we have seen in this chunk.\n     */\n    this.seen = 0;\n    /**\n     * How many frames we want to collect into one chunk.\n     */\n    this.want = 0;\n    /**\n     * Actual position in our bag.\n     */\n    this.pos = 0;\n    /**\n     * Size of our bag.\n     */\n    this.size = 0;\n    /**\n     * Pointer to our bag.\n     */\n    this.bag = null;\n    this.nVbrNumFrames = 0;\n    this.nBytesWritten = 0;\n    /* VBR tag data */\n    this.TotalFrameSize = 0;\n}\n\nmodule.exports = VBRSeekInfo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/VBRSeekInfo.js\n// module id = fd8M\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/InterceptorManager.js\n// module id = fuGk\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = hJx8\n// module chunks = 0","/*\n *      bit reservoir source file\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: Reservoir.java,v 1.9 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n/**\n * ResvFrameBegin:<BR>\n * Called (repeatedly) at the beginning of a frame. Updates the maximum size of\n * the reservoir, and checks to make sure main_data_begin was set properly by\n * the formatter<BR>\n * Background information:\n * \n * This is the original text from the ISO standard. Because of sooo many bugs\n * and irritations correcting comments are added in brackets []. A '^W' means\n * you should remove the last word.\n * \n * <PRE>\n *  1. The following rule can be used to calculate the maximum\n *     number of bits used for one granule [^W frame]:<BR>\n *     At the highest possible bitrate of Layer III (320 kbps\n *     per stereo signal [^W^W^W], 48 kHz) the frames must be of\n *     [^W^W^W are designed to have] constant length, i.e.\n *     one buffer [^W^W the frame] length is:<BR>\n * \n *         320 kbps * 1152/48 kHz = 7680 bit = 960 byte\n * \n *     This value is used as the maximum buffer per channel [^W^W] at\n *     lower bitrates [than 320 kbps]. At 64 kbps mono or 128 kbps\n *     stereo the main granule length is 64 kbps * 576/48 kHz = 768 bit\n *     [per granule and channel] at 48 kHz sampling frequency.\n *     This means that there is a maximum deviation (short time buffer\n *     [= reservoir]) of 7680 - 2*2*768 = 4608 bits is allowed at 64 kbps.\n *     The actual deviation is equal to the number of bytes [with the\n *     meaning of octets] denoted by the main_data_end offset pointer.\n *     The actual maximum deviation is (2^9-1)*8 bit = 4088 bits\n *     [for MPEG-1 and (2^8-1)*8 bit for MPEG-2, both are hard limits].\n *     ... The xchange of buffer bits between the left and right channel\n *     is allowed without restrictions [exception: dual channel].\n *     Because of the [constructed] constraint on the buffer size\n *     main_data_end is always set to 0 in the case of bit_rate_index==14,\n *     i.e. data rate 320 kbps per stereo signal [^W^W^W]. In this case\n *     all data are allocated between adjacent header [^W sync] words\n *     [, i.e. there is no buffering at all].\n * </PRE>\n */\n\nvar common = require('./common.js');\nvar assert = common.assert;\n\nfunction Reservoir() {\n\tvar bs;\n\n\tthis.setModules  = function(_bs) {\n\t\tbs = _bs;\n\t}\n\n\tthis.ResvFrameBegin = function(gfp, mean_bits) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar maxmp3buf;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar frameLength = bs.getframebits(gfp);\n\t\tmean_bits.bits = (frameLength - gfc.sideinfo_len * 8) / gfc.mode_gr;\n\n\t\t/**\n\t\t * <PRE>\n\t\t *  Meaning of the variables:\n\t\t *      resvLimit: (0, 8, ..., 8*255 (MPEG-2), 8*511 (MPEG-1))\n\t\t *          Number of bits can be stored in previous frame(s) due to\n\t\t *          counter size constaints\n\t\t *      maxmp3buf: ( ??? ... 8*1951 (MPEG-1 and 2), 8*2047 (MPEG-2.5))\n\t\t *          Number of bits allowed to encode one frame (you can take 8*511 bit\n\t\t *          from the bit reservoir and at most 8*1440 bit from the current\n\t\t *          frame (320 kbps, 32 kHz), so 8*1951 bit is the largest possible\n\t\t *          value for MPEG-1 and -2)\n\t\t * \n\t\t *          maximum allowed granule/channel size times 4 = 8*2047 bits.,\n\t\t *          so this is the absolute maximum supported by the format.\n\t\t * \n\t\t * \n\t\t *      fullFrameBits:  maximum number of bits available for encoding\n\t\t *                      the current frame.\n\t\t * \n\t\t *      mean_bits:      target number of bits per granule.\n\t\t * \n\t\t *      frameLength:\n\t\t * \n\t\t *      gfc.ResvMax:   maximum allowed reservoir\n\t\t * \n\t\t *      gfc.ResvSize:  current reservoir size\n\t\t * \n\t\t *      l3_side.resvDrain_pre:\n\t\t *         ancillary data to be added to previous frame:\n\t\t *         (only usefull in VBR modes if it is possible to have\n\t\t *         maxmp3buf < fullFrameBits)).  Currently disabled,\n\t\t *         see #define NEW_DRAIN\n\t\t *         2010-02-13: RH now enabled, it seems to be needed for CBR too,\n\t\t *                     as there exists one example, where the FhG decoder\n\t\t *                     can't decode a -b320 CBR file anymore.\n\t\t * \n\t\t *      l3_side.resvDrain_post:\n\t\t *         ancillary data to be added to this frame:\n\t\t * \n\t\t * </PRE>\n\t\t */\n\n\t\t/* main_data_begin has 9 bits in MPEG-1, 8 bits MPEG-2 */\n\t\tvar resvLimit = (8 * 256) * gfc.mode_gr - 8;\n\n\t\t/*\n\t\t * maximum allowed frame size. dont use more than this number of bits,\n\t\t * even if the frame has the space for them:\n\t\t */\n\t\tif (gfp.brate > 320) {\n\t\t\t/* in freeformat the buffer is constant */\n\t\t\tmaxmp3buf = 8 * ((int) ((gfp.brate * 1000)\n\t\t\t\t\t/ (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t} else {\n\t\t\t/*\n\t\t\t * all mp3 decoders should have enough buffer to handle this value:\n\t\t\t * size of a 320kbps 32kHz frame\n\t\t\t */\n\t\t\tmaxmp3buf = 8 * 1440;\n\n\t\t\t/*\n\t\t\t * Bouvigne suggests this more lax interpretation of the ISO doc\n\t\t\t * instead of using 8*960.\n\t\t\t */\n\n\t\t\tif (gfp.strict_ISO) {\n\t\t\t\tmaxmp3buf = 8 * ((int) (320000 / (gfp.out_samplerate / 1152) / 8 + .5));\n\t\t\t}\n\t\t}\n\n\t\tgfc.ResvMax = maxmp3buf - frameLength;\n\t\tif (gfc.ResvMax > resvLimit)\n\t\t\tgfc.ResvMax = resvLimit;\n\t\tif (gfc.ResvMax < 0 || gfp.disable_reservoir)\n\t\t\tgfc.ResvMax = 0;\n\n\t\tvar fullFrameBits = mean_bits.bits * gfc.mode_gr\n\t\t\t\t+ Math.min(gfc.ResvSize, gfc.ResvMax);\n\n\t\tif (fullFrameBits > maxmp3buf)\n\t\t\tfullFrameBits = maxmp3buf;\n\n\t\tassert (0 == gfc.ResvMax % 8);\n\t\tassert (gfc.ResvMax >= 0);\n\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t// frame analyzer code\n\t\tif (gfc.pinfo != null) {\n\t\t\t/*\n\t\t\t * expected bits per channel per granule [is this also right for\n\t\t\t * mono/stereo, MPEG-1/2 ?]\n\t\t\t */\n\t\t\tgfc.pinfo.mean_bits = mean_bits.bits / 2;\n\t\t\tgfc.pinfo.resvsize = gfc.ResvSize;\n\t\t}\n\n\t\treturn fullFrameBits;\n\t}\n\n\t/**\n\t * returns targ_bits: target number of bits to use for 1 granule<BR>\n\t * extra_bits: amount extra available from reservoir<BR>\n\t * Mark Taylor 4/99\n\t */\n\tthis.ResvMaxBits = function(gfp, mean_bits, targ_bits, cbr) {\n\t\tvar gfc = gfp.internal_flags;\n\t\tvar add_bits;\n        var ResvSize = gfc.ResvSize, ResvMax = gfc.ResvMax;\n\n\t\t/* compensate the saved bits used in the 1st granule */\n\t\tif (cbr != 0)\n\t\t\tResvSize += mean_bits;\n\n\t\tif ((gfc.substep_shaping & 1) != 0)\n\t\t\tResvMax *= 0.9;\n\n\t\ttarg_bits.bits = mean_bits;\n\n\t\t/* extra bits if the reservoir is almost full */\n\t\tif (ResvSize * 10 > ResvMax * 9) {\n\t\t\tadd_bits = ResvSize - (ResvMax * 9) / 10;\n\t\t\ttarg_bits.bits += add_bits;\n\t\t\tgfc.substep_shaping |= 0x80;\n\t\t} else {\n\t\t\tadd_bits = 0;\n\t\t\tgfc.substep_shaping &= 0x7f;\n\t\t\t/*\n\t\t\t * build up reservoir. this builds the reservoir a little slower\n\t\t\t * than FhG. It could simple be mean_bits/15, but this was rigged to\n\t\t\t * always produce 100 (the old value) at 128kbs\n\t\t\t */\n\t\t\tif (!gfp.disable_reservoir && 0 == (gfc.substep_shaping & 1))\n\t\t\t\ttarg_bits.bits -= .1 * mean_bits;\n\t\t}\n\n\t\t/* amount from the reservoir we are allowed to use. ISO says 6/10 */\n\t\tvar extra_bits = (ResvSize < (gfc.ResvMax * 6) / 10 ? ResvSize\n\t\t\t\t: (gfc.ResvMax * 6) / 10);\n\t\textra_bits -= add_bits;\n\n\t\tif (extra_bits < 0)\n\t\t\textra_bits = 0;\n\t\treturn extra_bits;\n\t}\n\n\t/**\n\t * Called after a granule's bit allocation. Readjusts the size of the\n\t * reservoir to reflect the granule's usage.\n\t */\n\tthis.ResvAdjust = function(gfc, gi) {\n\t\tgfc.ResvSize -= gi.part2_3_length + gi.part2_length;\n\t}\n\n\t/**\n\t * Called after all granules in a frame have been allocated. Makes sure that\n\t * the reservoir size is within limits, possibly by adding stuffing bits.\n\t */\n\tthis.ResvFrameEnd = function(gfc, mean_bits) {\n\t\tvar over_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tgfc.ResvSize += mean_bits * gfc.mode_gr;\n\t\tvar stuffingBits = 0;\n\t\tl3_side.resvDrain_post = 0;\n\t\tl3_side.resvDrain_pre = 0;\n\n\t\t/* we must be byte aligned */\n\t\tif ((over_bits = gfc.ResvSize % 8) != 0)\n\t\t\tstuffingBits += over_bits;\n\n\t\tover_bits = (gfc.ResvSize - stuffingBits) - gfc.ResvMax;\n\t\tif (over_bits > 0) {\n\t\t\tassert (0 == over_bits % 8);\n\t\t\tassert (over_bits >= 0);\n\t\t\tstuffingBits += over_bits;\n\t\t}\n\n\t\t/*\n\t\t * NOTE: enabling the NEW_DRAIN code fixes some problems with FhG\n\t\t * decoder shipped with MS Windows operating systems. Using this, it is\n\t\t * even possible to use Gabriel's lax buffer consideration again, which\n\t\t * assumes, any decoder should have a buffer large enough for a 320 kbps\n\t\t * frame at 32 kHz sample rate.\n\t\t * \n\t\t * old drain code: lame -b320 BlackBird.wav --. does not play with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * new drain code: lame -b320 BlackBird.wav --. plays fine with\n\t\t * GraphEdit.exe using FhG decoder V1.5 Build 50\n\t\t * \n\t\t * Robert Hegemann, 2010-02-13.\n\t\t */\n\t\t/*\n\t\t * drain as many bits as possible into previous frame ancillary data In\n\t\t * particular, in VBR mode ResvMax may have changed, and we have to make\n\t\t * sure main_data_begin does not create a reservoir bigger than ResvMax\n\t\t * mt 4/00\n\t\t */\n\t\t{\n\t\t\tvar mdb_bytes = Math.min(l3_side.main_data_begin * 8, stuffingBits) / 8;\n\t\t\tl3_side.resvDrain_pre += 8 * mdb_bytes;\n\t\t\tstuffingBits -= 8 * mdb_bytes;\n\t\t\tgfc.ResvSize -= 8 * mdb_bytes;\n\t\t\tl3_side.main_data_begin -= mdb_bytes;\n\t\t}\n\t\t/* drain the rest into this frames ancillary data */\n\t\tl3_side.resvDrain_post += stuffingBits;\n\t\tgfc.ResvSize -= stuffingBits;\n\t}\n}\n\nmodule.exports = Reservoir;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Reservoir.js\n// module id = jKIj\n// module chunks = 0","var Encoder = require('./Encoder.js');\n\nvar L3Side = {};\n\n\n\t/**\n\t * max scalefactor band, max(SBMAX_l, SBMAX_s*3, (SBMAX_s-3)*3+8)\n\t */\nL3Side.SFBMAX = (Encoder.SBMAX_s * 3);\n\nmodule.exports = L3Side;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/L3Side.js\n// module id = jhNZ\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = kM2E\n// module chunks = 0","/*\n *      psymodel.c\n *\n *      Copyright (c) 1999-2000 Mark Taylor\n *      Copyright (c) 2001-2002 Naoki Shibata\n *      Copyright (c) 2000-2003 Takehiro Tominaga\n *      Copyright (c) 2000-2008 Robert Hegemann\n *      Copyright (c) 2000-2005 Gabriel Bouvigne\n *      Copyright (c) 2000-2005 Alexander Leidinger\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: PsyModel.java,v 1.27 2011/05/24 20:48:06 kenchis Exp $ */\n\n\n/*\n PSYCHO ACOUSTICS\n\n\n This routine computes the psycho acoustics, delayed by one granule.\n\n Input: buffer of PCM data (1024 samples).\n\n This window should be centered over the 576 sample granule window.\n The routine will compute the psycho acoustics for\n this granule, but return the psycho acoustics computed\n for the *previous* granule.  This is because the block\n type of the previous granule can only be determined\n after we have computed the psycho acoustics for the following\n granule.\n\n Output:  maskings and energies for each scalefactor band.\n block type, PE, and some correlation measures.\n The PE is used by CBR modes to determine if extra bits\n from the bit reservoir should be used.  The correlation\n measures are used to determine mid/side or regular stereo.\n */\n/*\n Notation:\n\n barks:  a non-linear frequency scale.  Mapping from frequency to\n barks is given by freq2bark()\n\n scalefactor bands: The spectrum (frequencies) are broken into\n SBMAX \"scalefactor bands\".  Thes bands\n are determined by the MPEG ISO spec.  In\n the noise shaping/quantization code, we allocate\n bits among the partition bands to achieve the\n best possible quality\n\n partition bands:   The spectrum is also broken into about\n 64 \"partition bands\".  Each partition\n band is about .34 barks wide.  There are about 2-5\n partition bands for each scalefactor band.\n\n LAME computes all psycho acoustic information for each partition\n band.  Then at the end of the computations, this information\n is mapped to scalefactor bands.  The energy in each scalefactor\n band is taken as the sum of the energy in all partition bands\n which overlap the scalefactor band.  The maskings can be computed\n in the same way (and thus represent the average masking in that band)\n or by taking the minmum value multiplied by the number of\n partition bands used (which represents a minimum masking in that band).\n */\n/*\n The general outline is as follows:\n\n 1. compute the energy in each partition band\n 2. compute the tonality in each partition band\n 3. compute the strength of each partion band \"masker\"\n 4. compute the masking (via the spreading function applied to each masker)\n 5. Modifications for mid/side masking.\n\n Each partition band is considiered a \"masker\".  The strength\n of the i'th masker in band j is given by:\n\n s3(bark(i)-bark(j))*strength(i)\n\n The strength of the masker is a function of the energy and tonality.\n The more tonal, the less masking.  LAME uses a simple linear formula\n (controlled by NMT and TMN) which says the strength is given by the\n energy divided by a linear function of the tonality.\n */\n/*\n s3() is the \"spreading function\".  It is given by a formula\n determined via listening tests.\n\n The total masking in the j'th partition band is the sum over\n all maskings i.  It is thus given by the convolution of\n the strength with s3(), the \"spreading function.\"\n\n masking(j) = sum_over_i  s3(i-j)*strength(i)  = s3 o strength\n\n where \"o\" = convolution operator.  s3 is given by a formula determined\n via listening tests.  It is normalized so that s3 o 1 = 1.\n\n Note: instead of a simple convolution, LAME also has the\n option of using \"additive masking\"\n\n The most critical part is step 2, computing the tonality of each\n partition band.  LAME has two tonality estimators.  The first\n is based on the ISO spec, and measures how predictiable the\n signal is over time.  The more predictable, the more tonal.\n The second measure is based on looking at the spectrum of\n a single granule.  The more peaky the spectrum, the more\n tonal.  By most indications, the latter approach is better.\n\n Finally, in step 5, the maskings for the mid and side\n channel are possibly increased.  Under certain circumstances,\n noise in the mid & side channels is assumed to also\n be masked by strong maskers in the L or R channels.\n\n\n Other data computed by the psy-model:\n\n ms_ratio        side-channel / mid-channel masking ratio (for previous granule)\n ms_ratio_next   side-channel / mid-channel masking ratio for this granule\n\n percep_entropy[2]     L and R values (prev granule) of PE - A measure of how\n much pre-echo is in the previous granule\n percep_entropy_MS[2]  mid and side channel values (prev granule) of percep_entropy\n energy[4]             L,R,M,S energy in each channel, prev granule\n blocktype_d[2]        block type to use for previous granule\n */\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar FFT = require(\"./FFT.js\");\nvar Encoder = require(\"./Encoder.js\");\n\nfunction PsyModel() {\n\n    var fft = new FFT();\n\n    var LOG10 = 2.30258509299404568402;\n\n    var rpelev = 2;\n    var rpelev2 = 16;\n    var rpelev_s = 2;\n    var rpelev2_s = 16;\n\n    /* size of each partition band, in barks: */\n    var DELBARK = .34;\n\n    /* tuned for output level (sensitive to energy scale) */\n    var VO_SCALE = (1. / (14752 * 14752) / (Encoder.BLKSIZE / 2));\n\n    var temporalmask_sustain_sec = 0.01;\n\n    var NS_PREECHO_ATT0 = 0.8;\n    var NS_PREECHO_ATT1 = 0.6;\n    var NS_PREECHO_ATT2 = 0.3;\n\n    var NS_MSFIX = 3.5;\n\n    var NSATTACKTHRE = 4.4;\n    var NSATTACKTHRE_S = 25;\n\n    var NSFIRLEN = 21;\n\n    /* size of each partition band, in barks: */\n    var LN_TO_LOG10 = 0.2302585093;\n\n    function NON_LINEAR_SCALE_ENERGY(x) {\n        return x;\n    }\n\n    /**\n     * <PRE>\n     *       L3psycho_anal.  Compute psycho acoustics.\n     *\n     *       Data returned to the calling program must be delayed by one\n     *       granule.\n     *\n     *       This is done in two places.\n     *       If we do not need to know the blocktype, the copying\n     *       can be done here at the top of the program: we copy the data for\n     *       the last granule (computed during the last call) before it is\n     *       overwritten with the new data.  It looks like this:\n     *\n     *       0. static psymodel_data\n     *       1. calling_program_data = psymodel_data\n     *       2. compute psymodel_data\n     *\n     *       For data which needs to know the blocktype, the copying must be\n     *       done at the end of this loop, and the old values must be saved:\n     *\n     *       0. static psymodel_data_old\n     *       1. compute psymodel_data\n     *       2. compute possible block type of this granule\n     *       3. compute final block type of previous granule based on #2.\n     *       4. calling_program_data = psymodel_data_old\n     *       5. psymodel_data_old = psymodel_data\n     *     psycho_loudness_approx\n     *       jd - 2001 mar 12\n     *    in:  energy   - BLKSIZE/2 elements of frequency magnitudes ^ 2\n     *         gfp      - uses out_samplerate, ATHtype (also needed for ATHformula)\n     *    returns: loudness^2 approximation, a positive value roughly tuned for a value\n     *             of 1.0 for signals near clipping.\n     *    notes:   When calibrated, feeding this function binary white noise at sample\n     *             values +32767 or -32768 should return values that approach 3.\n     *             ATHformula is used to approximate an equal loudness curve.\n     *    future:  Data indicates that the shape of the equal loudness curve varies\n     *             with intensity.  This function might be improved by using an equal\n     *             loudness curve shaped for typical playback levels (instead of the\n     *             ATH, that is shaped for the threshold).  A flexible realization might\n     *             simply bend the existing ATH curve to achieve the desired shape.\n     *             However, the potential gain may not be enough to justify an effort.\n     * </PRE>\n     */\n    function psycho_loudness_approx(energy, gfc) {\n        var loudness_power = 0.0;\n        /* apply weights to power in freq. bands */\n        for (var i = 0; i < Encoder.BLKSIZE / 2; ++i)\n            loudness_power += energy[i] * gfc.ATH.eql_w[i];\n        loudness_power *= VO_SCALE;\n\n        return loudness_power;\n    }\n\n    function compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, wsamp_lPos, wsamp_s, wsamp_sPos, gr_out, chn, buffer, bufPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        /* FFT data for mid and side channel is derived from L & R */\n        else if (chn == 2) {\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n            for (var b = 2; b >= 0; --b) {\n                for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                    var l = wsamp_s[wsamp_sPos + 0][b][j];\n                    var r = wsamp_s[wsamp_sPos + 1][b][j];\n                    wsamp_s[wsamp_sPos + 0][b][j] = (l + r) * Util.SQRT2 * 0.5;\n                    wsamp_s[wsamp_sPos + 1][b][j] = (l - r) * Util.SQRT2 * 0.5;\n                }\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 - j];\n            var im = (wsamp_l[wsamp_lPos + 0])[Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        for (var b = 2; b >= 0; --b) {\n            fftenergy_s[b][0] = (wsamp_s[wsamp_sPos + 0])[b][0];\n            fftenergy_s[b][0] *= fftenergy_s[b][0];\n            for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n                var re = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 - j];\n                var im = (wsamp_s[wsamp_sPos + 0])[b][Encoder.BLKSIZE_s\n                / 2 + j];\n                fftenergy_s[b][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                    * re + im * im) * 0.5);\n            }\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n\n        /*********************************************************************\n         * compute loudness approximation (used for ATH auto-level adjustment)\n         *********************************************************************/\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    /* mask_add optimization */\n    /* init the limit values used to avoid computing log in mask_add when it is not necessary */\n\n    /**\n     * <PRE>\n     *  For example, with i = 10*log10(m2/m1)/10*16         (= log10(m2/m1)*16)\n     *\n     * abs(i)>8 is equivalent (as i is an integer) to\n     * abs(i)>=9\n     * i>=9 || i<=-9\n     * equivalent to (as i is the biggest integer smaller than log10(m2/m1)*16\n     * or the smallest integer bigger than log10(m2/m1)*16 depending on the sign of log10(m2/m1)*16)\n     * log10(m2/m1)>=9/16 || log10(m2/m1)<=-9/16\n     * exp10 is strictly increasing thus this is equivalent to\n     * m2/m1 >= 10^(9/16) || m2/m1<=10^(-9/16) which are comparisons to constants\n     * </PRE>\n     */\n\n    /**\n     * as in if(i>8)\n     */\n    var I1LIMIT = 8;\n    /**\n     * as in if(i>24) . changed 23\n     */\n    var I2LIMIT = 23;\n    /**\n     * as in if(m<15)\n     */\n    var MLIMIT = 15;\n\n    var ma_max_i1;\n    var ma_max_i2;\n    var ma_max_m;\n\n    /**\n     * This is the masking table:<BR>\n     * According to tonality, values are going from 0dB (TMN) to 9.3dB (NMT).<BR>\n     * After additive masking computation, 8dB are added, so final values are\n     * going from 8dB to 17.3dB\n     *\n     * pow(10, -0.0..-0.6)\n     */\n    var tab = [1.0, 0.79433, 0.63096, 0.63096,\n        0.63096, 0.63096, 0.63096, 0.25119, 0.11749];\n\n    function init_mask_add_max_values() {\n        ma_max_i1 = Math.pow(10, (I1LIMIT + 1) / 16.0);\n        ma_max_i2 = Math.pow(10, (I2LIMIT + 1) / 16.0);\n        ma_max_m = Math.pow(10, (MLIMIT) / 10.0);\n    }\n\n    var table1 = [3.3246 * 3.3246,\n        3.23837 * 3.23837, 3.15437 * 3.15437, 3.00412 * 3.00412,\n        2.86103 * 2.86103, 2.65407 * 2.65407, 2.46209 * 2.46209,\n        2.284 * 2.284, 2.11879 * 2.11879, 1.96552 * 1.96552,\n        1.82335 * 1.82335, 1.69146 * 1.69146, 1.56911 * 1.56911,\n        1.46658 * 1.46658, 1.37074 * 1.37074, 1.31036 * 1.31036,\n        1.25264 * 1.25264, 1.20648 * 1.20648, 1.16203 * 1.16203,\n        1.12765 * 1.12765, 1.09428 * 1.09428, 1.0659 * 1.0659,\n        1.03826 * 1.03826, 1.01895 * 1.01895, 1];\n\n    var table2 = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    var table3 = [2.35364 * 2.35364,\n        2.29259 * 2.29259, 2.23313 * 2.23313, 2.12675 * 2.12675,\n        2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303,\n        1.61695 * 1.61695, 1.49999 * 1.49999, 1.39148 * 1.39148,\n        1.29083 * 1.29083, 1.19746 * 1.19746, 1.11084 * 1.11084,\n        1.03826 * 1.03826];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function mask_add(m1, m2, kk, b, gfc, shortblock) {\n        var ratio;\n\n        if (m2 > m1) {\n            if (m2 < (m1 * ma_max_i2))\n                ratio = m2 / m1;\n            else\n                return (m1 + m2);\n        } else {\n            if (m1 >= (m2 * ma_max_i2))\n                return (m1 + m2);\n            ratio = m1 / m2;\n        }\n\n        /* Should always be true, just checking */\n        assert(m1 >= 0);\n        assert(m2 >= 0);\n\n        m1 += m2;\n        //if (((long)(b + 3) & 0xffffffff) <= 3 + 3) {\n        if ((b + 3) <= 3 + 3) {\n            /* approximately, 1 bark = 3 partitions */\n            /* 65% of the cases */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                /* 43% of the total */\n                return m1;\n            }\n\n            /* 22% of the total */\n            var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n            return m1 * table2[i];\n        }\n\n        /**\n         * <PRE>\n         * m<15 equ log10((m1+m2)/gfc.ATH.cb[k])<1.5\n         * equ (m1+m2)/gfc.ATH.cb[k]<10^1.5\n         * equ (m1+m2)<10^1.5 * gfc.ATH.cb[k]\n         * </PRE>\n         */\n        var i = 0 | Util.FAST_LOG10_X(ratio, 16.0);\n        if (shortblock != 0) {\n            m2 = gfc.ATH.cb_s[kk] * gfc.ATH.adjust;\n        } else {\n            m2 = gfc.ATH.cb_l[kk] * gfc.ATH.adjust;\n        }\n        assert(m2 >= 0);\n        if (m1 < ma_max_m * m2) {\n            /* 3% of the total */\n            /* Originally if (m > 0) { */\n            if (m1 > m2) {\n                var f, r;\n\n                f = 1.0;\n                if (i <= 13)\n                    f = table3[i];\n\n                r = Util.FAST_LOG10_X(m1 / m2, 10.0 / 15.0);\n                return m1 * ((table1[i] - f) * r + f);\n            }\n\n            if (i > 13)\n                return m1;\n\n            return m1 * table3[i];\n        }\n\n        /* 10% of total */\n        return m1 * table1[i];\n    }\n\n    var table2_ = [1.33352 * 1.33352,\n        1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497,\n        1.40548 * 1.40548, 1.3537 * 1.3537, 1.30382 * 1.30382,\n        1.22321 * 1.22321, 1.14758 * 1.14758, 1];\n\n    /**\n     * addition of simultaneous masking Naoki Shibata 2000/7\n     */\n    function vbrpsy_mask_add(m1, m2, b) {\n        var ratio;\n\n        if (m1 < 0) {\n            m1 = 0;\n        }\n        if (m2 < 0) {\n            m2 = 0;\n        }\n        if (m1 <= 0) {\n            return m2;\n        }\n        if (m2 <= 0) {\n            return m1;\n        }\n        if (m2 > m1) {\n            ratio = m2 / m1;\n        } else {\n            ratio = m1 / m2;\n        }\n        if (-2 <= b && b <= 2) {\n            /* approximately, 1 bark = 3 partitions */\n            /* originally 'if(i > 8)' */\n            if (ratio >= ma_max_i1) {\n                return m1 + m2;\n            } else {\n                var i = 0 | (Util.FAST_LOG10_X(ratio, 16.0));\n                return (m1 + m2) * table2_[i];\n            }\n        }\n        if (ratio < ma_max_i2) {\n            return m1 + m2;\n        }\n        if (m1 < m2) {\n            m1 = m2;\n        }\n        return m1;\n    }\n\n    /**\n     * compute interchannel masking effects\n     */\n    function calc_interchannel_masking(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n        if (gfc.channels_out > 1) {\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                var l = gfc.thm[0].l[sb];\n                var r = gfc.thm[1].l[sb];\n                gfc.thm[0].l[sb] += r * ratio;\n                gfc.thm[1].l[sb] += l * ratio;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                for (var sblock = 0; sblock < 3; sblock++) {\n                    var l = gfc.thm[0].s[sb][sblock];\n                    var r = gfc.thm[1].s[sb][sblock];\n                    gfc.thm[0].s[sb][sblock] += r * ratio;\n                    gfc.thm[1].s[sb][sblock] += l * ratio;\n                }\n            }\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function msfix1(gfc) {\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            /* use this fix if L & R masking differs by 2db or less */\n            /* if db = 10*log10(x2/x1) < 2 */\n            /* if (x2 < 1.58*x1) { */\n            if (gfc.thm[0].l[sb] > 1.58 * gfc.thm[1].l[sb]\n                || gfc.thm[1].l[sb] > 1.58 * gfc.thm[0].l[sb])\n                continue;\n            var mld = gfc.mld_l[sb] * gfc.en[3].l[sb];\n            var rmid = Math.max(gfc.thm[2].l[sb],\n                Math.min(gfc.thm[3].l[sb], mld));\n\n            mld = gfc.mld_l[sb] * gfc.en[2].l[sb];\n            var rside = Math.max(gfc.thm[3].l[sb],\n                Math.min(gfc.thm[2].l[sb], mld));\n            gfc.thm[2].l[sb] = rmid;\n            gfc.thm[3].l[sb] = rside;\n        }\n\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                if (gfc.thm[0].s[sb][sblock] > 1.58 * gfc.thm[1].s[sb][sblock]\n                    || gfc.thm[1].s[sb][sblock] > 1.58 * gfc.thm[0].s[sb][sblock])\n                    continue;\n                var mld = gfc.mld_s[sb] * gfc.en[3].s[sb][sblock];\n                var rmid = Math.max(gfc.thm[2].s[sb][sblock],\n                    Math.min(gfc.thm[3].s[sb][sblock], mld));\n\n                mld = gfc.mld_s[sb] * gfc.en[2].s[sb][sblock];\n                var rside = Math.max(gfc.thm[3].s[sb][sblock],\n                    Math.min(gfc.thm[2].s[sb][sblock], mld));\n\n                gfc.thm[2].s[sb][sblock] = rmid;\n                gfc.thm[3].s[sb][sblock] = rside;\n            }\n        }\n    }\n\n    /**\n     * Adjust M/S maskings if user set \"msfix\"\n     *\n     * Naoki Shibata 2000\n     */\n    function ns_msfix(gfc, msfix, athadjust) {\n        var msfix2 = msfix;\n        var athlower = Math.pow(10, athadjust);\n\n        msfix *= 2.0;\n        msfix2 *= 2.0;\n        for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n            var thmLR, thmM, thmS, ath;\n            ath = (gfc.ATH.cb_l[gfc.bm_l[sb]]) * athlower;\n            thmLR = Math.min(Math.max(gfc.thm[0].l[sb], ath),\n                Math.max(gfc.thm[1].l[sb], ath));\n            thmM = Math.max(gfc.thm[2].l[sb], ath);\n            thmS = Math.max(gfc.thm[3].l[sb], ath);\n            if (thmLR * msfix < thmM + thmS) {\n                var f = thmLR * msfix2 / (thmM + thmS);\n                thmM *= f;\n                thmS *= f;\n                assert(thmM + thmS > 0);\n            }\n            gfc.thm[2].l[sb] = Math.min(thmM, gfc.thm[2].l[sb]);\n            gfc.thm[3].l[sb] = Math.min(thmS, gfc.thm[3].l[sb]);\n        }\n\n        athlower *= ( Encoder.BLKSIZE_s / Encoder.BLKSIZE);\n        for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thmLR, thmM, thmS, ath;\n                ath = (gfc.ATH.cb_s[gfc.bm_s[sb]]) * athlower;\n                thmLR = Math.min(Math.max(gfc.thm[0].s[sb][sblock], ath),\n                    Math.max(gfc.thm[1].s[sb][sblock], ath));\n                thmM = Math.max(gfc.thm[2].s[sb][sblock], ath);\n                thmS = Math.max(gfc.thm[3].s[sb][sblock], ath);\n\n                if (thmLR * msfix < thmM + thmS) {\n                    var f = thmLR * msfix / (thmM + thmS);\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmM + thmS > 0);\n                }\n                gfc.thm[2].s[sb][sblock] = Math.min(gfc.thm[2].s[sb][sblock],\n                    thmM);\n                gfc.thm[3].s[sb][sblock] = Math.min(gfc.thm[3].s[sb][sblock],\n                    thmS);\n            }\n        }\n    }\n\n    /**\n     * short block threshold calculation (part 2)\n     *\n     * partition band bo_s[sfb] is at the transition from scalefactor band sfb\n     * to the next one sfb+1; enn and thmm have to be split between them\n     */\n    function convert_partition2scalefac_s(gfc, eb, thr, chn, sblock) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_s; ++b, ++sb) {\n            var bo_s_sb = gfc.bo_s[sb];\n            var npart_s = gfc.npart_s;\n            var b_lim = bo_s_sb < npart_s ? bo_s_sb : npart_s;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].s[sb][sblock] = enn;\n            gfc.thm[chn].s[sb][sblock] = thmm;\n\n            if (b >= npart_s) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            // iff failed, it may indicate some index error elsewhere\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_s_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].s[sb][sblock] += enn;\n                gfc.thm[chn].s[sb][sblock] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_s; ++sb) {\n            gfc.en[chn].s[sb][sblock] = 0;\n            gfc.thm[chn].s[sb][sblock] = 0;\n        }\n    }\n\n    /**\n     * longblock threshold calculation (part 2)\n     */\n    function convert_partition2scalefac_l(gfc, eb, thr, chn) {\n        var sb, b;\n        var enn = 0.0;\n        var thmm = 0.0;\n        for (sb = b = 0; sb < Encoder.SBMAX_l; ++b, ++sb) {\n            var bo_l_sb = gfc.bo_l[sb];\n            var npart_l = gfc.npart_l;\n            var b_lim = bo_l_sb < npart_l ? bo_l_sb : npart_l;\n            while (b < b_lim) {\n                assert(eb[b] >= 0);\n                // iff failed, it may indicate some index error elsewhere\n                assert(thr[b] >= 0);\n                enn += eb[b];\n                thmm += thr[b];\n                b++;\n            }\n            gfc.en[chn].l[sb] = enn;\n            gfc.thm[chn].l[sb] = thmm;\n\n            if (b >= npart_l) {\n                ++sb;\n                break;\n            }\n            assert(eb[b] >= 0);\n            assert(thr[b] >= 0);\n            {\n                /* at transition sfb . sfb+1 */\n                var w_curr = gfc.PSY.bo_l_weight[sb];\n                var w_next = 1.0 - w_curr;\n                enn = w_curr * eb[b];\n                thmm = w_curr * thr[b];\n                gfc.en[chn].l[sb] += enn;\n                gfc.thm[chn].l[sb] += thmm;\n                enn = w_next * eb[b];\n                thmm = w_next * thr[b];\n            }\n        }\n        /* zero initialize the rest */\n        for (; sb < Encoder.SBMAX_l; ++sb) {\n            gfc.en[chn].l[sb] = 0;\n            gfc.thm[chn].l[sb] = 0;\n        }\n    }\n\n    function compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var j, b;\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (var i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var ecb = gfc.s3_ss[j++] * eb[kk];\n            ++kk;\n            while (kk <= gfc.s3ind_s[b][1]) {\n                ecb += gfc.s3_ss[j] * eb[kk];\n                ++j;\n                ++kk;\n            }\n\n            { /* limit calculated threshold by previous granule */\n                var x = rpelev_s * gfc.nb_s1[chn][b];\n                thr[b] = Math.min(ecb, x);\n            }\n            if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE) {\n                /* limit calculated threshold by even older granule */\n                var x = rpelev2_s * gfc.nb_s2[chn][b];\n                var y = thr[b];\n                thr[b] = Math.min(x, y);\n            }\n\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            assert(thr[b] >= 0);\n        }\n        for (; b <= Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function block_type_set(gfp, uselongblock, blocktype_d, blocktype) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            blocktype[chn] = Encoder.NORM_TYPE;\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed)\n                uselongblock[chn] = 1;\n            if (gfp.short_blocks == ShortBlock.short_block_forced)\n                uselongblock[chn] = 0;\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype[chn] = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype[chn] = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype[chn];\n            // save for next call to l3psy_anal\n        }\n    }\n\n    function NS_INTERP(x, y, r) {\n        /* was pow((x),(r))*pow((y),1-(r)) */\n        if (r >= 1.0) {\n            /* 99.7% of the time */\n            return x;\n        }\n        if (r <= 0.0)\n            return y;\n        if (y > 0.0) {\n            /* rest of the time */\n            return (Math.pow(x / y, r) * y);\n        }\n        /* never happens */\n        return 0.0;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_s = [11.8, 13.6, 17.2, 32, 46.5,\n        51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,\n        /* 255.8 */\n    ];\n\n    function pecalc_s(mr, masking_lower) {\n        var pe_s = 1236.28 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_s - 1; sb++) {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                var thm = mr.thm.s[sb][sblock];\n                assert(sb < regcoef_s.length);\n                if (thm > 0.0) {\n                    var x = thm * masking_lower;\n                    var en = mr.en.s[sb][sblock];\n                    if (en > x) {\n                        if (en > x * 1e10) {\n                            pe_s += regcoef_s[sb] * (10.0 * LOG10);\n                        } else {\n                            assert(x > 0);\n                            pe_s += regcoef_s[sb] * Util.FAST_LOG10(en / x);\n                        }\n                    }\n                }\n            }\n        }\n\n        return pe_s;\n    }\n\n    /**\n     * these values are tuned only for 44.1kHz...\n     */\n    var regcoef_l = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9,\n        12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5,\n        60.7, 73.9, 85.7, 93.4, 126.1,\n        /* 241.3 */\n    ];\n\n    function pecalc_l(mr, masking_lower) {\n        var pe_l = 1124.23 / 4;\n        for (var sb = 0; sb < Encoder.SBMAX_l - 1; sb++) {\n            var thm = mr.thm.l[sb];\n            assert(sb < regcoef_l.length);\n            if (thm > 0.0) {\n                var x = thm * masking_lower;\n                var en = mr.en.l[sb];\n                if (en > x) {\n                    if (en > x * 1e10) {\n                        pe_l += regcoef_l[sb] * (10.0 * LOG10);\n                    } else {\n                        assert(x > 0);\n                        pe_l += regcoef_l[sb] * Util.FAST_LOG10(en / x);\n                    }\n                }\n            }\n        }\n        return pe_l;\n    }\n\n    function calc_energy(gfc, fftenergy, eb, max, avg) {\n        var b, j;\n\n        for (b = j = 0; b < gfc.npart_l; ++b) {\n            var ebb = 0, m = 0;\n            var i;\n            for (i = 0; i < gfc.numlines_l[b]; ++i, ++j) {\n                var el = fftenergy[j];\n                assert(el >= 0);\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            max[b] = m;\n            avg[b] = ebb * gfc.rnumlines_l[b];\n            assert(gfc.rnumlines_l[b] >= 0);\n            assert(ebb >= 0);\n            assert(eb[b] >= 0);\n            assert(max[b] >= 0);\n            assert(avg[b] >= 0);\n        }\n    }\n\n    function calc_mask_index_l(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_l - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] + gfc.numlines_l[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b]\n                    + gfc.numlines_l[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_l - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_l[b - 1] + gfc.numlines_l[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_l - 1));\n    }\n\n    var fircoef = [\n        -8.65163e-18 * 2, -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2, 0.0931738 * 2,\n        -5.52212e-17 * 2, -0.313819 * 2\n    ];\n\n    this.L3psycho_anal_ns = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        /*\n         * to get a good cache performance, one has to think about the sequence,\n         * in which the variables are used.\n         */\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n\n        /* convolution */\n        var eb_l = new_float(Encoder.CBANDS + 1);\n        var eb_s = new_float(Encoder.CBANDS + 1);\n        var thr = new_float(Encoder.CBANDS + 2);\n\n        /* block type */\n        var blocktype = new_int(2), uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n        var numchn, chn;\n        var b, i, j, k;\n        var sb, sblock;\n\n        /* variables used for --nspsytune */\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var pcfact;\n        var mask_idx_l = new_int(Encoder.CBANDS + 2), mask_idx_s = new_int(Encoder.CBANDS + 2);\n\n        Arrays.fill(mask_idx_s, 0);\n\n        numchn = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        if (gfp.mode == MPEGMode.JOINT_STEREO)\n            numchn = 4;\n\n        if (gfp.VBR == VbrMode.vbr_off)\n            pcfact = gfc.ResvMax == 0 ? 0 : ( gfc.ResvSize)\n            / gfc.ResvMax * 0.5;\n        else if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            pcfact = 0.6;\n        } else\n            pcfact = 1.0;\n\n        /**********************************************************************\n         * Apply HPF of fs/4 to the input signal. This is used for attack\n         * detection / handling.\n         **********************************************************************/\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (chn = 0; chn < gfc.channels_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            var firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef.length == ((NSFIRLEN - 1) / 2));\n            for (i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (numchn > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n\n        for (chn = 0; chn < numchn; chn++) {\n            var wsamp_l;\n            var wsamp_s;\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var attack_intensity = new_float(12);\n            var ns_uselongblock = 1;\n            var attackThreshold;\n            var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n            var ns_attacks = [0, 0, 0, 0];\n            var fftenergy = new_float(Encoder.HBLKSIZE);\n            var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n\n            /*\n             * rh 20040301: the following loops do access one off the limits so\n             * I increase the array dimensions by one and initialize the\n             * accessed values to zero\n             */\n            assert(gfc.npart_s <= Encoder.CBANDS);\n            assert(gfc.npart_l <= Encoder.CBANDS);\n\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            if (chn == 2) {\n                for (i = 0; i < 576; i++) {\n                    var l, r;\n                    l = ns_hpfsmpl[0][i];\n                    r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            {\n                var pf = ns_hpfsmpl[chn & 1];\n                var pfPos = 0;\n                for (i = 0; i < 9; i++) {\n                    var pfe = pfPos + 576 / 9;\n                    var p = 1.;\n                    for (; pfPos < pfe; pfPos++)\n                        if (p < Math.abs(pf[pfPos]))\n                            p = Math.abs(pf[pfPos]);\n\n                    gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                    en_short[1 + i / 3] += p;\n                    if (p > en_subshort[i + 3 - 2]) {\n                        assert(en_subshort[i + 3 - 2] > 0);\n                        p = p / en_subshort[i + 3 - 2];\n                    } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                        assert(p > 0);\n                        p = en_subshort[i + 3 - 2] / (p * 10.0);\n                    } else\n                        p = 0.0;\n                    attack_intensity[i + 3] = p;\n                }\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (i = 1; i < 12; i++)\n                    if (x < attack_intensity[i])\n                        x = attack_intensity[i];\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            for (i = 0; i < 12; i++)\n                if (0 == ns_attacks[i / 3]\n                    && attack_intensity[i] > attackThreshold)\n                    ns_attacks[i / 3] = (i % 3) + 1;\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            for (i = 1; i < 4; i++) {\n                var ratio;\n                if (en_short[i - 1] > en_short[i]) {\n                    assert(en_short[i] > 0);\n                    ratio = en_short[i - 1] / en_short[i];\n                } else {\n                    assert(en_short[i - 1] > 0);\n                    ratio = en_short[i] / en_short[i - 1];\n                }\n                if (ratio < 1.7) {\n                    ns_attacks[i] = 0;\n                    if (i == 1)\n                        ns_attacks[0] = 0;\n                }\n            }\n\n            if (ns_attacks[0] != 0 && gfc.nsPsy.lastAttacks[chn] != 0)\n                ns_attacks[0] = 0;\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[0] + ns_attacks[1] + ns_attacks[2] + ns_attacks[3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[1] != 0 && ns_attacks[0] != 0)\n                    ns_attacks[1] = 0;\n                if (ns_attacks[2] != 0 && ns_attacks[1] != 0)\n                    ns_attacks[2] = 0;\n                if (ns_attacks[3] != 0 && ns_attacks[2] != 0)\n                    ns_attacks[3] = 0;\n            }\n\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n\n            /*********************************************************************\n             * compute FFTs\n             *********************************************************************/\n            wsamp_s = wsamp_S;\n            wsamp_l = wsamp_L;\n            compute_ffts(gfp, fftenergy, fftenergy_s, wsamp_l, (chn & 1),\n                wsamp_s, (chn & 1), gr_out, chn, buffer, bufPos);\n\n            /*********************************************************************\n             * Calculate the energy and the tonality of each partition.\n             *********************************************************************/\n            calc_energy(gfc, fftenergy, eb_l, max, avg);\n            calc_mask_index_l(gfc, max, avg, mask_idx_l);\n            /* compute masking thresholds for short blocks */\n            for (sblock = 0; sblock < 3; sblock++) {\n                var enn, thmm;\n                compute_masking_s(gfp, fftenergy_s, eb_s, thr, chn, sblock);\n                convert_partition2scalefac_s(gfc, eb_s, thr, chn, sblock);\n                /**** short block pre-echo control ****/\n                for (sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    thmm = gfc.thm[chn].s[sb][sblock];\n\n                    thmm *= NS_PREECHO_ATT0;\n                    if (ns_attacks[sblock] >= 2 || ns_attacks[sblock + 1] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT1 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    if (ns_attacks[sblock] == 1) {\n                        var idx = (sblock != 0) ? sblock - 1 : 2;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    } else if ((sblock != 0 && ns_attacks[sblock - 1] == 3)\n                        || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                        var idx = (sblock != 2) ? sblock + 1 : 0;\n                        var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                            NS_PREECHO_ATT2 * pcfact);\n                        thmm = Math.min(thmm, p);\n                    }\n\n                    /* pulse like signal detection for fatboy.wav and so on */\n                    enn = en_subshort[sblock * 3 + 3]\n                        + en_subshort[sblock * 3 + 4]\n                        + en_subshort[sblock * 3 + 5];\n                    if (en_subshort[sblock * 3 + 5] * 6 < enn) {\n                        thmm *= 0.5;\n                        if (en_subshort[sblock * 3 + 4] * 6 < enn)\n                            thmm *= 0.5;\n                    }\n\n                    gfc.thm[chn].s[sb][sblock] = thmm;\n                }\n            }\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[2];\n\n            /*********************************************************************\n             * convolve the partitioned energy and unpredictability with the\n             * spreading function, s3_l[b][k]\n             ********************************************************************/\n            k = 0;\n            {\n                for (b = 0; b < gfc.npart_l; b++) {\n                    /*\n                     * convolve the partitioned energy with the spreading\n                     * function\n                     */\n                    var kk = gfc.s3ind[b][0];\n                    var eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                    var ecb = gfc.s3_ll[k++] * eb2;\n                    while (++kk <= gfc.s3ind[b][1]) {\n                        eb2 = eb_l[kk] * tab[mask_idx_l[kk]];\n                        ecb = mask_add(ecb, gfc.s3_ll[k++] * eb2, kk, kk - b,\n                            gfc, 0);\n                    }\n                    ecb *= 0.158489319246111;\n                    /* pow(10,-0.8) */\n\n                    /**** long block pre-echo control ****/\n                    /**\n                     * <PRE>\n                     * dont use long block pre-echo control if previous granule was\n                     * a short block.  This is to avoid the situation:\n                     * frame0:  quiet (very low masking)\n                     * frame1:  surge  (triggers short blocks)\n                     * frame2:  regular frame.  looks like pre-echo when compared to\n                     *          frame0, but all pre-echo was in frame1.\n                     * </PRE>\n                     */\n                    /*\n                     * chn=0,1 L and R channels\n                     *\n                     * chn=2,3 S and M channels.\n                     */\n\n                    if (gfc.blocktype_old[chn & 1] == Encoder.SHORT_TYPE)\n                        thr[b] = ecb;\n                    else\n                        thr[b] = NS_INTERP(\n                            Math.min(ecb, Math.min(rpelev\n                                * gfc.nb_1[chn][b], rpelev2\n                                * gfc.nb_2[chn][b])), ecb, pcfact);\n\n                    gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n                    gfc.nb_1[chn][b] = ecb;\n                }\n            }\n            for (; b <= Encoder.CBANDS; ++b) {\n                eb_l[b] = 0;\n                thr[b] = 0;\n            }\n            /* compute masking thresholds for long blocks */\n            convert_partition2scalefac_l(gfc, eb_l, thr, chn);\n        }\n        /* end loop over chn */\n\n        if (gfp.mode == MPEGMode.STEREO || gfp.mode == MPEGMode.JOINT_STEREO) {\n            if (gfp.interChRatio > 0.0) {\n                calc_interchannel_masking(gfp, gfp.interChRatio);\n            }\n        }\n\n        if (gfp.mode == MPEGMode.JOINT_STEREO) {\n            var msfix;\n            msfix1(gfc);\n            msfix = gfp.msfix;\n            if (Math.abs(msfix) > 0.0)\n                ns_msfix(gfc, msfix, gfp.ATHlower * gfc.ATH.adjust);\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        block_type_set(gfp, uselongblock, blocktype_d, blocktype);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (chn = 0; chn < numchn; chn++) {\n            var ppe;\n            var ppePos = 0;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE)\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            else\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n\n            if (gfp.analysis)\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n\n        }\n        return 0;\n    }\n\n    function vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out, fftenergy, wsamp_l, wsamp_lPos) {\n        var gfc = gfp.internal_flags;\n        if (chn < 2) {\n            fft.fft_long(gfc, wsamp_l[wsamp_lPos], chn, buffer, bufPos);\n        } else if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE - 1; j >= 0; --j) {\n                var l = wsamp_l[wsamp_lPos + 0][j];\n                var r = wsamp_l[wsamp_lPos + 1][j];\n                wsamp_l[wsamp_lPos + 0][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_l[wsamp_lPos + 1][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy[0] = NON_LINEAR_SCALE_ENERGY(wsamp_l[wsamp_lPos + 0][0]);\n        fftenergy[0] *= fftenergy[0];\n\n        for (var j = Encoder.BLKSIZE / 2 - 1; j >= 0; --j) {\n            var re = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 - j];\n            var im = wsamp_l[wsamp_lPos + 0][Encoder.BLKSIZE / 2 + j];\n            fftenergy[Encoder.BLKSIZE / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n        /* total energy */\n        {\n            var totalenergy = 0.0;\n            for (var j = 11; j < Encoder.HBLKSIZE; j++)\n                totalenergy += fftenergy[j];\n\n            gfc.tot_ener[chn] = totalenergy;\n        }\n\n        if (gfp.analysis) {\n            for (var j = 0; j < Encoder.HBLKSIZE; j++) {\n                gfc.pinfo.energy[gr_out][chn][j] = gfc.pinfo.energy_save[chn][j];\n                gfc.pinfo.energy_save[chn][j] = fftenergy[j];\n            }\n            gfc.pinfo.pe[gr_out][chn] = gfc.pe[chn];\n        }\n    }\n\n    function vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock, fftenergy_s, wsamp_s, wsamp_sPos) {\n        var gfc = gfp.internal_flags;\n\n        if (sblock == 0 && chn < 2) {\n            fft.fft_short(gfc, wsamp_s[wsamp_sPos], chn, buffer, bufPos);\n        }\n        if (chn == 2) {\n            /* FFT data for mid and side channel is derived from L & R */\n            for (var j = Encoder.BLKSIZE_s - 1; j >= 0; --j) {\n                var l = wsamp_s[wsamp_sPos + 0][sblock][j];\n                var r = wsamp_s[wsamp_sPos + 1][sblock][j];\n                wsamp_s[wsamp_sPos + 0][sblock][j] = (l + r) * Util.SQRT2 * 0.5;\n                wsamp_s[wsamp_sPos + 1][sblock][j] = (l - r) * Util.SQRT2 * 0.5;\n            }\n        }\n\n        /*********************************************************************\n         * compute energies\n         *********************************************************************/\n        fftenergy_s[sblock][0] = wsamp_s[wsamp_sPos + 0][sblock][0];\n        fftenergy_s[sblock][0] *= fftenergy_s[sblock][0];\n        for (var j = Encoder.BLKSIZE_s / 2 - 1; j >= 0; --j) {\n            var re = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 - j];\n            var im = wsamp_s[wsamp_sPos + 0][sblock][Encoder.BLKSIZE_s / 2 + j];\n            fftenergy_s[sblock][Encoder.BLKSIZE_s / 2 - j] = NON_LINEAR_SCALE_ENERGY((re\n                * re + im * im) * 0.5);\n        }\n    }\n\n    /**\n     * compute loudness approximation (used for ATH auto-level adjustment)\n     */\n    function vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn, fftenergy) {\n        var gfc = gfp.internal_flags;\n        if (gfp.athaa_loudapprox == 2 && chn < 2) {\n            // no loudness for mid/side ch\n            gfc.loudness_sq[gr_out][chn] = gfc.loudness_sq_save[chn];\n            gfc.loudness_sq_save[chn] = psycho_loudness_approx(fftenergy, gfc);\n        }\n    }\n\n    var fircoef_ = [-8.65163e-18 * 2,\n        -0.00851586 * 2, -6.74764e-18 * 2, 0.0209036 * 2,\n        -3.36639e-17 * 2, -0.0438162 * 2, -1.54175e-17 * 2,\n        0.0931738 * 2, -5.52212e-17 * 2, -0.313819 * 2];\n\n    /**\n     * Apply HPF of fs/4 to the input signal. This is used for attack detection\n     * / handling.\n     */\n    function vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, energy, sub_short_factor, ns_attacks, uselongblock) {\n        var ns_hpfsmpl = new_float_n([2, 576]);\n        var gfc = gfp.internal_flags;\n        var n_chn_out = gfc.channels_out;\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4 : n_chn_out;\n        /* Don't copy the input buffer into a temporary buffer */\n        /* unroll the loop 2 times */\n        for (var chn = 0; chn < n_chn_out; chn++) {\n            /* apply high pass filter of fs/4 */\n            firbuf = buffer[chn];\n            var firbufPos = bufPos + 576 - 350 - NSFIRLEN + 192;\n            assert(fircoef_.length == ((NSFIRLEN - 1) / 2));\n            for (var i = 0; i < 576; i++) {\n                var sum1, sum2;\n                sum1 = firbuf[firbufPos + i + 10];\n                sum2 = 0.0;\n                for (var j = 0; j < ((NSFIRLEN - 1) / 2) - 1; j += 2) {\n                    sum1 += fircoef_[j]\n                        * (firbuf[firbufPos + i + j] + firbuf[firbufPos + i\n                        + NSFIRLEN - j]);\n                    sum2 += fircoef_[j + 1]\n                        * (firbuf[firbufPos + i + j + 1] + firbuf[firbufPos\n                        + i + NSFIRLEN - j - 1]);\n                }\n                ns_hpfsmpl[chn][i] = sum1 + sum2;\n            }\n            masking_ratio[gr_out][chn].en.assign(gfc.en[chn]);\n            masking_ratio[gr_out][chn].thm.assign(gfc.thm[chn]);\n            if (n_chn_psy > 2) {\n                /* MS maskings */\n                /* percep_MS_entropy [chn-2] = gfc . pe [chn]; */\n                masking_MS_ratio[gr_out][chn].en.assign(gfc.en[chn + 2]);\n                masking_MS_ratio[gr_out][chn].thm.assign(gfc.thm[chn + 2]);\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var attack_intensity = new_float(12);\n            var en_subshort = new_float(12);\n            var en_short = [0, 0, 0, 0];\n            var pf = ns_hpfsmpl[chn & 1];\n            var pfPos = 0;\n            var attackThreshold = (chn == 3) ? gfc.nsPsy.attackthre_s\n                : gfc.nsPsy.attackthre;\n            var ns_uselongblock = 1;\n\n            if (chn == 2) {\n                for (var i = 0, j = 576; j > 0; ++i, --j) {\n                    var l = ns_hpfsmpl[0][i];\n                    var r = ns_hpfsmpl[1][i];\n                    ns_hpfsmpl[0][i] = l + r;\n                    ns_hpfsmpl[1][i] = l - r;\n                }\n            }\n            /***************************************************************\n             * determine the block type (window type)\n             ***************************************************************/\n            /* calculate energies of each sub-shortblocks */\n            for (var i = 0; i < 3; i++) {\n                en_subshort[i] = gfc.nsPsy.last_en_subshort[chn][i + 6];\n                assert(gfc.nsPsy.last_en_subshort[chn][i + 4] > 0);\n                attack_intensity[i] = en_subshort[i]\n                    / gfc.nsPsy.last_en_subshort[chn][i + 4];\n                en_short[0] += en_subshort[i];\n            }\n\n            for (var i = 0; i < 9; i++) {\n                var pfe = pfPos + 576 / 9;\n                var p = 1.;\n                for (; pfPos < pfe; pfPos++)\n                    if (p < Math.abs(pf[pfPos]))\n                        p = Math.abs(pf[pfPos]);\n\n                gfc.nsPsy.last_en_subshort[chn][i] = en_subshort[i + 3] = p;\n                en_short[1 + i / 3] += p;\n                if (p > en_subshort[i + 3 - 2]) {\n                    assert(en_subshort[i + 3 - 2] > 0);\n                    p = p / en_subshort[i + 3 - 2];\n                } else if (en_subshort[i + 3 - 2] > p * 10.0) {\n                    assert(p > 0);\n                    p = en_subshort[i + 3 - 2] / (p * 10.0);\n                } else {\n                    p = 0.0;\n                }\n                attack_intensity[i + 3] = p;\n            }\n            /* pulse like signal detection for fatboy.wav and so on */\n            for (var i = 0; i < 3; ++i) {\n                var enn = en_subshort[i * 3 + 3]\n                    + en_subshort[i * 3 + 4] + en_subshort[i * 3 + 5];\n                var factor = 1.;\n                if (en_subshort[i * 3 + 5] * 6 < enn) {\n                    factor *= 0.5;\n                    if (en_subshort[i * 3 + 4] * 6 < enn) {\n                        factor *= 0.5;\n                    }\n                }\n                sub_short_factor[chn][i] = factor;\n            }\n\n            if (gfp.analysis) {\n                var x = attack_intensity[0];\n                for (var i = 1; i < 12; i++) {\n                    if (x < attack_intensity[i]) {\n                        x = attack_intensity[i];\n                    }\n                }\n                gfc.pinfo.ers[gr_out][chn] = gfc.pinfo.ers_save[chn];\n                gfc.pinfo.ers_save[chn] = x;\n            }\n\n            /* compare energies between sub-shortblocks */\n            for (var i = 0; i < 12; i++) {\n                if (0 == ns_attacks[chn][i / 3]\n                    && attack_intensity[i] > attackThreshold) {\n                    ns_attacks[chn][i / 3] = (i % 3) + 1;\n                }\n            }\n\n            /*\n             * should have energy change between short blocks, in order to avoid\n             * periodic signals\n             */\n            /* Good samples to show the effect are Trumpet test songs */\n            /*\n             * GB: tuned (1) to avoid too many short blocks for test sample\n             * TRUMPET\n             */\n            /*\n             * RH: tuned (2) to let enough short blocks through for test sample\n             * FSOL and SNAPS\n             */\n            for (var i = 1; i < 4; i++) {\n                var u = en_short[i - 1];\n                var v = en_short[i];\n                var m = Math.max(u, v);\n                if (m < 40000) { /* (2) */\n                    if (u < 1.7 * v && v < 1.7 * u) { /* (1) */\n                        if (i == 1 && ns_attacks[chn][0] <= ns_attacks[chn][i]) {\n                            ns_attacks[chn][0] = 0;\n                        }\n                        ns_attacks[chn][i] = 0;\n                    }\n                }\n            }\n\n            if (ns_attacks[chn][0] <= gfc.nsPsy.lastAttacks[chn]) {\n                ns_attacks[chn][0] = 0;\n            }\n\n            if (gfc.nsPsy.lastAttacks[chn] == 3\n                || (ns_attacks[chn][0] + ns_attacks[chn][1]\n                + ns_attacks[chn][2] + ns_attacks[chn][3]) != 0) {\n                ns_uselongblock = 0;\n\n                if (ns_attacks[chn][1] != 0 && ns_attacks[chn][0] != 0) {\n                    ns_attacks[chn][1] = 0;\n                }\n                if (ns_attacks[chn][2] != 0 && ns_attacks[chn][1] != 0) {\n                    ns_attacks[chn][2] = 0;\n                }\n                if (ns_attacks[chn][3] != 0 && ns_attacks[chn][2] != 0) {\n                    ns_attacks[chn][3] = 0;\n                }\n            }\n            if (chn < 2) {\n                uselongblock[chn] = ns_uselongblock;\n            } else {\n                if (ns_uselongblock == 0) {\n                    uselongblock[0] = uselongblock[1] = 0;\n                }\n            }\n\n            /*\n             * there is a one granule delay. Copy maskings computed last call\n             * into masking_ratio to return to calling program.\n             */\n            energy[chn] = gfc.tot_ener[chn];\n        }\n    }\n\n    function vbrpsy_skip_masking_s(gfc, chn, sblock) {\n        if (sblock == 0) {\n            for (var b = 0; b < gfc.npart_s; b++) {\n                gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n                gfc.nb_s1[chn][b] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_skip_masking_l(gfc, chn) {\n        for (var b = 0; b < gfc.npart_l; b++) {\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = 0;\n        }\n    }\n\n    function psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx) {\n        var last_tab_entry = tab.length - 1;\n        var b = 0;\n        var a = avg[b] + avg[b + 1];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b];\n            if (m < max[b + 1])\n                m = max[b + 1];\n            assert((gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n\n        for (b = 1; b < gfc.npart_s - 1; b++) {\n            a = avg[b - 1] + avg[b] + avg[b + 1];\n            assert(b + 1 < gfc.npart_s);\n            assert(a >= 0);\n            if (a > 0.0) {\n                var m = max[b - 1];\n                if (m < max[b])\n                    m = max[b];\n                if (m < max[b + 1])\n                    m = max[b + 1];\n                assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] + gfc.numlines_s[b + 1] - 1) > 0);\n                a = 20.0\n                    * (m * 3.0 - a)\n                    / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b]\n                    + gfc.numlines_s[b + 1] - 1));\n                var k = 0 | a;\n                if (k > last_tab_entry)\n                    k = last_tab_entry;\n                mask_idx[b] = k;\n            } else {\n                mask_idx[b] = 0;\n            }\n        }\n        assert(b > 0);\n        assert(b == gfc.npart_s - 1);\n\n        a = avg[b - 1] + avg[b];\n        assert(a >= 0);\n        if (a > 0.0) {\n            var m = max[b - 1];\n            if (m < max[b])\n                m = max[b];\n            assert((gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1) > 0);\n            a = 20.0 * (m * 2.0 - a)\n                / (a * (gfc.numlines_s[b - 1] + gfc.numlines_s[b] - 1));\n            var k = 0 | a;\n            if (k > last_tab_entry)\n                k = last_tab_entry;\n            mask_idx[b] = k;\n        } else {\n            mask_idx[b] = 0;\n        }\n        assert(b == (gfc.npart_s - 1));\n    }\n\n    function vbrpsy_compute_masking_s(gfp, fftenergy_s, eb, thr, chn, sblock) {\n        var gfc = gfp.internal_flags;\n        var max = new float[Encoder.CBANDS], avg = new_float(Encoder.CBANDS);\n        var i, j, b;\n        var mask_idx_s = new int[Encoder.CBANDS];\n\n        for (b = j = 0; b < gfc.npart_s; ++b) {\n            var ebb = 0, m = 0;\n            var n = gfc.numlines_s[b];\n            for (i = 0; i < n; ++i, ++j) {\n                var el = fftenergy_s[sblock][j];\n                ebb += el;\n                if (m < el)\n                    m = el;\n            }\n            eb[b] = ebb;\n            assert(ebb >= 0);\n            max[b] = m;\n            assert(n > 0);\n            avg[b] = ebb / n;\n            assert(avg[b] >= 0);\n        }\n        assert(b == gfc.npart_s);\n        assert(j == 129);\n        for (; b < Encoder.CBANDS; ++b) {\n            max[b] = 0;\n            avg[b] = 0;\n        }\n        psyvbr_calc_mask_index_s(gfc, max, avg, mask_idx_s);\n        for (j = b = 0; b < gfc.npart_s; b++) {\n            var kk = gfc.s3ind_s[b][0];\n            var last = gfc.s3ind_s[b][1];\n            var dd, dd_n;\n            var x, ecb, avg_mask;\n            dd = mask_idx_s[kk];\n            dd_n = 1;\n            ecb = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n            ++j;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_s[kk];\n                dd_n += 1;\n                x = gfc.s3_ss[j] * eb[kk] * tab[mask_idx_s[kk]];\n                ecb = vbrpsy_mask_add(ecb, x, kk - b);\n                ++j;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n            thr[b] = ecb;\n            gfc.nb_s2[chn][b] = gfc.nb_s1[chn][b];\n            gfc.nb_s1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_s[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb[b]) {\n                thr[b] = eb[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_masking_l(gfc, fftenergy, eb_l, thr, chn) {\n        var max = new_float(Encoder.CBANDS), avg = new_float(Encoder.CBANDS);\n        var mask_idx_l = new_int(Encoder.CBANDS + 2);\n        var b;\n\n        /*********************************************************************\n         * Calculate the energy and the tonality of each partition.\n         *********************************************************************/\n        calc_energy(gfc, fftenergy, eb_l, max, avg);\n        calc_mask_index_l(gfc, max, avg, mask_idx_l);\n\n        /*********************************************************************\n         * convolve the partitioned energy and unpredictability with the\n         * spreading function, s3_l[b][k]\n         ********************************************************************/\n        var k = 0;\n        for (b = 0; b < gfc.npart_l; b++) {\n            var x, ecb, avg_mask, t;\n            /* convolve the partitioned energy with the spreading function */\n            var kk = gfc.s3ind[b][0];\n            var last = gfc.s3ind[b][1];\n            var dd = 0, dd_n = 0;\n            dd = mask_idx_l[kk];\n            dd_n += 1;\n            ecb = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n            ++k;\n            ++kk;\n            while (kk <= last) {\n                dd += mask_idx_l[kk];\n                dd_n += 1;\n                x = gfc.s3_ll[k] * eb_l[kk] * tab[mask_idx_l[kk]];\n                t = vbrpsy_mask_add(ecb, x, kk - b);\n                ecb = t;\n                ++k;\n                ++kk;\n            }\n            dd = (1 + 2 * dd) / (2 * dd_n);\n            avg_mask = tab[dd] * 0.5;\n            ecb *= avg_mask;\n\n            /**** long block pre-echo control ****/\n            /**\n             * <PRE>\n             * dont use long block pre-echo control if previous granule was\n             * a short block.  This is to avoid the situation:\n             * frame0:  quiet (very low masking)\n             * frame1:  surge  (triggers short blocks)\n             * frame2:  regular frame.  looks like pre-echo when compared to\n             *          frame0, but all pre-echo was in frame1.\n             * </PRE>\n             */\n            /*\n             * chn=0,1 L and R channels chn=2,3 S and M channels.\n             */\n            if (gfc.blocktype_old[chn & 0x01] == Encoder.SHORT_TYPE) {\n                var ecb_limit = rpelev * gfc.nb_1[chn][b];\n                if (ecb_limit > 0) {\n                    thr[b] = Math.min(ecb, ecb_limit);\n                } else {\n                    /**\n                     * <PRE>\n                     * Robert 071209:\n                     * Because we don't calculate long block psy when we know a granule\n                     * should be of short blocks, we don't have any clue how the granule\n                     * before would have looked like as a long block. So we have to guess\n                     * a little bit for this END_TYPE block.\n                     * Most of the time we get away with this sloppyness. (fingers crossed :)\n                     * The speed increase is worth it.\n                     * </PRE>\n                     */\n                    thr[b] = Math.min(ecb, eb_l[b] * NS_PREECHO_ATT2);\n                }\n            } else {\n                var ecb_limit_2 = rpelev2 * gfc.nb_2[chn][b];\n                var ecb_limit_1 = rpelev * gfc.nb_1[chn][b];\n                var ecb_limit;\n                if (ecb_limit_2 <= 0) {\n                    ecb_limit_2 = ecb;\n                }\n                if (ecb_limit_1 <= 0) {\n                    ecb_limit_1 = ecb;\n                }\n                if (gfc.blocktype_old[chn & 0x01] == Encoder.NORM_TYPE) {\n                    ecb_limit = Math.min(ecb_limit_1, ecb_limit_2);\n                } else {\n                    ecb_limit = ecb_limit_1;\n                }\n                thr[b] = Math.min(ecb, ecb_limit);\n            }\n            gfc.nb_2[chn][b] = gfc.nb_1[chn][b];\n            gfc.nb_1[chn][b] = ecb;\n            {\n                /*\n                 * if THR exceeds EB, the quantization routines will take the\n                 * difference from other bands. in case of strong tonal samples\n                 * (tonaltest.wav) this leads to heavy distortions. that's why\n                 * we limit THR here.\n                 */\n                x = max[b];\n                x *= gfc.minval_l[b];\n                x *= avg_mask;\n                if (thr[b] > x) {\n                    thr[b] = x;\n                }\n            }\n            if (gfc.masking_lower > 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            if (thr[b] > eb_l[b]) {\n                thr[b] = eb_l[b];\n            }\n            if (gfc.masking_lower < 1) {\n                thr[b] *= gfc.masking_lower;\n            }\n            assert(thr[b] >= 0);\n        }\n        for (; b < Encoder.CBANDS; ++b) {\n            eb_l[b] = 0;\n            thr[b] = 0;\n        }\n    }\n\n    function vbrpsy_compute_block_type(gfp, uselongblock) {\n        var gfc = gfp.internal_flags;\n\n        if (gfp.short_blocks == ShortBlock.short_block_coupled\n                /* force both channels to use the same block type */\n                /* this is necessary if the frame is to be encoded in ms_stereo. */\n                /* But even without ms_stereo, FhG does this */\n            && !(uselongblock[0] != 0 && uselongblock[1] != 0))\n            uselongblock[0] = uselongblock[1] = 0;\n\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            /* disable short blocks */\n            if (gfp.short_blocks == ShortBlock.short_block_dispensed) {\n                uselongblock[chn] = 1;\n            }\n            if (gfp.short_blocks == ShortBlock.short_block_forced) {\n                uselongblock[chn] = 0;\n            }\n        }\n    }\n\n    function vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /*\n         * update the blocktype of the previous granule, since it depends on\n         * what happend in this granule\n         */\n        for (var chn = 0; chn < gfc.channels_out; chn++) {\n            var blocktype = Encoder.NORM_TYPE;\n            /* disable short blocks */\n\n            if (uselongblock[chn] != 0) {\n                /* no attack : use long blocks */\n                assert(gfc.blocktype_old[chn] != Encoder.START_TYPE);\n                if (gfc.blocktype_old[chn] == Encoder.SHORT_TYPE)\n                    blocktype = Encoder.STOP_TYPE;\n            } else {\n                /* attack : use short blocks */\n                blocktype = Encoder.SHORT_TYPE;\n                if (gfc.blocktype_old[chn] == Encoder.NORM_TYPE) {\n                    gfc.blocktype_old[chn] = Encoder.START_TYPE;\n                }\n                if (gfc.blocktype_old[chn] == Encoder.STOP_TYPE)\n                    gfc.blocktype_old[chn] = Encoder.SHORT_TYPE;\n            }\n\n            blocktype_d[chn] = gfc.blocktype_old[chn];\n            // value returned to calling program\n            gfc.blocktype_old[chn] = blocktype;\n            // save for next call to l3psy_anal\n        }\n    }\n\n    /**\n     * compute M/S thresholds from Johnston & Ferreira 1992 ICASSP paper\n     */\n    function vbrpsy_compute_MS_thresholds(eb, thr, cb_mld, ath_cb, athadjust, msfix, n) {\n        var msfix2 = msfix * 2;\n        var athlower = msfix > 0 ? Math.pow(10, athadjust) : 1;\n        var rside, rmid;\n        for (var b = 0; b < n; ++b) {\n            var ebM = eb[2][b];\n            var ebS = eb[3][b];\n            var thmL = thr[0][b];\n            var thmR = thr[1][b];\n            var thmM = thr[2][b];\n            var thmS = thr[3][b];\n\n            /* use this fix if L & R masking differs by 2db or less */\n            if (thmL <= 1.58 * thmR && thmR <= 1.58 * thmL) {\n                var mld_m = cb_mld[b] * ebS;\n                var mld_s = cb_mld[b] * ebM;\n                rmid = Math.max(thmM, Math.min(thmS, mld_m));\n                rside = Math.max(thmS, Math.min(thmM, mld_s));\n            } else {\n                rmid = thmM;\n                rside = thmS;\n            }\n            if (msfix > 0) {\n                /***************************************************************/\n                /* Adjust M/S maskings if user set \"msfix\" */\n                /***************************************************************/\n                /* Naoki Shibata 2000 */\n                var thmLR, thmMS;\n                var ath = ath_cb[b] * athlower;\n                thmLR = Math.min(Math.max(thmL, ath), Math.max(thmR, ath));\n                thmM = Math.max(rmid, ath);\n                thmS = Math.max(rside, ath);\n                thmMS = thmM + thmS;\n                if (thmMS > 0 && (thmLR * msfix2) < thmMS) {\n                    var f = thmLR * msfix2 / thmMS;\n                    thmM *= f;\n                    thmS *= f;\n                    assert(thmMS > 0);\n                }\n                rmid = Math.min(thmM, rmid);\n                rside = Math.min(thmS, rside);\n            }\n            if (rmid > ebM) {\n                rmid = ebM;\n            }\n            if (rside > ebS) {\n                rside = ebS;\n            }\n            thr[2][b] = rmid;\n            thr[3][b] = rside;\n        }\n    }\n\n    this.L3psycho_anal_vbr = function (gfp, buffer, bufPos, gr_out, masking_ratio, masking_MS_ratio, percep_entropy, percep_MS_entropy, energy, blocktype_d) {\n        var gfc = gfp.internal_flags;\n\n        /* fft and energy calculation */\n        var wsamp_l;\n        var wsamp_s;\n        var fftenergy = new_float(Encoder.HBLKSIZE);\n        var fftenergy_s = new_float_n([3, Encoder.HBLKSIZE_s]);\n        var wsamp_L = new_float_n([2, Encoder.BLKSIZE]);\n        var wsamp_S = new_float_n([2, 3, Encoder.BLKSIZE_s]);\n        var eb = new_float_n([4, Encoder.CBANDS]), thr = new_float_n([4, Encoder.CBANDS]);\n        var sub_short_factor = new_float_n([4, 3]);\n        var pcfact = 0.6;\n\n        /* block type */\n        var ns_attacks = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0],\n            [0, 0, 0, 0]];\n        var uselongblock = new_int(2);\n\n        /* usual variables like loop indices, etc.. */\n\n        /* chn=2 and 3 = Mid and Side channels */\n        var n_chn_psy = (gfp.mode == MPEGMode.JOINT_STEREO) ? 4\n            : gfc.channels_out;\n\n        vbrpsy_attack_detection(gfp, buffer, bufPos, gr_out, masking_ratio,\n            masking_MS_ratio, energy, sub_short_factor, ns_attacks,\n            uselongblock);\n\n        vbrpsy_compute_block_type(gfp, uselongblock);\n\n        /* LONG BLOCK CASE */\n        {\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                wsamp_l = wsamp_L;\n                vbrpsy_compute_fft_l(gfp, buffer, bufPos, chn, gr_out,\n                    fftenergy, wsamp_l, ch01);\n\n                vbrpsy_compute_loudness_approximation_l(gfp, gr_out, chn,\n                    fftenergy);\n\n                if (uselongblock[ch01] != 0) {\n                    vbrpsy_compute_masking_l(gfc, fftenergy, eb[chn], thr[chn],\n                        chn);\n                } else {\n                    vbrpsy_skip_masking_l(gfc, chn);\n                }\n            }\n            if ((uselongblock[0] + uselongblock[1]) == 2) {\n                /* M/S channel */\n                if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                    vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_l,\n                        gfc.ATH.cb_l, gfp.ATHlower * gfc.ATH.adjust,\n                        gfp.msfix, gfc.npart_l);\n                }\n            }\n            /* TODO: apply adaptive ATH masking here ?? */\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n                if (uselongblock[ch01] != 0) {\n                    convert_partition2scalefac_l(gfc, eb[chn], thr[chn], chn);\n                }\n            }\n        }\n\n        /* SHORT BLOCKS CASE */\n        {\n            for (var sblock = 0; sblock < 3; sblock++) {\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n\n                    if (uselongblock[ch01] != 0) {\n                        vbrpsy_skip_masking_s(gfc, chn, sblock);\n                    } else {\n                        /* compute masking thresholds for short blocks */\n                        wsamp_s = wsamp_S;\n                        vbrpsy_compute_fft_s(gfp, buffer, bufPos, chn, sblock,\n                            fftenergy_s, wsamp_s, ch01);\n                        vbrpsy_compute_masking_s(gfp, fftenergy_s, eb[chn],\n                            thr[chn], chn, sblock);\n                    }\n                }\n                if ((uselongblock[0] + uselongblock[1]) == 0) {\n                    /* M/S channel */\n                    if (gfp.mode == MPEGMode.JOINT_STEREO) {\n                        vbrpsy_compute_MS_thresholds(eb, thr, gfc.mld_cb_s,\n                            gfc.ATH.cb_s, gfp.ATHlower * gfc.ATH.adjust,\n                            gfp.msfix, gfc.npart_s);\n                    }\n                    /* L/R channel */\n                }\n                /* TODO: apply adaptive ATH masking here ?? */\n                for (var chn = 0; chn < n_chn_psy; ++chn) {\n                    var ch01 = chn & 0x01;\n                    if (0 == uselongblock[ch01]) {\n                        convert_partition2scalefac_s(gfc, eb[chn], thr[chn],\n                            chn, sblock);\n                    }\n                }\n            }\n\n            /**** short block pre-echo control ****/\n            for (var chn = 0; chn < n_chn_psy; chn++) {\n                var ch01 = chn & 0x01;\n\n                if (uselongblock[ch01] != 0) {\n                    continue;\n                }\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    var new_thmm = new_float(3);\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        var thmm = gfc.thm[chn].s[sb][sblock];\n                        thmm *= NS_PREECHO_ATT0;\n\n                        if (ns_attacks[chn][sblock] >= 2\n                            || ns_attacks[chn][sblock + 1] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT1 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if (ns_attacks[chn][sblock] == 1) {\n                            var idx = (sblock != 0) ? sblock - 1 : 2;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        } else if ((sblock != 0 && ns_attacks[chn][sblock - 1] == 3)\n                            || (sblock == 0 && gfc.nsPsy.lastAttacks[chn] == 3)) {\n                            var idx = (sblock != 2) ? sblock + 1 : 0;\n                            var p = NS_INTERP(gfc.thm[chn].s[sb][idx], thmm,\n                                NS_PREECHO_ATT2 * pcfact);\n                            thmm = Math.min(thmm, p);\n                        }\n\n                        /* pulse like signal detection for fatboy.wav and so on */\n                        thmm *= sub_short_factor[chn][sblock];\n\n                        new_thmm[sblock] = thmm;\n                    }\n                    for (var sblock = 0; sblock < 3; sblock++) {\n                        gfc.thm[chn].s[sb][sblock] = new_thmm[sblock];\n                    }\n                }\n            }\n        }\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            gfc.nsPsy.lastAttacks[chn] = ns_attacks[chn][2];\n        }\n\n        /***************************************************************\n         * determine final block type\n         ***************************************************************/\n        vbrpsy_apply_block_type(gfp, uselongblock, blocktype_d);\n\n        /*********************************************************************\n         * compute the value of PE to return ... no delay and advance\n         *********************************************************************/\n        for (var chn = 0; chn < n_chn_psy; chn++) {\n            var ppe;\n            var ppePos;\n            var type;\n            var mr;\n\n            if (chn > 1) {\n                ppe = percep_MS_entropy;\n                ppePos = -2;\n                type = Encoder.NORM_TYPE;\n                if (blocktype_d[0] == Encoder.SHORT_TYPE\n                    || blocktype_d[1] == Encoder.SHORT_TYPE)\n                    type = Encoder.SHORT_TYPE;\n                mr = masking_MS_ratio[gr_out][chn - 2];\n            } else {\n                ppe = percep_entropy;\n                ppePos = 0;\n                type = blocktype_d[chn];\n                mr = masking_ratio[gr_out][chn];\n            }\n\n            if (type == Encoder.SHORT_TYPE) {\n                ppe[ppePos + chn] = pecalc_s(mr, gfc.masking_lower);\n            } else {\n                ppe[ppePos + chn] = pecalc_l(mr, gfc.masking_lower);\n            }\n\n            if (gfp.analysis) {\n                gfc.pinfo.pe[gr_out][chn] = ppe[ppePos + chn];\n            }\n        }\n        return 0;\n    }\n\n    function s3_func_x(bark, hf_slope) {\n        var tempx = bark, tempy;\n\n        if (tempx >= 0) {\n            tempy = -tempx * 27;\n        } else {\n            tempy = tempx * hf_slope;\n        }\n        if (tempy <= -72.0) {\n            return 0;\n        }\n        return Math.exp(tempy * LN_TO_LOG10);\n    }\n\n    function norm_s3_func_x(hf_slope) {\n        var lim_a = 0, lim_b = 0;\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x -= 1)\n                ;\n            l = x;\n            h = 0;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    h = x;\n                } else {\n                    l = x;\n                }\n            }\n            lim_a = l;\n        }\n        {\n            var x = 0, l, h;\n            for (x = 0; s3_func_x(x, hf_slope) > 1e-20; x += 1)\n                ;\n            l = 0;\n            h = x;\n            while (Math.abs(h - l) > 1e-12) {\n                x = (h + l) / 2;\n                if (s3_func_x(x, hf_slope) > 0) {\n                    l = x;\n                } else {\n                    h = x;\n                }\n            }\n            lim_b = h;\n        }\n        {\n            var sum = 0;\n            var m = 1000;\n            var i;\n            for (i = 0; i <= m; ++i) {\n                var x = lim_a + i * (lim_b - lim_a) / m;\n                var y = s3_func_x(x, hf_slope);\n                sum += y;\n            }\n            {\n                var norm = (m + 1) / (sum * (lim_b - lim_a));\n                /* printf( \"norm = %lf\\n\",norm); */\n                return norm;\n            }\n        }\n    }\n\n    /**\n     *   The spreading function.  Values returned in units of energy\n     */\n    function s3_func(bark) {\n        var tempx, x, tempy, temp;\n        tempx = bark;\n        if (tempx >= 0)\n            tempx *= 3;\n        else\n            tempx *= 1.5;\n\n        if (tempx >= 0.5 && tempx <= 2.5) {\n            temp = tempx - 0.5;\n            x = 8.0 * (temp * temp - 2.0 * temp);\n        } else\n            x = 0.0;\n        tempx += 0.474;\n        tempy = 15.811389 + 7.5 * tempx - 17.5\n            * Math.sqrt(1.0 + tempx * tempx);\n\n        if (tempy <= -60.0)\n            return 0.0;\n\n        tempx = Math.exp((x + tempy) * LN_TO_LOG10);\n\n        /**\n         * <PRE>\n         * Normalization.  The spreading function should be normalized so that:\n         * +inf\n         * /\n         * |  s3 [ bark ]  d(bark)   =  1\n         * /\n         * -inf\n         * </PRE>\n         */\n        tempx /= .6609193;\n        return tempx;\n    }\n\n    /**\n     * see for example \"Zwicker: Psychoakustik, 1982; ISBN 3-540-11401-7\n     */\n    function freq2bark(freq) {\n        /* input: freq in hz output: barks */\n        if (freq < 0)\n            freq = 0;\n        freq = freq * 0.001;\n        return 13.0 * Math.atan(.76 * freq) + 3.5\n            * Math.atan(freq * freq / (7.5 * 7.5));\n    }\n\n    function init_numline(numlines, bo, bm, bval, bval_width, mld, bo_w, sfreq, blksize, scalepos, deltafreq, sbmax) {\n        var b_frq = new_float(Encoder.CBANDS + 1);\n        var sample_freq_frac = sfreq / (sbmax > 15 ? 2 * 576 : 2 * 192);\n        var partition = new_int(Encoder.HBLKSIZE);\n        var i;\n        sfreq /= blksize;\n        var j = 0;\n        var ni = 0;\n        /* compute numlines, the number of spectral lines in each partition band */\n        /* each partition band should be about DELBARK wide. */\n        for (i = 0; i < Encoder.CBANDS; i++) {\n            var bark1;\n            var j2;\n            bark1 = freq2bark(sfreq * j);\n\n            b_frq[i] = sfreq * j;\n\n            for (j2 = j; freq2bark(sfreq * j2) - bark1 < DELBARK\n            && j2 <= blksize / 2; j2++)\n                ;\n\n            numlines[i] = j2 - j;\n            ni = i + 1;\n\n            while (j < j2) {\n                assert(j < Encoder.HBLKSIZE);\n                partition[j++] = i;\n            }\n            if (j > blksize / 2) {\n                j = blksize / 2;\n                ++i;\n                break;\n            }\n        }\n        assert(i < Encoder.CBANDS);\n        b_frq[i] = sfreq * j;\n\n        for (var sfb = 0; sfb < sbmax; sfb++) {\n            var i1, i2, start, end;\n            var arg;\n            start = scalepos[sfb];\n            end = scalepos[sfb + 1];\n\n            i1 = 0 | Math.floor(.5 + deltafreq * (start - .5));\n            if (i1 < 0)\n                i1 = 0;\n            i2 = 0 | Math.floor(.5 + deltafreq * (end - .5));\n\n            if (i2 > blksize / 2)\n                i2 = blksize / 2;\n\n            bm[sfb] = (partition[i1] + partition[i2]) / 2;\n            bo[sfb] = partition[i2];\n            var f_tmp = sample_freq_frac * end;\n            /*\n             * calculate how much of this band belongs to current scalefactor\n             * band\n             */\n            bo_w[sfb] = (f_tmp - b_frq[bo[sfb]])\n                / (b_frq[bo[sfb] + 1] - b_frq[bo[sfb]]);\n            if (bo_w[sfb] < 0) {\n                bo_w[sfb] = 0;\n            } else {\n                if (bo_w[sfb] > 1) {\n                    bo_w[sfb] = 1;\n                }\n            }\n            /* setup stereo demasking thresholds */\n            /* formula reverse enginerred from plot in paper */\n            arg = freq2bark(sfreq * scalepos[sfb] * deltafreq);\n            arg = ( Math.min(arg, 15.5) / 15.5);\n\n            mld[sfb] = Math.pow(10.0,\n                1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n        }\n\n        /* compute bark values of each critical band */\n        j = 0;\n        for (var k = 0; k < ni; k++) {\n            var w = numlines[k];\n            var bark1, bark2;\n\n            bark1 = freq2bark(sfreq * (j));\n            bark2 = freq2bark(sfreq * (j + w - 1));\n            bval[k] = .5 * (bark1 + bark2);\n\n            bark1 = freq2bark(sfreq * (j - .5));\n            bark2 = freq2bark(sfreq * (j + w - .5));\n            bval_width[k] = bark2 - bark1;\n            j += w;\n        }\n\n        return ni;\n    }\n\n    function init_s3_values(s3ind, npart, bval, bval_width, norm, use_old_s3) {\n        var s3 = new_float_n([Encoder.CBANDS, Encoder.CBANDS]);\n        /*\n         * The s3 array is not linear in the bark scale.\n         *\n         * bval[x] should be used to get the bark value.\n         */\n        var j;\n        var numberOfNoneZero = 0;\n\n        /**\n         * <PRE>\n         * s[i][j], the value of the spreading function,\n         * centered at band j (masker), for band i (maskee)\n         *\n         * i.e.: sum over j to spread into signal barkval=i\n         * NOTE: i and j are used opposite as in the ISO docs\n         * </PRE>\n         */\n        if (use_old_s3) {\n            for (var i = 0; i < npart; i++) {\n                for (j = 0; j < npart; j++) {\n                    var v = s3_func(bval[i] - bval[j]) * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        } else {\n            for (j = 0; j < npart; j++) {\n                var hf_slope = 15 + Math.min(21 / bval[j], 12);\n                var s3_x_norm = norm_s3_func_x(hf_slope);\n                for (var i = 0; i < npart; i++) {\n                    var v = s3_x_norm\n                        * s3_func_x(bval[i] - bval[j], hf_slope)\n                        * bval_width[j];\n                    s3[i][j] = v * norm[i];\n                }\n            }\n        }\n        for (var i = 0; i < npart; i++) {\n            for (j = 0; j < npart; j++) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][0] = j;\n\n            for (j = npart - 1; j > 0; j--) {\n                if (s3[i][j] > 0.0)\n                    break;\n            }\n            s3ind[i][1] = j;\n            numberOfNoneZero += (s3ind[i][1] - s3ind[i][0] + 1);\n        }\n\n        var p = new_float(numberOfNoneZero);\n        var k = 0;\n        for (var i = 0; i < npart; i++)\n            for (j = s3ind[i][0]; j <= s3ind[i][1]; j++)\n                p[k++] = s3[i][j];\n\n        return p;\n    }\n\n    function stereo_demask(f) {\n        /* setup stereo demasking thresholds */\n        /* formula reverse enginerred from plot in paper */\n        var arg = freq2bark(f);\n        arg = (Math.min(arg, 15.5) / 15.5);\n\n        return Math.pow(10.0,\n            1.25 * (1 - Math.cos(Math.PI * arg)) - 2.5);\n    }\n\n    /**\n     * NOTE: the bitrate reduction from the inter-channel masking effect is low\n     * compared to the chance of getting annyoing artefacts. L3psycho_anal_vbr\n     * does not use this feature. (Robert 071216)\n     */\n    this.psymodel_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var i;\n        var useOldS3 = true;\n        var bvl_a = 13, bvl_b = 24;\n        var snr_l_a = 0, snr_l_b = 0;\n        var snr_s_a = -8.25, snr_s_b = -4.5;\n        var bval = new_float(Encoder.CBANDS);\n        var bval_width = new_float(Encoder.CBANDS);\n        var norm = new_float(Encoder.CBANDS);\n        var sfreq = gfp.out_samplerate;\n\n        switch (gfp.experimentalZ) {\n            default:\n            case 0:\n                useOldS3 = true;\n                break;\n            case 1:\n                useOldS3 = (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) ? false\n                    : true;\n                break;\n            case 2:\n                useOldS3 = false;\n                break;\n            case 3:\n                bvl_a = 8;\n                snr_l_a = -1.75;\n                snr_l_b = -0.0125;\n                snr_s_a = -8.25;\n                snr_s_b = -2.25;\n                break;\n        }\n        gfc.ms_ener_ratio_old = .25;\n        gfc.blocktype_old[0] = gfc.blocktype_old[1] = Encoder.NORM_TYPE;\n        // the vbr header is long blocks\n\n        for (i = 0; i < 4; ++i) {\n            for (var j = 0; j < Encoder.CBANDS; ++j) {\n                gfc.nb_1[i][j] = 1e20;\n                gfc.nb_2[i][j] = 1e20;\n                gfc.nb_s1[i][j] = gfc.nb_s2[i][j] = 1.0;\n            }\n            for (var sb = 0; sb < Encoder.SBMAX_l; sb++) {\n                gfc.en[i].l[sb] = 1e20;\n                gfc.thm[i].l[sb] = 1e20;\n            }\n            for (var j = 0; j < 3; ++j) {\n                for (var sb = 0; sb < Encoder.SBMAX_s; sb++) {\n                    gfc.en[i].s[sb][j] = 1e20;\n                    gfc.thm[i].s[sb][j] = 1e20;\n                }\n                gfc.nsPsy.lastAttacks[i] = 0;\n            }\n            for (var j = 0; j < 9; j++)\n                gfc.nsPsy.last_en_subshort[i][j] = 10.;\n        }\n\n        /* init. for loudness approx. -jd 2001 mar 27 */\n        gfc.loudness_sq_save[0] = gfc.loudness_sq_save[1] = 0.0;\n\n        /*************************************************************************\n         * now compute the psychoacoustic model specific constants\n         ************************************************************************/\n        /* compute numlines, bo, bm, bval, bval_width, mld */\n\n        gfc.npart_l = init_numline(gfc.numlines_l, gfc.bo_l, gfc.bm_l, bval,\n            bval_width, gfc.mld_l, gfc.PSY.bo_l_weight, sfreq,\n            Encoder.BLKSIZE, gfc.scalefac_band.l, Encoder.BLKSIZE\n            / (2.0 * 576), Encoder.SBMAX_l);\n        assert(gfc.npart_l < Encoder.CBANDS);\n        /* compute the spreading function */\n        for (i = 0; i < gfc.npart_l; i++) {\n            var snr = snr_l_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_l_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_l_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n            if (gfc.numlines_l[i] > 0) {\n                gfc.rnumlines_l[i] = 1.0 / gfc.numlines_l[i];\n            } else {\n                gfc.rnumlines_l[i] = 0;\n            }\n        }\n        gfc.s3_ll = init_s3_values(gfc.s3ind, gfc.npart_l, bval, bval_width,\n            norm, useOldS3);\n\n        /* compute long block specific values, ATH and MINVAL */\n        var j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var x;\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_l[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE);\n                var level;\n                /*\n                 * ATH below 100 Hz constant, not further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_l[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_l[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            /*\n             * FIXME: it does work to reduce low-freq problems in S53-Wind-Sax\n             * and lead-voice samples, but introduces some 3 kbps bit bloat too.\n             * TODO: Further refinement of the shape of this hack.\n             */\n            x = -20 + bval[i] * 20 / 10;\n            if (x > 6) {\n                x = 100;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8.;\n            gfc.minval_l[i] = (Math.pow(10.0, x / 10.) * gfc.numlines_l[i]);\n        }\n\n        /************************************************************************\n         * do the same things for short blocks\n         ************************************************************************/\n        gfc.npart_s = init_numline(gfc.numlines_s, gfc.bo_s, gfc.bm_s, bval,\n            bval_width, gfc.mld_s, gfc.PSY.bo_s_weight, sfreq,\n            Encoder.BLKSIZE_s, gfc.scalefac_band.s, Encoder.BLKSIZE_s\n            / (2.0 * 192), Encoder.SBMAX_s);\n        assert(gfc.npart_s < Encoder.CBANDS);\n\n        /* SNR formula. short block is normalized by SNR. is it still right ? */\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var x;\n            var snr = snr_s_a;\n            if (bval[i] >= bvl_a) {\n                snr = snr_s_b * (bval[i] - bvl_a) / (bvl_b - bvl_a) + snr_s_a\n                    * (bvl_b - bval[i]) / (bvl_b - bvl_a);\n            }\n            norm[i] = Math.pow(10.0, snr / 10.0);\n\n            /* ATH */\n            x = Float.MAX_VALUE;\n            for (var k = 0; k < gfc.numlines_s[i]; k++, j++) {\n                var freq = sfreq * j / (1000.0 * Encoder.BLKSIZE_s);\n                var level;\n                /* freq = Min(.1,freq); */\n                /*\n                 * ATH below 100 Hz constant, not\n                 * further climbing\n                 */\n                level = this.ATHformula(freq * 1000, gfp) - 20;\n                // scale to FFT units; returned value is in dB\n                level = Math.pow(10., 0.1 * level);\n                // convert from dB . energy\n                level *= gfc.numlines_s[i];\n                if (x > level)\n                    x = level;\n            }\n            gfc.ATH.cb_s[i] = x;\n\n            /*\n             * MINVAL. For low freq, the strength of the masking is limited by\n             * minval this is an ISO MPEG1 thing, dont know if it is really\n             * needed\n             */\n            x = (-7.0 + bval[i] * 7.0 / 12.0);\n            if (bval[i] > 12) {\n                x *= 1 + Math.log(1 + x) * 3.1;\n            }\n            if (bval[i] < 12) {\n                x *= 1 + Math.log(1 - x) * 2.3;\n            }\n            if (x < -15) {\n                x = -15;\n            }\n            x -= 8;\n            gfc.minval_s[i] = Math.pow(10.0, x / 10)\n                * gfc.numlines_s[i];\n        }\n\n        gfc.s3_ss = init_s3_values(gfc.s3ind_s, gfc.npart_s, bval, bval_width,\n            norm, useOldS3);\n\n        init_mask_add_max_values();\n        fft.init_fft(gfc);\n\n        /* setup temporal masking */\n        gfc.decay = Math.exp(-1.0 * LOG10\n            / (temporalmask_sustain_sec * sfreq / 192.0));\n\n        {\n            var msfix;\n            msfix = NS_MSFIX;\n            if ((gfp.exp_nspsytune & 2) != 0)\n                msfix = 1.0;\n            if (Math.abs(gfp.msfix) > 0.0)\n                msfix = gfp.msfix;\n            gfp.msfix = msfix;\n\n            /*\n             * spread only from npart_l bands. Normally, we use the spreading\n             * function to convolve from npart_l down to npart_l bands\n             */\n            for (var b = 0; b < gfc.npart_l; b++)\n                if (gfc.s3ind[b][1] > gfc.npart_l - 1)\n                    gfc.s3ind[b][1] = gfc.npart_l - 1;\n        }\n\n        /*\n         * prepare for ATH auto adjustment: we want to decrease the ATH by 12 dB\n         * per second\n         */\n        var frame_duration = (576. * gfc.mode_gr / sfreq);\n        gfc.ATH.decay = Math.pow(10., -12. / 10. * frame_duration);\n        gfc.ATH.adjust = 0.01;\n        /* minimum, for leading low loudness */\n        gfc.ATH.adjustLimit = 1.0;\n        /* on lead, allow adjust up to maximum */\n\n        assert(gfc.bo_l[Encoder.SBMAX_l - 1] <= gfc.npart_l);\n        assert(gfc.bo_s[Encoder.SBMAX_s - 1] <= gfc.npart_s);\n\n        if (gfp.ATHtype != -1) {\n            /* compute equal loudness weights (eql_w) */\n            var freq;\n            var freq_inc = gfp.out_samplerate\n                / (Encoder.BLKSIZE);\n            var eql_balance = 0.0;\n            freq = 0.0;\n            for (i = 0; i < Encoder.BLKSIZE / 2; ++i) {\n                /* convert ATH dB to relative power (not dB) */\n                /* to determine eql_w */\n                freq += freq_inc;\n                gfc.ATH.eql_w[i] = 1. / Math.pow(10, this.ATHformula(freq, gfp) / 10);\n                eql_balance += gfc.ATH.eql_w[i];\n            }\n            eql_balance = 1.0 / eql_balance;\n            for (i = Encoder.BLKSIZE / 2; --i >= 0;) { /* scale weights */\n                gfc.ATH.eql_w[i] *= eql_balance;\n            }\n        }\n        {\n            for (var b = j = 0; b < gfc.npart_s; ++b) {\n                for (i = 0; i < gfc.numlines_s[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 129);\n            for (var b = j = 0; b < gfc.npart_l; ++b) {\n                for (i = 0; i < gfc.numlines_l[b]; ++i) {\n                    ++j;\n                }\n            }\n            assert(j == 513);\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_l; i++) {\n            var freq = sfreq * (j + gfc.numlines_l[i] / 2) / (1.0 * Encoder.BLKSIZE);\n            gfc.mld_cb_l[i] = stereo_demask(freq);\n            j += gfc.numlines_l[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_l[i] = 1;\n        }\n        j = 0;\n        for (i = 0; i < gfc.npart_s; i++) {\n            var freq = sfreq * (j + gfc.numlines_s[i] / 2) / (1.0 * Encoder.BLKSIZE_s);\n            gfc.mld_cb_s[i] = stereo_demask(freq);\n            j += gfc.numlines_s[i];\n        }\n        for (; i < Encoder.CBANDS; ++i) {\n            gfc.mld_cb_s[i] = 1;\n        }\n        return 0;\n    }\n\n    /**\n     * Those ATH formulas are returning their minimum value for input = -1\n     */\n    function ATHformula_GB(f, value) {\n        /**\n         * <PRE>\n         *  from Painter & Spanias\n         *           modified by Gabriel Bouvigne to better fit the reality\n         *           ath =    3.640 * pow(f,-0.8)\n         *           - 6.800 * exp(-0.6*pow(f-3.4,2.0))\n         *           + 6.000 * exp(-0.15*pow(f-8.7,2.0))\n         *           + 0.6* 0.001 * pow(f,4.0);\n         *\n         *\n         *           In the past LAME was using the Painter &Spanias formula.\n         *           But we had some recurrent problems with HF content.\n         *           We measured real ATH values, and found the older formula\n         *           to be inaccurate in the higher part. So we made this new\n         *           formula and this solved most of HF problematic test cases.\n         *           The tradeoff is that in VBR mode it increases a lot the\n         *           bitrate.\n         * </PRE>\n         */\n\n        /*\n         * This curve can be adjusted according to the VBR scale: it adjusts\n         * from something close to Painter & Spanias on V9 up to Bouvigne's\n         * formula for V0. This way the VBR bitrate is more balanced according\n         * to the -V value.\n         */\n\n        // the following Hack allows to ask for the lowest value\n        if (f < -.3)\n            f = 3410;\n\n        // convert to khz\n        f /= 1000;\n        f = Math.max(0.1, f);\n        var ath = 3.640 * Math.pow(f, -0.8) - 6.800\n            * Math.exp(-0.6 * Math.pow(f - 3.4, 2.0)) + 6.000\n            * Math.exp(-0.15 * Math.pow(f - 8.7, 2.0))\n            + (0.6 + 0.04 * value) * 0.001 * Math.pow(f, 4.0);\n        return ath;\n    }\n\n    this.ATHformula = function (f, gfp) {\n        var ath;\n        switch (gfp.ATHtype) {\n            case 0:\n                ath = ATHformula_GB(f, 9);\n                break;\n            case 1:\n                // over sensitive, should probably be removed\n                ath = ATHformula_GB(f, -1);\n                break;\n            case 2:\n                ath = ATHformula_GB(f, 0);\n                break;\n            case 3:\n                // modification of GB formula by Roel\n                ath = ATHformula_GB(f, 1) + 6;\n                break;\n            case 4:\n                ath = ATHformula_GB(f, gfp.ATHcurve);\n                break;\n            default:\n                ath = ATHformula_GB(f, 0);\n                break;\n        }\n        return ath;\n    }\n\n}\n\nmodule.exports = PsyModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/PsyModel.js\n// module id = kheW\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = lOnJ\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.define-property.js\n// module id = mClu\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar new_short_n = common.new_short_n;\nvar assert = common.assert;\n\nvar PsyModel = require('./PsyModel.js');\nvar LameGlobalFlags = require('./LameGlobalFlags.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\nvar ATH = require('./ATH.js');\nvar ReplayGain = require('./ReplayGain.js');\nvar CBRNewIterationLoop = require('./CBRNewIterationLoop.js');\nvar BitStream = require('./BitStream.js');\nvar Tables = require('./Tables.js');\nvar Encoder = require('./Encoder.js');\n\nfunction Lame() {\n    var self = this;\n    var LAME_MAXALBUMART = (128 * 1024);\n\n    Lame.V9 = 410;\n    Lame.V8 = 420;\n    Lame.V7 = 430;\n    Lame.V6 = 440;\n    Lame.V5 = 450;\n    Lame.V4 = 460;\n    Lame.V3 = 470;\n    Lame.V2 = 480;\n    Lame.V1 = 490;\n    Lame.V0 = 500;\n\n    /* still there for compatibility */\n\n    Lame.R3MIX = 1000;\n    Lame.STANDARD = 1001;\n    Lame.EXTREME = 1002;\n    Lame.INSANE = 1003;\n    Lame.STANDARD_FAST = 1004;\n    Lame.EXTREME_FAST = 1005;\n    Lame.MEDIUM = 1006;\n    Lame.MEDIUM_FAST = 1007;\n\n    /**\n     * maximum size of mp3buffer needed if you encode at most 1152 samples for\n     * each call to lame_encode_buffer. see lame_encode_buffer() below\n     * (LAME_MAXMP3BUFFER is now obsolete)\n     */\n    var LAME_MAXMP3BUFFER = (16384 + LAME_MAXALBUMART);\n    Lame.LAME_MAXMP3BUFFER = LAME_MAXMP3BUFFER;\n\n    var ga;\n    var bs;\n    var p;\n    var qupvt;\n    var qu;\n    var psy = new PsyModel();\n    var vbr;\n    var ver;\n    var id3;\n    var mpglib;\n    this.enc = new Encoder();\n\n    this.setModules = function (_ga, _bs, _p, _qupvt, _qu, _vbr, _ver, _id3, _mpglib) {\n        ga = _ga;\n        bs = _bs;\n        p = _p;\n        qupvt = _qupvt;\n        qu = _qu;\n        vbr = _vbr;\n        ver = _ver;\n        id3 = _id3;\n        mpglib = _mpglib;\n        this.enc.setModules(bs, psy, qupvt, vbr);\n    }\n\n    /**\n     * PSY Model related stuff\n     */\n    function PSY() {\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust = 0.;\n        /**\n         * The dbQ stuff.\n         */\n        this.mask_adjust_short = 0.;\n        /* at transition from one scalefactor band to next */\n        /**\n         * Band weight long scalefactor bands.\n         */\n        this.bo_l_weight = new_float(Encoder.SBMAX_l);\n        /**\n         * Band weight short scalefactor bands.\n         */\n        this.bo_s_weight = new_float(Encoder.SBMAX_s);\n    }\n\n    function LowPassHighPass() {\n        this.lowerlimit = 0.;\n    }\n\n    function BandPass(bitrate, lPass) {\n        this.lowpass = lPass;\n    }\n\n    var LAME_ID = 0xFFF88E3B;\n\n    function lame_init_old(gfp) {\n        var gfc;\n\n        gfp.class_id = LAME_ID;\n\n        gfc = gfp.internal_flags = new LameInternalFlags();\n\n        /* Global flags. set defaults here for non-zero values */\n        /* see lame.h for description */\n        /*\n         * set integer values to -1 to mean that LAME will compute the best\n         * value, UNLESS the calling program as set it (and the value is no\n         * longer -1)\n         */\n\n        gfp.mode = MPEGMode.NOT_SET;\n        gfp.original = 1;\n        gfp.in_samplerate = 44100;\n        gfp.num_channels = 2;\n        gfp.num_samples = -1;\n\n        gfp.bWriteVbrTag = true;\n        gfp.quality = -1;\n        gfp.short_blocks = null;\n        gfc.subblock_gain = -1;\n\n        gfp.lowpassfreq = 0;\n        gfp.highpassfreq = 0;\n        gfp.lowpasswidth = -1;\n        gfp.highpasswidth = -1;\n\n        gfp.VBR = VbrMode.vbr_off;\n        gfp.VBR_q = 4;\n        gfp.ATHcurve = -1;\n        gfp.VBR_mean_bitrate_kbps = 128;\n        gfp.VBR_min_bitrate_kbps = 0;\n        gfp.VBR_max_bitrate_kbps = 0;\n        gfp.VBR_hard_min = 0;\n        gfc.VBR_min_bitrate = 1;\n        /* not 0 ????? */\n        gfc.VBR_max_bitrate = 13;\n        /* not 14 ????? */\n\n        gfp.quant_comp = -1;\n        gfp.quant_comp_short = -1;\n\n        gfp.msfix = -1;\n\n        gfc.resample_ratio = 1;\n\n        gfc.OldValue[0] = 180;\n        gfc.OldValue[1] = 180;\n        gfc.CurrentStep[0] = 4;\n        gfc.CurrentStep[1] = 4;\n        gfc.masking_lower = 1;\n        gfc.nsPsy.attackthre = -1;\n        gfc.nsPsy.attackthre_s = -1;\n\n        gfp.scale = -1;\n\n        gfp.athaa_type = -1;\n        gfp.ATHtype = -1;\n        /* default = -1 = set in lame_init_params */\n        gfp.athaa_loudapprox = -1;\n        /* 1 = flat loudness approx. (total energy) */\n        /* 2 = equal loudness curve */\n        gfp.athaa_sensitivity = 0.0;\n        /* no offset */\n        gfp.useTemporal = null;\n        gfp.interChRatio = -1;\n\n        /*\n         * The reason for int mf_samples_to_encode = ENCDELAY + POSTDELAY;\n         * ENCDELAY = internal encoder delay. And then we have to add\n         * POSTDELAY=288 because of the 50% MDCT overlap. A 576 MDCT granule\n         * decodes to 1152 samples. To synthesize the 576 samples centered under\n         * this granule we need the previous granule for the first 288 samples\n         * (no problem), and the next granule for the next 288 samples (not\n         * possible if this is last granule). So we need to pad with 288 samples\n         * to make sure we can encode the 576 samples we are interested in.\n         */\n        gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n        gfp.encoder_padding = 0;\n        gfc.mf_size = Encoder.ENCDELAY - Encoder.MDCTDELAY;\n        /*\n         * we pad input with this many 0's\n         */\n\n        gfp.findReplayGain = false;\n        gfp.decode_on_the_fly = false;\n\n        gfc.decode_on_the_fly = false;\n        gfc.findReplayGain = false;\n        gfc.findPeakSample = false;\n\n        gfc.RadioGain = 0;\n        gfc.AudiophileGain = 0;\n        gfc.noclipGainChange = 0;\n        gfc.noclipScale = -1.0;\n\n        gfp.preset = 0;\n\n        gfp.write_id3tag_automatic = true;\n        return 0;\n    }\n\n    this.lame_init = function () {\n        var gfp = new LameGlobalFlags();\n\n        var ret = lame_init_old(gfp);\n        if (ret != 0) {\n            return null;\n        }\n\n        gfp.lame_allocated_gfp = 1;\n        return gfp;\n    }\n\n    function filter_coef(x) {\n        if (x > 1.0)\n            return 0.0;\n        if (x <= 0.0)\n            return 1.0;\n\n        return Math.cos(Math.PI / 2 * x);\n    }\n\n    this.nearestBitrateFullIndex = function (bitrate) {\n        /* borrowed from DM abr presets */\n\n        var full_bitrate_table = [8, 16, 24, 32, 40, 48, 56, 64, 80,\n            96, 112, 128, 160, 192, 224, 256, 320];\n\n        var lower_range = 0, lower_range_kbps = 0, upper_range = 0, upper_range_kbps = 0;\n\n        /* We assume specified bitrate will be 320kbps */\n        upper_range_kbps = full_bitrate_table[16];\n        upper_range = 16;\n        lower_range_kbps = full_bitrate_table[16];\n        lower_range = 16;\n\n        /*\n         * Determine which significant bitrates the value specified falls\n         * between, if loop ends without breaking then we were correct above\n         * that the value was 320\n         */\n        for (var b = 0; b < 16; b++) {\n            if ((Math.max(bitrate, full_bitrate_table[b + 1])) != bitrate) {\n                upper_range_kbps = full_bitrate_table[b + 1];\n                upper_range = b + 1;\n                lower_range_kbps = full_bitrate_table[b];\n                lower_range = (b);\n                break;\n                /* We found upper range */\n            }\n        }\n\n        /* Determine which range the value specified is closer to */\n        if ((upper_range_kbps - bitrate) > (bitrate - lower_range_kbps)) {\n            return lower_range;\n        }\n        return upper_range;\n    }\n\n    function optimum_samplefreq(lowpassfreq, input_samplefreq) {\n        /*\n         * Rules:\n         *\n         * - if possible, sfb21 should NOT be used\n         */\n        var suggested_samplefreq = 44100;\n\n        if (input_samplefreq >= 48000)\n            suggested_samplefreq = 48000;\n        else if (input_samplefreq >= 44100)\n            suggested_samplefreq = 44100;\n        else if (input_samplefreq >= 32000)\n            suggested_samplefreq = 32000;\n        else if (input_samplefreq >= 24000)\n            suggested_samplefreq = 24000;\n        else if (input_samplefreq >= 22050)\n            suggested_samplefreq = 22050;\n        else if (input_samplefreq >= 16000)\n            suggested_samplefreq = 16000;\n        else if (input_samplefreq >= 12000)\n            suggested_samplefreq = 12000;\n        else if (input_samplefreq >= 11025)\n            suggested_samplefreq = 11025;\n        else if (input_samplefreq >= 8000)\n            suggested_samplefreq = 8000;\n\n        if (lowpassfreq == -1)\n            return suggested_samplefreq;\n\n        if (lowpassfreq <= 15960)\n            suggested_samplefreq = 44100;\n        if (lowpassfreq <= 15250)\n            suggested_samplefreq = 32000;\n        if (lowpassfreq <= 11220)\n            suggested_samplefreq = 24000;\n        if (lowpassfreq <= 9970)\n            suggested_samplefreq = 22050;\n        if (lowpassfreq <= 7230)\n            suggested_samplefreq = 16000;\n        if (lowpassfreq <= 5420)\n            suggested_samplefreq = 12000;\n        if (lowpassfreq <= 4510)\n            suggested_samplefreq = 11025;\n        if (lowpassfreq <= 3970)\n            suggested_samplefreq = 8000;\n\n        if (input_samplefreq < suggested_samplefreq) {\n            /*\n             * choose a valid MPEG sample frequency above the input sample\n             * frequency to avoid SFB21/12 bitrate bloat rh 061115\n             */\n            if (input_samplefreq > 44100) {\n                return 48000;\n            }\n            if (input_samplefreq > 32000) {\n                return 44100;\n            }\n            if (input_samplefreq > 24000) {\n                return 32000;\n            }\n            if (input_samplefreq > 22050) {\n                return 24000;\n            }\n            if (input_samplefreq > 16000) {\n                return 22050;\n            }\n            if (input_samplefreq > 12000) {\n                return 16000;\n            }\n            if (input_samplefreq > 11025) {\n                return 12000;\n            }\n            if (input_samplefreq > 8000) {\n                return 11025;\n            }\n            return 8000;\n        }\n        return suggested_samplefreq;\n    }\n\n    /**\n     * convert samp freq in Hz to index\n     */\n    function SmpFrqIndex(sample_freq, gpf) {\n        switch (sample_freq) {\n            case 44100:\n                gpf.version = 1;\n                return 0;\n            case 48000:\n                gpf.version = 1;\n                return 1;\n            case 32000:\n                gpf.version = 1;\n                return 2;\n            case 22050:\n                gpf.version = 0;\n                return 0;\n            case 24000:\n                gpf.version = 0;\n                return 1;\n            case 16000:\n                gpf.version = 0;\n                return 2;\n            case 11025:\n                gpf.version = 0;\n                return 0;\n            case 12000:\n                gpf.version = 0;\n                return 1;\n            case 8000:\n                gpf.version = 0;\n                return 2;\n            default:\n                gpf.version = 0;\n                return -1;\n        }\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 8 to 320\n     */\n    function FindNearestBitrate(bRate, version, samplerate) {\n        /* MPEG-1 or MPEG-2 LSF */\n        if (samplerate < 16000)\n            version = 2;\n\n        var bitrate = Tables.bitrate_table[version][1];\n\n        for (var i = 2; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Math.abs(Tables.bitrate_table[version][i] - bRate) < Math\n                        .abs(bitrate - bRate))\n                    bitrate = Tables.bitrate_table[version][i];\n            }\n        }\n        return bitrate;\n    }\n\n    /**\n     * @param bRate\n     *            legal rates from 32 to 448 kbps\n     * @param version\n     *            MPEG-1 or MPEG-2/2.5 LSF\n     */\n    function BitrateIndex(bRate, version, samplerate) {\n        /* convert bitrate in kbps to index */\n        if (samplerate < 16000)\n            version = 2;\n        for (var i = 0; i <= 14; i++) {\n            if (Tables.bitrate_table[version][i] > 0) {\n                if (Tables.bitrate_table[version][i] == bRate) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function optimum_bandwidth(lh, bitrate) {\n        /**\n         * <PRE>\n         *  Input:\n         *      bitrate     total bitrate in kbps\n         *\n         *   Output:\n         *      lowerlimit: best lowpass frequency limit for input filter in Hz\n         *      upperlimit: best highpass frequency limit for input filter in Hz\n         * </PRE>\n         */\n        var freq_map = [new BandPass(8, 2000),\n            new BandPass(16, 3700), new BandPass(24, 3900),\n            new BandPass(32, 5500), new BandPass(40, 7000),\n            new BandPass(48, 7500), new BandPass(56, 10000),\n            new BandPass(64, 11000), new BandPass(80, 13500),\n            new BandPass(96, 15100), new BandPass(112, 15600),\n            new BandPass(128, 17000), new BandPass(160, 17500),\n            new BandPass(192, 18600), new BandPass(224, 19400),\n            new BandPass(256, 19700), new BandPass(320, 20500)];\n\n        var table_index = self.nearestBitrateFullIndex(bitrate);\n        lh.lowerlimit = freq_map[table_index].lowpass;\n    }\n\n    function lame_init_params_ppflt(gfp) {\n        var gfc = gfp.internal_flags;\n        /***************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /***************************************************************/\n\n        var lowpass_band = 32;\n        var highpass_band = -1;\n\n        if (gfc.lowpass1 > 0) {\n            var minband = 999;\n            for (var band = 0; band <= 31; band++) {\n                var freq = (band / 31.0);\n                /* this band and above will be zeroed: */\n                if (freq >= gfc.lowpass2) {\n                    lowpass_band = Math.min(lowpass_band, band);\n                }\n                if (gfc.lowpass1 < freq && freq < gfc.lowpass2) {\n                    minband = Math.min(minband, band);\n                }\n            }\n\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            if (minband == 999) {\n                gfc.lowpass1 = (lowpass_band - .75) / 31.0;\n            } else {\n                gfc.lowpass1 = (minband - .75) / 31.0;\n            }\n            gfc.lowpass2 = lowpass_band / 31.0;\n        }\n\n        /*\n         * make sure highpass filter is within 90% of what the effective\n         * highpass frequency will be\n         */\n        if (gfc.highpass2 > 0) {\n            if (gfc.highpass2 < .9 * (.75 / 31.0)) {\n                gfc.highpass1 = 0;\n                gfc.highpass2 = 0;\n                System.err.println(\"Warning: highpass filter disabled.  \"\n                    + \"highpass frequency too small\\n\");\n            }\n        }\n\n        if (gfc.highpass2 > 0) {\n            var maxband = -1;\n            for (var band = 0; band <= 31; band++) {\n                var freq = band / 31.0;\n                /* this band and below will be zereod */\n                if (freq <= gfc.highpass1) {\n                    highpass_band = Math.max(highpass_band, band);\n                }\n                if (gfc.highpass1 < freq && freq < gfc.highpass2) {\n                    maxband = Math.max(maxband, band);\n                }\n            }\n            /*\n             * compute the *actual* transition band implemented by the polyphase\n             * filter\n             */\n            gfc.highpass1 = highpass_band / 31.0;\n            if (maxband == -1) {\n                gfc.highpass2 = (highpass_band + .75) / 31.0;\n            } else {\n                gfc.highpass2 = (maxband + .75) / 31.0;\n            }\n        }\n\n        for (var band = 0; band < 32; band++) {\n            var fc1, fc2;\n            var freq = band / 31.0;\n            if (gfc.highpass2 > gfc.highpass1) {\n                fc1 = filter_coef((gfc.highpass2 - freq)\n                    / (gfc.highpass2 - gfc.highpass1 + 1e-20));\n            } else {\n                fc1 = 1.0;\n            }\n            if (gfc.lowpass2 > gfc.lowpass1) {\n                fc2 = filter_coef((freq - gfc.lowpass1)\n                    / (gfc.lowpass2 - gfc.lowpass1 + 1e-20));\n            } else {\n                fc2 = 1.0;\n            }\n            gfc.amp_filter[band] = (fc1 * fc2);\n        }\n    }\n\n    function lame_init_qval(gfp) {\n        var gfc = gfp.internal_flags;\n\n        switch (gfp.quality) {\n            default:\n            case 9: /* no psymodel, no noise shaping */\n                gfc.psymodel = 0;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 8:\n                gfp.quality = 7;\n            //$FALL-THROUGH$\n            case 7:\n                /*\n                 * use psymodel (for short block and m/s switching), but no noise\n                 * shapping\n                 */\n                gfc.psymodel = 1;\n                gfc.noise_shaping = 0;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 6:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 5:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 0;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 4:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 0;\n                gfc.noise_shaping_stop = 0;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 3:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 2:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 1;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /* inner loop */\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 1:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                gfc.full_outer_loop = 0;\n                break;\n\n            case 0:\n                gfc.psymodel = 1;\n                if (gfc.noise_shaping == 0)\n                    gfc.noise_shaping = 1;\n                if (gfc.substep_shaping == 0)\n                    gfc.substep_shaping = 2;\n                gfc.noise_shaping_amp = 2;\n                gfc.noise_shaping_stop = 1;\n                if (gfc.subblock_gain == -1)\n                    gfc.subblock_gain = 1;\n                gfc.use_best_huffman = 1;\n                /*\n                 * type 2 disabled because of it slowness, in favor of full outer\n                 * loop search\n                 */\n                gfc.full_outer_loop = 0;\n                /*\n                 * full outer loop search disabled because of audible distortions it\n                 * may generate rh 060629\n                 */\n                break;\n        }\n\n    }\n\n    function lame_init_bitstream(gfp) {\n        var gfc = gfp.internal_flags;\n        gfp.frameNum = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            id3.id3tag_write_v2(gfp);\n        }\n        /* initialize histogram data optionally used by frontend */\n\n        gfc.bitrate_stereoMode_Hist = new_int_n([16, 4 + 1]);\n        gfc.bitrate_blockType_Hist = new_int_n([16, 4 + 1 + 1]);\n\n        gfc.PeakSample = 0.0;\n\n        /* Write initial VBR Header to bitstream and init VBR data */\n        if (gfp.bWriteVbrTag)\n            vbr.InitVbrTag(gfp);\n    }\n\n    /********************************************************************\n     * initialize internal params based on data in gf (globalflags struct filled\n     * in by calling program)\n     *\n     * OUTLINE:\n     *\n     * We first have some complex code to determine bitrate, output samplerate\n     * and mode. It is complicated by the fact that we allow the user to set\n     * some or all of these parameters, and need to determine best possible\n     * values for the rest of them:\n     *\n     * 1. set some CPU related flags 2. check if we are mono.mono, stereo.mono\n     * or stereo.stereo 3. compute bitrate and output samplerate: user may have\n     * set compression ratio user may have set a bitrate user may have set a\n     * output samplerate 4. set some options which depend on output samplerate\n     * 5. compute the actual compression ratio 6. set mode based on compression\n     * ratio\n     *\n     * The remaining code is much simpler - it just sets options based on the\n     * mode & compression ratio:\n     *\n     * set allow_diff_short based on mode select lowpass filter based on\n     * compression ratio & mode set the bitrate index, and min/max bitrates for\n     * VBR modes disable VBR tag if it is not appropriate initialize the\n     * bitstream initialize scalefac_band data set sideinfo_len (based on\n     * channels, CRC, out_samplerate) write an id3v2 tag into the bitstream\n     * write VBR tag into the bitstream set mpeg1/2 flag estimate the number of\n     * frames (based on a lot of data)\n     *\n     * now we set more flags: nspsytune: see code VBR modes see code CBR/ABR see\n     * code\n     *\n     * Finally, we set the algorithm flags based on the gfp.quality value\n     * lame_init_qval(gfp);\n     *\n     ********************************************************************/\n    this.lame_init_params = function (gfp) {\n        var gfc = gfp.internal_flags;\n\n        gfc.Class_ID = 0;\n        if (gfc.ATH == null)\n            gfc.ATH = new ATH();\n        if (gfc.PSY == null)\n            gfc.PSY = new PSY();\n        if (gfc.rgdata == null)\n            gfc.rgdata = new ReplayGain();\n\n        gfc.channels_in = gfp.num_channels;\n        if (gfc.channels_in == 1)\n            gfp.mode = MPEGMode.MONO;\n        gfc.channels_out = (gfp.mode == MPEGMode.MONO) ? 1 : 2;\n        gfc.mode_ext = Encoder.MPG_MD_MS_LR;\n        if (gfp.mode == MPEGMode.MONO)\n            gfp.force_ms = false;\n        /*\n         * don't allow forced mid/side stereo for mono output\n         */\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.VBR_mean_bitrate_kbps != 128\n            && gfp.brate == 0)\n            gfp.brate = gfp.VBR_mean_bitrate_kbps;\n\n        if (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_mtrh\n            || gfp.VBR == VbrMode.vbr_mt) {\n            /* these modes can handle free format condition */\n        } else {\n            gfp.free_format = false;\n            /* mode can't be mixed with free format */\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off && gfp.brate == 0) {\n            /* no bitrate or compression ratio specified, use 11.025 */\n            if (BitStream.EQ(gfp.compression_ratio, 0))\n                gfp.compression_ratio = 11.025;\n            /*\n             * rate to compress a CD down to exactly 128000 bps\n             */\n        }\n\n        /* find bitrate if user specify a compression ratio */\n        if (gfp.VBR == VbrMode.vbr_off && gfp.compression_ratio > 0) {\n\n            if (gfp.out_samplerate == 0)\n                gfp.out_samplerate = map2MP3Frequency((int)(0.97 * gfp.in_samplerate));\n            /*\n             * round up with a margin of 3 %\n             */\n\n            /*\n             * choose a bitrate for the output samplerate which achieves\n             * specified compression ratio\n             */\n            gfp.brate = 0 | (gfp.out_samplerate * 16 * gfc.channels_out / (1.e3 * gfp.compression_ratio));\n\n            /* we need the version for the bitrate table look up */\n            gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n\n            if (!gfp.free_format) /*\n             * for non Free Format find the nearest allowed\n             * bitrate\n             */\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n        }\n\n        if (gfp.out_samplerate != 0) {\n            if (gfp.out_samplerate < 16000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    64);\n            } else if (gfp.out_samplerate < 32000) {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    8);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    160);\n            } else {\n                gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps,\n                    32);\n                gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps,\n                    320);\n            }\n        }\n\n        /****************************************************************/\n        /* if a filter has not been enabled, see if we should add one: */\n        /****************************************************************/\n        if (gfp.lowpassfreq == 0) {\n            var lowpass = 16000.;\n\n            switch (gfp.VBR) {\n                case VbrMode.vbr_off:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.brate);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_abr:\n                {\n                    var lh = new LowPassHighPass();\n                    optimum_bandwidth(lh, gfp.VBR_mean_bitrate_kbps);\n                    lowpass = lh.lowerlimit;\n                    break;\n                }\n                case VbrMode.vbr_rh:\n                {\n                    var x = [19500, 19000, 18600, 18000, 17500, 16000,\n                        15600, 14900, 12500, 10000, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                    break;\n                }\n                default:\n                {\n                    var x = [19500, 19000, 18500, 18000, 17500, 16500,\n                        15500, 14500, 12500, 9500, 3950];\n                    if (0 <= gfp.VBR_q && gfp.VBR_q <= 9) {\n                        var a = x[gfp.VBR_q], b = x[gfp.VBR_q + 1], m = gfp.VBR_q_frac;\n                        lowpass = linear_int(a, b, m);\n                    } else {\n                        lowpass = 19500;\n                    }\n                }\n            }\n            if (gfp.mode == MPEGMode.MONO\n                && (gfp.VBR == VbrMode.vbr_off || gfp.VBR == VbrMode.vbr_abr))\n                lowpass *= 1.5;\n\n            gfp.lowpassfreq = lowpass | 0;\n        }\n\n        if (gfp.out_samplerate == 0) {\n            if (2 * gfp.lowpassfreq > gfp.in_samplerate) {\n                gfp.lowpassfreq = gfp.in_samplerate / 2;\n            }\n            gfp.out_samplerate = optimum_samplefreq(gfp.lowpassfreq | 0,\n                gfp.in_samplerate);\n        }\n\n        gfp.lowpassfreq = Math.min(20500, gfp.lowpassfreq);\n        gfp.lowpassfreq = Math.min(gfp.out_samplerate / 2, gfp.lowpassfreq);\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.brate);\n        }\n        if (gfp.VBR == VbrMode.vbr_abr) {\n            gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /*\n         * do not compute ReplayGain values and do not find the peak sample if\n         * we can't store them\n         */\n        if (!gfp.bWriteVbrTag) {\n            gfp.findReplayGain = false;\n            gfp.decode_on_the_fly = false;\n            gfc.findPeakSample = false;\n        }\n        gfc.findReplayGain = gfp.findReplayGain;\n        gfc.decode_on_the_fly = gfp.decode_on_the_fly;\n\n        if (gfc.decode_on_the_fly)\n            gfc.findPeakSample = true;\n\n        if (gfc.findReplayGain) {\n            if (ga.InitGainAnalysis(gfc.rgdata, gfp.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) {\n                gfp.internal_flags = null;\n                return -6;\n            }\n        }\n\n        if (gfc.decode_on_the_fly && !gfp.decode_only) {\n            if (gfc.hip != null) {\n                mpglib.hip_decode_exit(gfc.hip);\n            }\n            gfc.hip = mpglib.hip_decode_init();\n        }\n\n        gfc.mode_gr = gfp.out_samplerate <= 24000 ? 1 : 2;\n        /*\n         * Number of granules per frame\n         */\n        gfp.framesize = 576 * gfc.mode_gr;\n        gfp.encoder_delay = Encoder.ENCDELAY;\n\n        gfc.resample_ratio = gfp.in_samplerate / gfp.out_samplerate;\n\n        /**\n         * <PRE>\n         *  sample freq       bitrate     compression ratio\n         *     [kHz]      [kbps/channel]   for 16 bit input\n         *     44.1            56               12.6\n         *     44.1            64               11.025\n         *     44.1            80                8.82\n         *     22.05           24               14.7\n         *     22.05           32               11.025\n         *     22.05           40                8.82\n         *     16              16               16.0\n         *     16              24               10.667\n         * </PRE>\n         */\n        /**\n         * <PRE>\n         *  For VBR, take a guess at the compression_ratio.\n         *  For example:\n         *\n         *    VBR_q    compression     like\n         *     -        4.4         320 kbps/44 kHz\n         *   0...1      5.5         256 kbps/44 kHz\n         *     2        7.3         192 kbps/44 kHz\n         *     4        8.8         160 kbps/44 kHz\n         *     6       11           128 kbps/44 kHz\n         *     9       14.7          96 kbps\n         *\n         *  for lower bitrates, downsample with --resample\n         * </PRE>\n         */\n        switch (gfp.VBR) {\n            case VbrMode.vbr_mt:\n            case VbrMode.vbr_rh:\n            case VbrMode.vbr_mtrh:\n            {\n                /* numbers are a bit strange, but they determine the lowpass value */\n                var cmp = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14,\n                    15, 16.5];\n                gfp.compression_ratio = cmp[gfp.VBR_q];\n            }\n                break;\n            case VbrMode.vbr_abr:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.VBR_mean_bitrate_kbps);\n                break;\n            default:\n                gfp.compression_ratio = gfp.out_samplerate * 16 * gfc.channels_out\n                    / (1.e3 * gfp.brate);\n                break;\n        }\n\n        /*\n         * mode = -1 (not set by user) or mode = MONO (because of only 1 input\n         * channel). If mode has not been set, then select J-STEREO\n         */\n        if (gfp.mode == MPEGMode.NOT_SET) {\n            gfp.mode = MPEGMode.JOINT_STEREO;\n        }\n\n        /* apply user driven high pass filter */\n        if (gfp.highpassfreq > 0) {\n            gfc.highpass1 = 2. * gfp.highpassfreq;\n\n            if (gfp.highpasswidth >= 0)\n                gfc.highpass2 = 2. * (gfp.highpassfreq + gfp.highpasswidth);\n            else\n            /* 0% above on default */\n                gfc.highpass2 = (1 + 0.00) * 2. * gfp.highpassfreq;\n\n            gfc.highpass1 /= gfp.out_samplerate;\n            gfc.highpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.highpass1 = 0;\n            gfc.highpass2 = 0;\n        }\n        /* apply user driven low pass filter */\n        if (gfp.lowpassfreq > 0) {\n            gfc.lowpass2 = 2. * gfp.lowpassfreq;\n            if (gfp.lowpasswidth >= 0) {\n                gfc.lowpass1 = 2. * (gfp.lowpassfreq - gfp.lowpasswidth);\n                if (gfc.lowpass1 < 0) /* has to be >= 0 */\n                    gfc.lowpass1 = 0;\n            } else { /* 0% below on default */\n                gfc.lowpass1 = (1 - 0.00) * 2. * gfp.lowpassfreq;\n            }\n            gfc.lowpass1 /= gfp.out_samplerate;\n            gfc.lowpass2 /= gfp.out_samplerate;\n        } else {\n            gfc.lowpass1 = 0;\n            gfc.lowpass2 = 0;\n        }\n\n        /**********************************************************************/\n        /* compute info needed for polyphase filter (filter type==0, default) */\n        /**********************************************************************/\n        lame_init_params_ppflt(gfp);\n        /*******************************************************\n         * samplerate and bitrate index\n         *******************************************************/\n        gfc.samplerate_index = SmpFrqIndex(gfp.out_samplerate, gfp);\n        if (gfc.samplerate_index < 0) {\n            gfp.internal_flags = null;\n            return -1;\n        }\n\n        if (gfp.VBR == VbrMode.vbr_off) {\n            if (gfp.free_format) {\n                gfc.bitrate_index = 0;\n            } else {\n                gfp.brate = FindNearestBitrate(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                gfc.bitrate_index = BitrateIndex(gfp.brate, gfp.version,\n                    gfp.out_samplerate);\n                if (gfc.bitrate_index <= 0) {\n                    gfp.internal_flags = null;\n                    return -1;\n                }\n            }\n        } else {\n            gfc.bitrate_index = 1;\n        }\n\n        /* for CBR, we will write an \"info\" tag. */\n\n        if (gfp.analysis)\n            gfp.bWriteVbrTag = false;\n\n        /* some file options not allowed if output is: not specified or stdout */\n        if (gfc.pinfo != null)\n            gfp.bWriteVbrTag = false;\n        /* disable Xing VBR tag */\n\n        bs.init_bit_stream_w(gfc);\n\n        var j = gfc.samplerate_index + (3 * gfp.version) + 6\n            * (gfp.out_samplerate < 16000 ? 1 : 0);\n        for (var i = 0; i < Encoder.SBMAX_l + 1; i++)\n            gfc.scalefac_band.l[i] = qupvt.sfBandIndex[j].l[i];\n\n        for (var i = 0; i < Encoder.PSFB21 + 1; i++) {\n            var size = (gfc.scalefac_band.l[22] - gfc.scalefac_band.l[21])\n                / Encoder.PSFB21;\n            var start = gfc.scalefac_band.l[21] + i * size;\n            gfc.scalefac_band.psfb21[i] = start;\n        }\n        gfc.scalefac_band.psfb21[Encoder.PSFB21] = 576;\n\n        for (var i = 0; i < Encoder.SBMAX_s + 1; i++)\n            gfc.scalefac_band.s[i] = qupvt.sfBandIndex[j].s[i];\n\n        for (var i = 0; i < Encoder.PSFB12 + 1; i++) {\n            var size = (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12])\n                / Encoder.PSFB12;\n            var start = gfc.scalefac_band.s[12] + i * size;\n            gfc.scalefac_band.psfb12[i] = start;\n        }\n        gfc.scalefac_band.psfb12[Encoder.PSFB12] = 192;\n        /* determine the mean bitrate for main data */\n        if (gfp.version == 1) /* MPEG 1 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 17 : 4 + 32;\n        else\n        /* MPEG 2 */\n            gfc.sideinfo_len = (gfc.channels_out == 1) ? 4 + 9 : 4 + 17;\n\n        if (gfp.error_protection)\n            gfc.sideinfo_len += 2;\n\n        lame_init_bitstream(gfp);\n\n        gfc.Class_ID = LAME_ID;\n\n        {\n            var k;\n\n            for (k = 0; k < 19; k++)\n                gfc.nsPsy.pefirbuf[k] = 700 * gfc.mode_gr * gfc.channels_out;\n\n            if (gfp.ATHtype == -1)\n                gfp.ATHtype = 4;\n        }\n        assert(gfp.VBR_q <= 9);\n        assert(gfp.VBR_q >= 0);\n\n        switch (gfp.VBR) {\n\n            case VbrMode.vbr_mt:\n                gfp.VBR = VbrMode.vbr_mtrh;\n            //$FALL-THROUGH$\n            case VbrMode.vbr_mtrh:\n            {\n                if (gfp.useTemporal == null) {\n                    gfp.useTemporal = false;\n                    /* off by default for this VBR mode */\n                }\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n                /**\n                 * <PRE>\n                 *   The newer VBR code supports only a limited\n                 *     subset of quality levels:\n                 *     9-5=5 are the same, uses x^3/4 quantization\n                 *   4-0=0 are the same  5 plus best huffman divide code\n                 * </PRE>\n                 */\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n                if (gfp.quality < 5)\n                    gfp.quality = 0;\n                if (gfp.quality > 5)\n                    gfp.quality = 5;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                gfc.iteration_loop = new VBRNewIterationLoop(qu);\n                break;\n\n            }\n            case VbrMode.vbr_rh:\n            {\n\n                p.apply_preset(gfp, 500 - (gfp.VBR_q * 10), 0);\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                /*\n                 * sfb21 extra only with MPEG-1 at higher sampling rates\n                 */\n                if (gfp.experimentalY)\n                    gfc.sfb21_extra = false;\n                else\n                    gfc.sfb21_extra = (gfp.out_samplerate > 44000);\n\n                /*\n                 * VBR needs at least the output of GPSYCHO, so we have to garantee\n                 * that by setting a minimum quality level, actually level 6 does\n                 * it. down to level 6\n                 */\n                if (gfp.quality > 6)\n                    gfp.quality = 6;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                gfc.iteration_loop = new VBROldIterationLoop(qu);\n                break;\n            }\n\n            default: /* cbr/abr */\n            {\n                var vbrmode;\n\n                /*\n                 * no sfb21 extra with CBR code\n                 */\n                gfc.sfb21_extra = false;\n\n                if (gfp.quality < 0)\n                    gfp.quality = LAME_DEFAULT_QUALITY;\n\n                vbrmode = gfp.VBR;\n                if (vbrmode == VbrMode.vbr_off)\n                    gfp.VBR_mean_bitrate_kbps = gfp.brate;\n                /* second, set parameters depending on bitrate */\n                p.apply_preset(gfp, gfp.VBR_mean_bitrate_kbps, 0);\n                gfp.VBR = vbrmode;\n\n                gfc.PSY.mask_adjust = gfp.maskingadjust;\n                gfc.PSY.mask_adjust_short = gfp.maskingadjust_short;\n\n                if (vbrmode == VbrMode.vbr_off) {\n                    gfc.iteration_loop = new CBRNewIterationLoop(qu);\n                } else {\n                    gfc.iteration_loop = new ABRIterationLoop(qu);\n                }\n                break;\n            }\n        }\n        assert(gfp.scale >= 0);\n        /* initialize default values common for all modes */\n\n        if (gfp.VBR != VbrMode.vbr_off) { /* choose a min/max bitrate for VBR */\n            /* if the user didn't specify VBR_max_bitrate: */\n            gfc.VBR_min_bitrate = 1;\n            /*\n             * default: allow 8 kbps (MPEG-2) or 32 kbps (MPEG-1)\n             */\n            gfc.VBR_max_bitrate = 14;\n            /*\n             * default: allow 160 kbps (MPEG-2) or 320 kbps (MPEG-1)\n             */\n            if (gfp.out_samplerate < 16000)\n                gfc.VBR_max_bitrate = 8;\n            /* default: allow 64 kbps (MPEG-2.5) */\n            if (gfp.VBR_min_bitrate_kbps != 0) {\n                gfp.VBR_min_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_min_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_min_bitrate = BitrateIndex(gfp.VBR_min_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_min_bitrate < 0)\n                    return -1;\n            }\n            if (gfp.VBR_max_bitrate_kbps != 0) {\n                gfp.VBR_max_bitrate_kbps = FindNearestBitrate(\n                    gfp.VBR_max_bitrate_kbps, gfp.version,\n                    gfp.out_samplerate);\n                gfc.VBR_max_bitrate = BitrateIndex(gfp.VBR_max_bitrate_kbps,\n                    gfp.version, gfp.out_samplerate);\n                if (gfc.VBR_max_bitrate < 0)\n                    return -1;\n            }\n            gfp.VBR_min_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate];\n            gfp.VBR_max_bitrate_kbps = Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate];\n            gfp.VBR_mean_bitrate_kbps = Math.min(\n                Tables.bitrate_table[gfp.version][gfc.VBR_max_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n            gfp.VBR_mean_bitrate_kbps = Math.max(\n                Tables.bitrate_table[gfp.version][gfc.VBR_min_bitrate],\n                gfp.VBR_mean_bitrate_kbps);\n        }\n\n        /* just another daily changing developer switch */\n        if (gfp.tune) {\n            gfc.PSY.mask_adjust += gfp.tune_value_a;\n            gfc.PSY.mask_adjust_short += gfp.tune_value_a;\n        }\n\n        /* initialize internal qval settings */\n        lame_init_qval(gfp);\n        assert(gfp.scale >= 0);\n        /*\n         * automatic ATH adjustment on\n         */\n        if (gfp.athaa_type < 0)\n            gfc.ATH.useAdjust = 3;\n        else\n            gfc.ATH.useAdjust = gfp.athaa_type;\n\n        /* initialize internal adaptive ATH settings -jd */\n        gfc.ATH.aaSensitivityP = Math.pow(10.0, gfp.athaa_sensitivity\n            / -10.0);\n\n        if (gfp.short_blocks == null) {\n            gfp.short_blocks = ShortBlock.short_block_allowed;\n        }\n\n        /*\n         * Note Jan/2003: Many hardware decoders cannot handle short blocks in\n         * regular stereo mode unless they are coupled (same type in both\n         * channels) it is a rare event (1 frame per min. or so) that LAME would\n         * use uncoupled short blocks, so lets turn them off until we decide how\n         * to handle this. No other encoders allow uncoupled short blocks, even\n         * though it is in the standard.\n         */\n        /*\n         * rh 20040217: coupling makes no sense for mono and dual-mono streams\n         */\n        if (gfp.short_blocks == ShortBlock.short_block_allowed\n            && (gfp.mode == MPEGMode.JOINT_STEREO || gfp.mode == MPEGMode.STEREO)) {\n            gfp.short_blocks = ShortBlock.short_block_coupled;\n        }\n\n        if (gfp.quant_comp < 0)\n            gfp.quant_comp = 1;\n        if (gfp.quant_comp_short < 0)\n            gfp.quant_comp_short = 0;\n\n        if (gfp.msfix < 0)\n            gfp.msfix = 0;\n\n        /* select psychoacoustic model */\n        gfp.exp_nspsytune = gfp.exp_nspsytune | 1;\n\n        if (gfp.internal_flags.nsPsy.attackthre < 0)\n            gfp.internal_flags.nsPsy.attackthre = PsyModel.NSATTACKTHRE;\n        if (gfp.internal_flags.nsPsy.attackthre_s < 0)\n            gfp.internal_flags.nsPsy.attackthre_s = PsyModel.NSATTACKTHRE_S;\n\n        assert(gfp.scale >= 0);\n\n        if (gfp.scale < 0)\n            gfp.scale = 1;\n\n        if (gfp.ATHtype < 0)\n            gfp.ATHtype = 4;\n\n        if (gfp.ATHcurve < 0)\n            gfp.ATHcurve = 4;\n\n        if (gfp.athaa_loudapprox < 0)\n            gfp.athaa_loudapprox = 2;\n\n        if (gfp.interChRatio < 0)\n            gfp.interChRatio = 0;\n\n        if (gfp.useTemporal == null)\n            gfp.useTemporal = true;\n        /* on by default */\n\n        /*\n         * padding method as described in\n         * \"MPEG-Layer3 / Bitstream Syntax and Decoding\" by Martin Sieler, Ralph\n         * Sperschneider\n         *\n         * note: there is no padding for the very first frame\n         *\n         * Robert Hegemann 2000-06-22\n         */\n        gfc.slot_lag = gfc.frac_SpF = 0;\n        if (gfp.VBR == VbrMode.vbr_off)\n            gfc.slot_lag = gfc.frac_SpF = (((gfp.version + 1) * 72000 * gfp.brate) % gfp.out_samplerate) | 0;\n\n        qupvt.iteration_init(gfp);\n        psy.psymodel_init(gfp);\n        assert(gfp.scale >= 0);\n        return 0;\n    }\n\n    function update_inbuffer_size(gfc, nsamples) {\n        if (gfc.in_buffer_0 == null || gfc.in_buffer_nsamples < nsamples) {\n            gfc.in_buffer_0 = new_float(nsamples);\n            gfc.in_buffer_1 = new_float(nsamples);\n            gfc.in_buffer_nsamples = nsamples;\n        }\n    }\n\n    this.lame_encode_flush = function (gfp, mp3buffer, mp3bufferPos, mp3buffer_size) {\n        var gfc = gfp.internal_flags;\n        var buffer = new_short_n([2, 1152]);\n        var imp3 = 0, mp3count, mp3buffer_size_remaining;\n\n        /*\n         * we always add POSTDELAY=288 padding to make sure granule with real\n         * data can be complety decoded (because of 50% overlap with next\n         * granule\n         */\n        var end_padding;\n        var frames_left;\n        var samples_to_encode = gfc.mf_samples_to_encode - Encoder.POSTDELAY;\n        var mf_needed = calcNeeded(gfp);\n\n        /* Was flush already called? */\n        if (gfc.mf_samples_to_encode < 1) {\n            return 0;\n        }\n        mp3count = 0;\n\n        if (gfp.in_samplerate != gfp.out_samplerate) {\n            /*\n             * delay due to resampling; needs to be fixed, if resampling code\n             * gets changed\n             */\n            samples_to_encode += 16. * gfp.out_samplerate / gfp.in_samplerate;\n        }\n        end_padding = gfp.framesize - (samples_to_encode % gfp.framesize);\n        if (end_padding < 576)\n            end_padding += gfp.framesize;\n        gfp.encoder_padding = end_padding;\n\n        frames_left = (samples_to_encode + end_padding) / gfp.framesize;\n\n        /*\n         * send in a frame of 0 padding until all internal sample buffers are\n         * flushed\n         */\n        while (frames_left > 0 && imp3 >= 0) {\n            var bunch = mf_needed - gfc.mf_size;\n            var frame_num = gfp.frameNum;\n\n            bunch *= gfp.in_samplerate;\n            bunch /= gfp.out_samplerate;\n            if (bunch > 1152)\n                bunch = 1152;\n            if (bunch < 1)\n                bunch = 1;\n\n            mp3buffer_size_remaining = mp3buffer_size - mp3count;\n\n            /* if user specifed buffer size = 0, dont check size */\n            if (mp3buffer_size == 0)\n                mp3buffer_size_remaining = 0;\n\n            imp3 = this.lame_encode_buffer(gfp, buffer[0], buffer[1], bunch,\n                mp3buffer, mp3bufferPos, mp3buffer_size_remaining);\n\n            mp3bufferPos += imp3;\n            mp3count += imp3;\n            frames_left -= (frame_num != gfp.frameNum) ? 1 : 0;\n        }\n        /*\n         * Set gfc.mf_samples_to_encode to 0, so we may detect and break loops\n         * calling it more than once in a row.\n         */\n        gfc.mf_samples_to_encode = 0;\n\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        /* mp3 related stuff. bit buffer might still contain some mp3 data */\n        bs.flush_bitstream(gfp);\n        imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n            mp3buffer_size_remaining, 1);\n        if (imp3 < 0) {\n            /* some type of fatal error */\n            return imp3;\n        }\n        mp3bufferPos += imp3;\n        mp3count += imp3;\n        mp3buffer_size_remaining = mp3buffer_size - mp3count;\n        /* if user specifed buffer size = 0, dont check size */\n        if (mp3buffer_size == 0)\n            mp3buffer_size_remaining = 0;\n\n        if (gfp.write_id3tag_automatic) {\n            /* write a id3 tag to the bitstream */\n            id3.id3tag_write_v1(gfp);\n\n            imp3 = bs.copy_buffer(gfc, mp3buffer, mp3bufferPos,\n                mp3buffer_size_remaining, 0);\n\n            if (imp3 < 0) {\n                return imp3;\n            }\n            mp3count += imp3;\n        }\n        return mp3count;\n    };\n\n    this.lame_encode_buffer = function (gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        update_inbuffer_size(gfc, nsamples);\n\n        in_buffer[0] = gfc.in_buffer_0;\n        in_buffer[1] = gfc.in_buffer_1;\n\n        /* make a copy of input buffer, changing type to sample_t */\n        for (var i = 0; i < nsamples; i++) {\n            in_buffer[0][i] = buffer_l[i];\n            if (gfc.channels_in > 1)\n                in_buffer[1][i] = buffer_r[i];\n        }\n\n        return lame_encode_buffer_sample(gfp, in_buffer[0], in_buffer[1],\n            nsamples, mp3buf, mp3bufPos, mp3buf_size);\n    }\n\n    function calcNeeded(gfp) {\n        var mf_needed = Encoder.BLKSIZE + gfp.framesize - Encoder.FFTOFFSET;\n        /*\n         * amount needed for FFT\n         */\n        mf_needed = Math.max(mf_needed, 512 + gfp.framesize - 32);\n        assert(LameInternalFlags.MFSIZE >= mf_needed);\n\n        return mf_needed;\n    }\n\n    function lame_encode_buffer_sample(gfp, buffer_l, buffer_r, nsamples, mp3buf, mp3bufPos, mp3buf_size) {\n        var gfc = gfp.internal_flags;\n        var mp3size = 0, ret, i, ch, mf_needed;\n        var mp3out;\n        var mfbuf = [null, null];\n        var in_buffer = [null, null];\n\n        if (gfc.Class_ID != LAME_ID)\n            return -3;\n\n        if (nsamples == 0)\n            return 0;\n\n        /* copy out any tags that may have been written into bitstream */\n        mp3out = bs.copy_buffer(gfc, mp3buf, mp3bufPos, mp3buf_size, 0);\n        if (mp3out < 0)\n            return mp3out;\n        /* not enough buffer space */\n        mp3bufPos += mp3out;\n        mp3size += mp3out;\n\n        in_buffer[0] = buffer_l;\n        in_buffer[1] = buffer_r;\n\n        /* Apply user defined re-scaling */\n\n        /* user selected scaling of the samples */\n        if (BitStream.NEQ(gfp.scale, 0) && BitStream.NEQ(gfp.scale, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale;\n                if (gfc.channels_out == 2)\n                    in_buffer[1][i] *= gfp.scale;\n            }\n        }\n\n        /* user selected scaling of the channel 0 (left) samples */\n        if (BitStream.NEQ(gfp.scale_left, 0)\n            && BitStream.NEQ(gfp.scale_left, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] *= gfp.scale_left;\n            }\n        }\n\n        /* user selected scaling of the channel 1 (right) samples */\n        if (BitStream.NEQ(gfp.scale_right, 0)\n            && BitStream.NEQ(gfp.scale_right, 1.0)) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[1][i] *= gfp.scale_right;\n            }\n        }\n\n        /* Downsample to Mono if 2 channels in and 1 channel out */\n        if (gfp.num_channels == 2 && gfc.channels_out == 1) {\n            for (i = 0; i < nsamples; ++i) {\n                in_buffer[0][i] = 0.5 * ( in_buffer[0][i] + in_buffer[1][i]);\n                in_buffer[1][i] = 0.0;\n            }\n        }\n\n        mf_needed = calcNeeded(gfp);\n\n        mfbuf[0] = gfc.mfbuf[0];\n        mfbuf[1] = gfc.mfbuf[1];\n\n        var in_bufferPos = 0;\n        while (nsamples > 0) {\n            var in_buffer_ptr = [null, null];\n            var n_in = 0;\n            /* number of input samples processed with fill_buffer */\n            var n_out = 0;\n            /* number of samples output with fill_buffer */\n            /* n_in <> n_out if we are resampling */\n\n            in_buffer_ptr[0] = in_buffer[0];\n            in_buffer_ptr[1] = in_buffer[1];\n            /* copy in new samples into mfbuf, with resampling */\n            var inOut = new InOut();\n            fill_buffer(gfp, mfbuf, in_buffer_ptr, in_bufferPos, nsamples,\n                inOut);\n            n_in = inOut.n_in;\n            n_out = inOut.n_out;\n\n            /* compute ReplayGain of resampled input if requested */\n            if (gfc.findReplayGain && !gfc.decode_on_the_fly)\n                if (ga.AnalyzeSamples(gfc.rgdata, mfbuf[0], gfc.mf_size,\n                        mfbuf[1], gfc.mf_size, n_out, gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                    return -6;\n\n            /* update in_buffer counters */\n            nsamples -= n_in;\n            in_bufferPos += n_in;\n            if (gfc.channels_out == 2)\n                ;// in_bufferPos += n_in;\n\n            /* update mfbuf[] counters */\n            gfc.mf_size += n_out;\n            assert(gfc.mf_size <= LameInternalFlags.MFSIZE);\n\n            /*\n             * lame_encode_flush may have set gfc.mf_sample_to_encode to 0 so we\n             * have to reinitialize it here when that happened.\n             */\n            if (gfc.mf_samples_to_encode < 1) {\n                gfc.mf_samples_to_encode = Encoder.ENCDELAY + Encoder.POSTDELAY;\n            }\n            gfc.mf_samples_to_encode += n_out;\n\n            if (gfc.mf_size >= mf_needed) {\n                /* encode the frame. */\n                /* mp3buf = pointer to current location in buffer */\n                /* mp3buf_size = size of original mp3 output buffer */\n                /* = 0 if we should not worry about the */\n                /* buffer size because calling program is */\n                /* to lazy to compute it */\n                /* mp3size = size of data written to buffer so far */\n                /* mp3buf_size-mp3size = amount of space avalable */\n\n                var buf_size = mp3buf_size - mp3size;\n                if (mp3buf_size == 0)\n                    buf_size = 0;\n\n                ret = lame_encode_frame(gfp, mfbuf[0], mfbuf[1], mp3buf,\n                    mp3bufPos, buf_size);\n\n                if (ret < 0)\n                    return ret;\n                mp3bufPos += ret;\n                mp3size += ret;\n\n                /* shift out old samples */\n                gfc.mf_size -= gfp.framesize;\n                gfc.mf_samples_to_encode -= gfp.framesize;\n                for (ch = 0; ch < gfc.channels_out; ch++)\n                    for (i = 0; i < gfc.mf_size; i++)\n                        mfbuf[ch][i] = mfbuf[ch][i + gfp.framesize];\n            }\n        }\n        assert(nsamples == 0);\n\n        return mp3size;\n    }\n\n    function lame_encode_frame(gfp, inbuf_l, inbuf_r, mp3buf, mp3bufPos, mp3buf_size) {\n        var ret = self.enc.lame_encode_mp3_frame(gfp, inbuf_l, inbuf_r, mp3buf,\n            mp3bufPos, mp3buf_size);\n        gfp.frameNum++;\n        return ret;\n    }\n\n    function InOut() {\n        this.n_in = 0;\n        this.n_out = 0;\n    }\n\n\n    function NumUsed() {\n        this.num_used = 0;\n    }\n\n    /**\n     * Greatest common divisor.\n     * <p>\n     * Joint work of Euclid and M. Hendry\n     */\n    function gcd(i, j) {\n        return j != 0 ? gcd(j, i % j) : i;\n    }\n\n    /**\n     * Resampling via FIR filter, blackman window.\n     */\n    function blackman(x, fcn, l) {\n        /*\n         * This algorithm from: SIGNAL PROCESSING ALGORITHMS IN FORTRAN AND C\n         * S.D. Stearns and R.A. David, Prentice-Hall, 1992\n         */\n        var wcn = (Math.PI * fcn);\n\n        x /= l;\n        if (x < 0)\n            x = 0;\n        if (x > 1)\n            x = 1;\n        var x2 = x - .5;\n\n        var bkwn = 0.42 - 0.5 * Math.cos(2 * x * Math.PI) + 0.08 * Math.cos(4 * x * Math.PI);\n        if (Math.abs(x2) < 1e-9)\n            return (wcn / Math.PI);\n        else\n            return (bkwn * Math.sin(l * wcn * x2) / (Math.PI * l * x2));\n    }\n\n    function fill_buffer_resample(gfp, outbuf, outbufPos, desired_len, inbuf, in_bufferPos, len, num_used, ch) {\n        var gfc = gfp.internal_flags;\n        var i, j = 0, k;\n        /* number of convolution functions to pre-compute */\n        var bpc = gfp.out_samplerate\n            / gcd(gfp.out_samplerate, gfp.in_samplerate);\n        if (bpc > LameInternalFlags.BPC)\n            bpc = LameInternalFlags.BPC;\n\n        var intratio = (Math.abs(gfc.resample_ratio\n            - Math.floor(.5 + gfc.resample_ratio)) < .0001) ? 1 : 0;\n        var fcn = 1.00 / gfc.resample_ratio;\n        if (fcn > 1.00)\n            fcn = 1.00;\n        var filter_l = 31;\n        if (0 == filter_l % 2)\n            --filter_l;\n        /* must be odd */\n        filter_l += intratio;\n        /* unless resample_ratio=int, it must be even */\n\n        var BLACKSIZE = filter_l + 1;\n        /* size of data needed for FIR */\n\n        if (gfc.fill_buffer_resample_init == 0) {\n            gfc.inbuf_old[0] = new_float(BLACKSIZE);\n            gfc.inbuf_old[1] = new_float(BLACKSIZE);\n            for (i = 0; i <= 2 * bpc; ++i)\n                gfc.blackfilt[i] = new_float(BLACKSIZE);\n\n            gfc.itime[0] = 0;\n            gfc.itime[1] = 0;\n\n            /* precompute blackman filter coefficients */\n            for (j = 0; j <= 2 * bpc; j++) {\n                var sum = 0.;\n                var offset = (j - bpc) / (2. * bpc);\n                for (i = 0; i <= filter_l; i++)\n                    sum += gfc.blackfilt[j][i] = blackman(i - offset, fcn,\n                        filter_l);\n                for (i = 0; i <= filter_l; i++)\n                    gfc.blackfilt[j][i] /= sum;\n            }\n            gfc.fill_buffer_resample_init = 1;\n        }\n\n        var inbuf_old = gfc.inbuf_old[ch];\n\n        /* time of j'th element in inbuf = itime + j/ifreq; */\n        /* time of k'th element in outbuf = j/ofreq */\n        for (k = 0; k < desired_len; k++) {\n            var time0;\n            var joff;\n\n            time0 = k * gfc.resample_ratio;\n            /* time of k'th output sample */\n            j = 0 | Math.floor(time0 - gfc.itime[ch]);\n\n            /* check if we need more input data */\n            if ((filter_l + j - filter_l / 2) >= len)\n                break;\n\n            /* blackman filter. by default, window centered at j+.5(filter_l%2) */\n            /* but we want a window centered at time0. */\n            var offset = (time0 - gfc.itime[ch] - (j + .5 * (filter_l % 2)));\n            assert(Math.abs(offset) <= .501);\n\n            /* find the closest precomputed window for this offset: */\n            joff = 0 | Math.floor((offset * 2 * bpc) + bpc + .5);\n            var xvalue = 0.;\n            for (i = 0; i <= filter_l; ++i) {\n                var j2 = i + j - filter_l / 2;\n                var y;\n                assert(j2 < len);\n                assert(j2 + BLACKSIZE >= 0);\n                y = (j2 < 0) ? inbuf_old[BLACKSIZE + j2] : inbuf[in_bufferPos\n                + j2];\n                xvalue += y * gfc.blackfilt[joff][i];\n            }\n            outbuf[outbufPos + k] = xvalue;\n        }\n\n        /* k = number of samples added to outbuf */\n        /* last k sample used data from [j-filter_l/2,j+filter_l-filter_l/2] */\n\n        /* how many samples of input data were used: */\n        num_used.num_used = Math.min(len, filter_l + j - filter_l / 2);\n\n        /*\n         * adjust our input time counter. Incriment by the number of samples\n         * used, then normalize so that next output sample is at time 0, next\n         * input buffer is at time itime[ch]\n         */\n        gfc.itime[ch] += num_used.num_used - k * gfc.resample_ratio;\n\n        /* save the last BLACKSIZE samples into the inbuf_old buffer */\n        if (num_used.num_used >= BLACKSIZE) {\n            for (i = 0; i < BLACKSIZE; i++)\n                inbuf_old[i] = inbuf[in_bufferPos + num_used.num_used + i\n                - BLACKSIZE];\n        } else {\n            /* shift in num_used.num_used samples into inbuf_old */\n            var n_shift = BLACKSIZE - num_used.num_used;\n            /*\n             * number of samples to\n             * shift\n             */\n\n            /*\n             * shift n_shift samples by num_used.num_used, to make room for the\n             * num_used new samples\n             */\n            for (i = 0; i < n_shift; ++i)\n                inbuf_old[i] = inbuf_old[i + num_used.num_used];\n\n            /* shift in the num_used.num_used samples */\n            for (j = 0; i < BLACKSIZE; ++i, ++j)\n                inbuf_old[i] = inbuf[in_bufferPos + j];\n\n            assert(j == num_used.num_used);\n        }\n        return k;\n        /* return the number samples created at the new samplerate */\n    }\n\n    function fill_buffer(gfp, mfbuf, in_buffer, in_bufferPos, nsamples, io) {\n        var gfc = gfp.internal_flags;\n\n        /* copy in new samples into mfbuf, with resampling if necessary */\n        if ((gfc.resample_ratio < .9999) || (gfc.resample_ratio > 1.0001)) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var numUsed = new NumUsed();\n                io.n_out = fill_buffer_resample(gfp, mfbuf[ch], gfc.mf_size,\n                    gfp.framesize, in_buffer[ch], in_bufferPos, nsamples,\n                    numUsed, ch);\n                io.n_in = numUsed.num_used;\n            }\n        } else {\n            io.n_out = Math.min(gfp.framesize, nsamples);\n            io.n_in = io.n_out;\n            for (var i = 0; i < io.n_out; ++i) {\n                mfbuf[0][gfc.mf_size + i] = in_buffer[0][in_bufferPos + i];\n                if (gfc.channels_out == 2)\n                    mfbuf[1][gfc.mf_size + i] = in_buffer[1][in_bufferPos + i];\n            }\n        }\n    }\n\n}\n\nmodule.exports = Lame;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Lame.js\n// module id = mgSH\n// module chunks = 0","/*\n *      quantize_pvt source file\n *\n *      Copyright (c) 1999-2002 Takehiro Tominaga\n *      Copyright (c) 2000-2002 Robert Hegemann\n *      Copyright (c) 2001 Naoki Shibata\n *      Copyright (c) 2002-2005 Gabriel Bouvigne\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n\n/* $Id: QuantizePVT.java,v 1.24 2011/05/24 20:48:06 kenchis Exp $ */\nvar ScaleFac = require('./ScaleFac.js');\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\nvar MeanBits = require('./MeanBits.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nQuantizePVT.Q_MAX = (256 + 1);\nQuantizePVT.Q_MAX2 = 116;\nQuantizePVT.LARGE_BITS = 100000;\nQuantizePVT.IXMAX_VAL = 8206;\n\nfunction QuantizePVT() {\n\n    var tak = null;\n    var rv = null;\n    var psy = null;\n\n    this.setModules = function (_tk, _rv, _psy) {\n        tak = _tk;\n        rv = _rv;\n        psy = _psy;\n    };\n\n    function POW20(x) {\n        assert(0 <= (x + QuantizePVT.Q_MAX2) && x < QuantizePVT.Q_MAX);\n        return pow20[x + QuantizePVT.Q_MAX2];\n    }\n\n    this.IPOW20 = function (x) {\n        assert(0 <= x && x < QuantizePVT.Q_MAX);\n        return ipow20[x];\n    }\n\n    /**\n     * smallest such that 1.0+DBL_EPSILON != 1.0\n     */\n    var DBL_EPSILON = 2.2204460492503131e-016;\n\n    /**\n     * ix always <= 8191+15. see count_bits()\n     */\n    var IXMAX_VAL = QuantizePVT.IXMAX_VAL;\n\n    var PRECALC_SIZE = (IXMAX_VAL + 2);\n\n    var Q_MAX = QuantizePVT.Q_MAX;\n\n\n    /**\n     * <CODE>\n     * minimum possible number of\n     * -cod_info.global_gain + ((scalefac[] + (cod_info.preflag ? pretab[sfb] : 0))\n     * << (cod_info.scalefac_scale + 1)) + cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n     *\n     * for long block, 0+((15+3)<<2) = 18*4 = 72\n     * for short block, 0+(15<<2)+7*8 = 15*4+56 = 116\n     * </CODE>\n     */\n    var Q_MAX2 = QuantizePVT.Q_MAX2;\n\n    var LARGE_BITS = QuantizePVT.LARGE_BITS;\n\n\n    /**\n     * Assuming dynamic range=96dB, this value should be 92\n     */\n    var NSATHSCALE = 100;\n\n    /**\n     * The following table is used to implement the scalefactor partitioning for\n     * MPEG2 as described in section 2.4.3.2 of the IS. The indexing corresponds\n     * to the way the tables are presented in the IS:\n     *\n     * [table_number][row_in_table][column of nr_of_sfb]\n     */\n    this.nr_of_sfb_block = [\n        [[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]],\n        [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]],\n        [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]],\n        [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]],\n        [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]],\n        [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n\n    /**\n     * Table B.6: layer3 preemphasis\n     */\n    var pretab = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,\n        2, 2, 3, 3, 3, 2, 0];\n    this.pretab = pretab;\n\n    /**\n     * Here are MPEG1 Table B.8 and MPEG2 Table B.1 -- Layer III scalefactor\n     * bands. <BR>\n     * Index into this using a method such as:<BR>\n     * idx = fr_ps.header.sampling_frequency + (fr_ps.header.version * 3)\n     */\n    this.sfBandIndex = [\n        // Table B.2.b: 22.05 kHz\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb21 pseudo sub bands\n            , [0, 0, 0, 0, 0, 0, 0] //  sfb12 pseudo sub bands\n        ),\n        /* Table B.2.c: 24 kHz */ /* docs: 332. mpg123(broken): 330 */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464,\n                540, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.2.a: 16 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.b: 44.1 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.c: 48 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384,\n                576],\n            [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* Table B.8.a: 32 kHz */\n        new ScaleFac([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550,\n                576],\n            [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 11.025 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 12 kHz */\n        new ScaleFac([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464,\n                522, 576],\n            [0 / 3, 12 / 3, 24 / 3, 36 / 3, 54 / 3, 78 / 3, 108 / 3, 144 / 3, 186 / 3, 240 / 3, 312 / 3,\n                402 / 3, 522 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        ),\n        /* MPEG-2.5 8 kHz */\n        new ScaleFac([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570,\n                572, 574, 576],\n            [0 / 3, 24 / 3, 48 / 3, 72 / 3, 108 / 3, 156 / 3, 216 / 3, 288 / 3, 372 / 3, 480 / 3, 486 / 3,\n                492 / 3, 498 / 3, 576 / 3]\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb21 pseudo sub bands */\n            , [0, 0, 0, 0, 0, 0, 0] /*  sfb12 pseudo sub bands */\n        )\n    ];\n\n    var pow20 = new_float(Q_MAX + Q_MAX2 + 1);\n    var ipow20 = new_float(Q_MAX);\n    var pow43 = new_float(PRECALC_SIZE);\n\n    var adj43 = new_float(PRECALC_SIZE);\n    this.adj43 = adj43;\n\n    /**\n     * <PRE>\n     * compute the ATH for each scalefactor band cd range: 0..96db\n     *\n     * Input: 3.3kHz signal 32767 amplitude (3.3kHz is where ATH is smallest =\n     * -5db) longblocks: sfb=12 en0/bw=-11db max_en0 = 1.3db shortblocks: sfb=5\n     * -9db 0db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) longblocks: amp=1\n     * sfb=12 en0/bw=-103 db max_en0 = -92db amp=32767 sfb=12 -12 db -1.4db\n     *\n     * Input: 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 (repeated) shortblocks: amp=1\n     * sfb=5 en0/bw= -99 -86 amp=32767 sfb=5 -9 db 4db\n     *\n     *\n     * MAX energy of largest wave at 3.3kHz = 1db AVE energy of largest wave at\n     * 3.3kHz = -11db Let's take AVE: -11db = maximum signal in sfb=12. Dynamic\n     * range of CD: 96db. Therefor energy of smallest audible wave in sfb=12 =\n     * -11 - 96 = -107db = ATH at 3.3kHz.\n     *\n     * ATH formula for this wave: -5db. To adjust to LAME scaling, we need ATH =\n     * ATH_formula - 103 (db) ATH = ATH * 2.5e-10 (ener)\n     * </PRE>\n     */\n    function ATHmdct(gfp, f) {\n        var ath = psy.ATHformula(f, gfp);\n\n        ath -= NSATHSCALE;\n\n        /* modify the MDCT scaling for the ATH and convert to energy */\n        ath = Math.pow(10.0, ath / 10.0 + gfp.ATHlower);\n        return ath;\n    }\n\n    function compute_ath(gfp) {\n        var ATH_l = gfp.internal_flags.ATH.l;\n        var ATH_psfb21 = gfp.internal_flags.ATH.psfb21;\n        var ATH_s = gfp.internal_flags.ATH.s;\n        var ATH_psfb12 = gfp.internal_flags.ATH.psfb12;\n        var gfc = gfp.internal_flags;\n        var samp_freq = gfp.out_samplerate;\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            ATH_l[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_l[sfb] = Math.min(ATH_l[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n            var start = gfc.scalefac_band.psfb21[sfb];\n            var end = gfc.scalefac_band.psfb21[sfb + 1];\n            ATH_psfb21[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 576);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb21[sfb] = Math.min(ATH_psfb21[sfb], ATH_f);\n            }\n        }\n\n        for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n            var start = gfc.scalefac_band.s[sfb];\n            var end = gfc.scalefac_band.s[sfb + 1];\n            ATH_s[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_s[sfb] = Math.min(ATH_s[sfb], ATH_f);\n            }\n            ATH_s[sfb] *= (gfc.scalefac_band.s[sfb + 1] - gfc.scalefac_band.s[sfb]);\n        }\n\n        for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n            var start = gfc.scalefac_band.psfb12[sfb];\n            var end = gfc.scalefac_band.psfb12[sfb + 1];\n            ATH_psfb12[sfb] = Float.MAX_VALUE;\n            for (var i = start; i < end; i++) {\n                var freq = i * samp_freq / (2 * 192);\n                var ATH_f = ATHmdct(gfp, freq);\n                /* freq in kHz */\n                ATH_psfb12[sfb] = Math.min(ATH_psfb12[sfb], ATH_f);\n            }\n            /* not sure about the following */\n            ATH_psfb12[sfb] *= (gfc.scalefac_band.s[13] - gfc.scalefac_band.s[12]);\n        }\n\n        /*\n         * no-ATH mode: reduce ATH to -200 dB\n         */\n        if (gfp.noATH) {\n            for (var sfb = 0; sfb < Encoder.SBMAX_l; sfb++) {\n                ATH_l[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB21; sfb++) {\n                ATH_psfb21[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.SBMAX_s; sfb++) {\n                ATH_s[sfb] = 1E-20;\n            }\n            for (var sfb = 0; sfb < Encoder.PSFB12; sfb++) {\n                ATH_psfb12[sfb] = 1E-20;\n            }\n        }\n\n        /*\n         * work in progress, don't rely on it too much\n         */\n        gfc.ATH.floor = 10. * Math.log10(ATHmdct(gfp, -1.));\n    }\n\n    /**\n     * initialization for iteration_loop\n     */\n    this.iteration_init = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n        var i;\n\n        if (gfc.iteration_init_init == 0) {\n            gfc.iteration_init_init = 1;\n\n            l3_side.main_data_begin = 0;\n            compute_ath(gfp);\n\n            pow43[0] = 0.0;\n            for (i = 1; i < PRECALC_SIZE; i++)\n                pow43[i] = Math.pow(i, 4.0 / 3.0);\n\n            for (i = 0; i < PRECALC_SIZE - 1; i++)\n                adj43[i] = ((i + 1) - Math.pow(\n                    0.5 * (pow43[i] + pow43[i + 1]), 0.75));\n            adj43[i] = 0.5;\n\n            for (i = 0; i < Q_MAX; i++)\n                ipow20[i] = Math.pow(2.0, (i - 210) * -0.1875);\n            for (i = 0; i <= Q_MAX + Q_MAX2; i++)\n                pow20[i] = Math.pow(2.0, (i - 210 - Q_MAX2) * 0.25);\n\n            tak.huffman_init(gfc);\n\n            {\n                var bass, alto, treble, sfb21;\n\n                i = (gfp.exp_nspsytune >> 2) & 63;\n                if (i >= 32)\n                    i -= 64;\n                bass = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 8) & 63;\n                if (i >= 32)\n                    i -= 64;\n                alto = Math.pow(10, i / 4.0 / 10.0);\n\n                i = (gfp.exp_nspsytune >> 14) & 63;\n                if (i >= 32)\n                    i -= 64;\n                treble = Math.pow(10, i / 4.0 / 10.0);\n\n                /*\n                 * to be compatible with Naoki's original code, the next 6 bits\n                 * define only the amount of changing treble for sfb21\n                 */\n                i = (gfp.exp_nspsytune >> 20) & 63;\n                if (i >= 32)\n                    i -= 64;\n                sfb21 = treble * Math.pow(10, i / 4.0 / 10.0);\n                for (i = 0; i < Encoder.SBMAX_l; i++) {\n                    var f;\n                    if (i <= 6)\n                        f = bass;\n                    else if (i <= 13)\n                        f = alto;\n                    else if (i <= 20)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.longfact[i] = f;\n                }\n                for (i = 0; i < Encoder.SBMAX_s; i++) {\n                    var f;\n                    if (i <= 5)\n                        f = bass;\n                    else if (i <= 10)\n                        f = alto;\n                    else if (i <= 11)\n                        f = treble;\n                    else\n                        f = sfb21;\n\n                    gfc.nsPsy.shortfact[i] = f;\n                }\n            }\n        }\n    }\n\n    /**\n     * allocate bits among 2 channels based on PE<BR>\n     * mt 6/99<BR>\n     * bugfixes rh 8/01: often allocated more than the allowed 4095 bits\n     */\n    this.on_pe = function (gfp, pe,\n                           targ_bits, mean_bits, gr, cbr) {\n        var gfc = gfp.internal_flags;\n        var tbits = 0, bits;\n        var add_bits = new_int(2);\n        var ch;\n\n        /* allocate targ_bits for granule */\n        var mb = new MeanBits(tbits);\n        var extra_bits = rv.ResvMaxBits(gfp, mean_bits, mb, cbr);\n        tbits = mb.bits;\n        /* maximum allowed bits for this granule */\n        var max_bits = tbits + extra_bits;\n        if (max_bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            // hard limit per granule\n            max_bits = LameInternalFlags.MAX_BITS_PER_GRANULE;\n        }\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            /******************************************************************\n             * allocate bits for each channel\n             ******************************************************************/\n            targ_bits[ch] = Math.min(LameInternalFlags.MAX_BITS_PER_CHANNEL,\n                tbits / gfc.channels_out);\n\n            add_bits[ch] = 0 | (targ_bits[ch] * pe[gr][ch] / 700.0 - targ_bits[ch]);\n\n            /* at most increase bits by 1.5*average */\n            if (add_bits[ch] > mean_bits * 3 / 4)\n                add_bits[ch] = mean_bits * 3 / 4;\n            if (add_bits[ch] < 0)\n                add_bits[ch] = 0;\n\n            if (add_bits[ch] + targ_bits[ch] > LameInternalFlags.MAX_BITS_PER_CHANNEL)\n                add_bits[ch] = Math.max(0,\n                    LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[ch]);\n\n            bits += add_bits[ch];\n        }\n        if (bits > extra_bits) {\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                add_bits[ch] = extra_bits * add_bits[ch] / bits;\n            }\n        }\n\n        for (ch = 0; ch < gfc.channels_out; ++ch) {\n            targ_bits[ch] += add_bits[ch];\n            extra_bits -= add_bits[ch];\n        }\n\n        for (bits = 0, ch = 0; ch < gfc.channels_out; ++ch) {\n            bits += targ_bits[ch];\n        }\n        if (bits > LameInternalFlags.MAX_BITS_PER_GRANULE) {\n            var sum = 0;\n            for (ch = 0; ch < gfc.channels_out; ++ch) {\n                targ_bits[ch] *= LameInternalFlags.MAX_BITS_PER_GRANULE;\n                targ_bits[ch] /= bits;\n                sum += targ_bits[ch];\n            }\n            assert(sum <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        }\n\n        return max_bits;\n    }\n\n    this.reduce_side = function (targ_bits, ms_ener_ratio, mean_bits, max_bits) {\n        assert(max_bits <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n\n        /*\n         * ms_ener_ratio = 0: allocate 66/33 mid/side fac=.33 ms_ener_ratio =.5:\n         * allocate 50/50 mid/side fac= 0\n         */\n        /* 75/25 split is fac=.5 */\n        var fac = .33 * (.5 - ms_ener_ratio) / .5;\n        if (fac < 0)\n            fac = 0;\n        if (fac > .5)\n            fac = .5;\n\n        /* number of bits to move from side channel to mid channel */\n        /* move_bits = fac*targ_bits[1]; */\n        var move_bits = 0 | (fac * .5 * (targ_bits[0] + targ_bits[1]));\n\n        if (move_bits > LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0]) {\n            move_bits = LameInternalFlags.MAX_BITS_PER_CHANNEL - targ_bits[0];\n        }\n        if (move_bits < 0)\n            move_bits = 0;\n\n        if (targ_bits[1] >= 125) {\n            /* dont reduce side channel below 125 bits */\n            if (targ_bits[1] - move_bits > 125) {\n\n                /* if mid channel already has 2x more than average, dont bother */\n                /* mean_bits = bits per granule (for both channels) */\n                if (targ_bits[0] < mean_bits)\n                    targ_bits[0] += move_bits;\n                targ_bits[1] -= move_bits;\n            } else {\n                targ_bits[0] += targ_bits[1] - 125;\n                targ_bits[1] = 125;\n            }\n        }\n\n        move_bits = targ_bits[0] + targ_bits[1];\n        if (move_bits > max_bits) {\n            targ_bits[0] = (max_bits * targ_bits[0]) / move_bits;\n            targ_bits[1] = (max_bits * targ_bits[1]) / move_bits;\n        }\n        assert(targ_bits[0] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n        assert(targ_bits[0] + targ_bits[1] <= LameInternalFlags.MAX_BITS_PER_GRANULE);\n    };\n\n    /**\n     *  Robert Hegemann 2001-04-27:\n     *  this adjusts the ATH, keeping the original noise floor\n     *  affects the higher frequencies more than the lower ones\n     */\n    this.athAdjust = function (a, x, athFloor) {\n        /*\n         * work in progress\n         */\n        var o = 90.30873362;\n        var p = 94.82444863;\n        var u = Util.FAST_LOG10_X(x, 10.0);\n        var v = a * a;\n        var w = 0.0;\n        u -= athFloor;\n        /* undo scaling */\n        if (v > 1E-20)\n            w = 1. + Util.FAST_LOG10_X(v, 10.0 / o);\n        if (w < 0)\n            w = 0.;\n        u *= w;\n        u += athFloor + o - p;\n        /* redo scaling */\n\n        return Math.pow(10., 0.1 * u);\n    };\n\n    /**\n     * Calculate the allowed distortion for each scalefactor band, as determined\n     * by the psychoacoustic model. xmin(sb) = ratio(sb) * en(sb) / bw(sb)\n     *\n     * returns number of sfb's with energy > ATH\n     */\n    this.calc_xmin = function (gfp, ratio, cod_info, pxmin) {\n        var pxminPos = 0;\n        var gfc = gfp.internal_flags;\n        var gsfb, j = 0, ath_over = 0;\n        var ATH = gfc.ATH;\n        var xr = cod_info.xr;\n        var enable_athaa_fix = (gfp.VBR == VbrMode.vbr_mtrh) ? 1 : 0;\n        var masking_lower = gfc.masking_lower;\n\n        if (gfp.VBR == VbrMode.vbr_mtrh || gfp.VBR == VbrMode.vbr_mt) {\n            /* was already done in PSY-Model */\n            masking_lower = 1.0;\n        }\n\n        for (gsfb = 0; gsfb < cod_info.psy_lmax; gsfb++) {\n            var en0, xmin;\n            var rh1, rh2;\n            var width, l;\n\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                xmin = athAdjust(ATH.adjust, ATH.l[gsfb], ATH.floor);\n            else\n                xmin = ATH.adjust * ATH.l[gsfb];\n\n            width = cod_info.width[gsfb];\n            rh1 = xmin / width;\n            rh2 = DBL_EPSILON;\n            l = width >> 1;\n            en0 = 0.0;\n            do {\n                var xa, xb;\n                xa = xr[j] * xr[j];\n                en0 += xa;\n                rh2 += (xa < rh1) ? xa : rh1;\n                j++;\n                xb = xr[j] * xr[j];\n                en0 += xb;\n                rh2 += (xb < rh1) ? xb : rh1;\n                j++;\n            } while (--l > 0);\n            if (en0 > xmin)\n                ath_over++;\n\n            if (gsfb == Encoder.SBPSY_l) {\n                var x = xmin * gfc.nsPsy.longfact[gsfb];\n                if (rh2 < x) {\n                    rh2 = x;\n                }\n            }\n            if (enable_athaa_fix != 0) {\n                xmin = rh2;\n            }\n            if (!gfp.ATHonly) {\n                var e = ratio.en.l[gsfb];\n                if (e > 0.0) {\n                    var x;\n                    x = en0 * ratio.thm.l[gsfb] * masking_lower / e;\n                    if (enable_athaa_fix != 0)\n                        x *= gfc.nsPsy.longfact[gsfb];\n                    if (xmin < x)\n                        xmin = x;\n                }\n            }\n            if (enable_athaa_fix != 0)\n                pxmin[pxminPos++] = xmin;\n            else\n                pxmin[pxminPos++] = xmin * gfc.nsPsy.longfact[gsfb];\n        }\n        /* end of long block loop */\n\n        /* use this function to determine the highest non-zero coeff */\n        var max_nonzero = 575;\n        if (cod_info.block_type != Encoder.SHORT_TYPE) {\n            // NORM, START or STOP type, but not SHORT\n            var k = 576;\n            while (k-- != 0 && BitStream.EQ(xr[k], 0)) {\n                max_nonzero = k;\n            }\n        }\n        cod_info.max_nonzero_coeff = max_nonzero;\n\n        for (var sfb = cod_info.sfb_smin; gsfb < cod_info.psymax; sfb++, gsfb += 3) {\n            var width, b;\n            var tmpATH;\n            if (gfp.VBR == VbrMode.vbr_rh || gfp.VBR == VbrMode.vbr_mtrh)\n                tmpATH = athAdjust(ATH.adjust, ATH.s[sfb], ATH.floor);\n            else\n                tmpATH = ATH.adjust * ATH.s[sfb];\n\n            width = cod_info.width[gsfb];\n            for (b = 0; b < 3; b++) {\n                var en0 = 0.0, xmin;\n                var rh1, rh2;\n                var l = width >> 1;\n\n                rh1 = tmpATH / width;\n                rh2 = DBL_EPSILON;\n                do {\n                    var xa, xb;\n                    xa = xr[j] * xr[j];\n                    en0 += xa;\n                    rh2 += (xa < rh1) ? xa : rh1;\n                    j++;\n                    xb = xr[j] * xr[j];\n                    en0 += xb;\n                    rh2 += (xb < rh1) ? xb : rh1;\n                    j++;\n                } while (--l > 0);\n                if (en0 > tmpATH)\n                    ath_over++;\n                if (sfb == Encoder.SBPSY_s) {\n                    var x = tmpATH * gfc.nsPsy.shortfact[sfb];\n                    if (rh2 < x) {\n                        rh2 = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    xmin = rh2;\n                else\n                    xmin = tmpATH;\n\n                if (!gfp.ATHonly && !gfp.ATHshort) {\n                    var e = ratio.en.s[sfb][b];\n                    if (e > 0.0) {\n                        var x;\n                        x = en0 * ratio.thm.s[sfb][b] * masking_lower / e;\n                        if (enable_athaa_fix != 0)\n                            x *= gfc.nsPsy.shortfact[sfb];\n                        if (xmin < x)\n                            xmin = x;\n                    }\n                }\n                if (enable_athaa_fix != 0)\n                    pxmin[pxminPos++] = xmin;\n                else\n                    pxmin[pxminPos++] = xmin * gfc.nsPsy.shortfact[sfb];\n            }\n            /* b */\n            if (gfp.useTemporal) {\n                if (pxmin[pxminPos - 3] > pxmin[pxminPos - 3 + 1])\n                    pxmin[pxminPos - 3 + 1] += (pxmin[pxminPos - 3] - pxmin[pxminPos - 3 + 1])\n                        * gfc.decay;\n                if (pxmin[pxminPos - 3 + 1] > pxmin[pxminPos - 3 + 2])\n                    pxmin[pxminPos - 3 + 2] += (pxmin[pxminPos - 3 + 1] - pxmin[pxminPos - 3 + 2])\n                        * gfc.decay;\n            }\n        }\n        /* end of short block sfb loop */\n\n        return ath_over;\n    };\n\n    function StartLine(j) {\n        this.s = j;\n    }\n\n    this.calc_noise_core = function (cod_info, startline, l, step) {\n        var noise = 0;\n        var j = startline.s;\n        var ix = cod_info.l3_enc;\n\n        if (j > cod_info.count1) {\n            while ((l--) != 0) {\n                var temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n                temp = cod_info.xr[j];\n                j++;\n                noise += temp * temp;\n            }\n        } else if (j > cod_info.big_values) {\n            var ix01 = new_float(2);\n            ix01[0] = 0;\n            ix01[1] = step;\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - ix01[ix[j]];\n                j++;\n                noise += temp * temp;\n            }\n        } else {\n            while ((l--) != 0) {\n                var temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n                temp = Math.abs(cod_info.xr[j]) - pow43[ix[j]] * step;\n                j++;\n                noise += temp * temp;\n            }\n        }\n\n        startline.s = j;\n        return noise;\n    }\n\n    /**\n     * <PRE>\n     * -oo dB  =>  -1.00\n     * - 6 dB  =>  -0.97\n     * - 3 dB  =>  -0.80\n     * - 2 dB  =>  -0.64\n     * - 1 dB  =>  -0.38\n     *   0 dB  =>   0.00\n     * + 1 dB  =>  +0.49\n     * + 2 dB  =>  +1.06\n     * + 3 dB  =>  +1.68\n     * + 6 dB  =>  +3.69\n     * +10 dB  =>  +6.45\n     * </PRE>\n     */\n    this.calc_noise = function (cod_info, l3_xmin, distort, res, prev_noise) {\n        var distortPos = 0;\n        var l3_xminPos = 0;\n        var sfb, l, over = 0;\n        var over_noise_db = 0;\n        /* 0 dB relative to masking */\n        var tot_noise_db = 0;\n        /* -200 dB relative to masking */\n        var max_noise = -20.0;\n        var j = 0;\n        var scalefac = cod_info.scalefac;\n        var scalefacPos = 0;\n\n        res.over_SSD = 0;\n\n        for (sfb = 0; sfb < cod_info.psymax; sfb++) {\n            var s = cod_info.global_gain\n                - (((scalefac[scalefacPos++]) + (cod_info.preflag != 0 ? pretab[sfb]\n                    : 0)) << (cod_info.scalefac_scale + 1))\n                - cod_info.subblock_gain[cod_info.window[sfb]] * 8;\n            var noise = 0.0;\n\n            if (prev_noise != null && (prev_noise.step[sfb] == s)) {\n\n                /* use previously computed values */\n                noise = prev_noise.noise[sfb];\n                j += cod_info.width[sfb];\n                distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                noise = prev_noise.noise_log[sfb];\n\n            } else {\n                var step = POW20(s);\n                l = cod_info.width[sfb] >> 1;\n\n                if ((j + cod_info.width[sfb]) > cod_info.max_nonzero_coeff) {\n                    var usefullsize;\n                    usefullsize = cod_info.max_nonzero_coeff - j + 1;\n\n                    if (usefullsize > 0)\n                        l = usefullsize >> 1;\n                    else\n                        l = 0;\n                }\n\n                var sl = new StartLine(j);\n                noise = this.calc_noise_core(cod_info, sl, l, step);\n                j = sl.s;\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.step[sfb] = s;\n                    prev_noise.noise[sfb] = noise;\n                }\n\n                noise = distort[distortPos++] = noise / l3_xmin[l3_xminPos++];\n\n                /* multiplying here is adding in dB, but can overflow */\n                noise = Util.FAST_LOG10(Math.max(noise, 1E-20));\n\n                if (prev_noise != null) {\n                    /* save noise values */\n                    prev_noise.noise_log[sfb] = noise;\n                }\n            }\n\n            if (prev_noise != null) {\n                /* save noise values */\n                prev_noise.global_gain = cod_info.global_gain;\n            }\n\n            tot_noise_db += noise;\n\n            if (noise > 0.0) {\n                var tmp;\n\n                tmp = Math.max(0 | (noise * 10 + .5), 1);\n                res.over_SSD += tmp * tmp;\n\n                over++;\n                /* multiplying here is adding in dB -but can overflow */\n                /* over_noise *= noise; */\n                over_noise_db += noise;\n            }\n            max_noise = Math.max(max_noise, noise);\n\n        }\n\n        res.over_count = over;\n        res.tot_noise = tot_noise_db;\n        res.over_noise = over_noise_db;\n        res.max_noise = max_noise;\n\n        return over;\n    }\n\n    /**\n     * updates plotting data\n     *\n     * Mark Taylor 2000-??-??\n     *\n     * Robert Hegemann: moved noise/distortion calc into it\n     */\n    this.set_pinfo = function (gfp, cod_info, ratio, gr, ch) {\n        var gfc = gfp.internal_flags;\n        var sfb, sfb2;\n        var l;\n        var en0, en1;\n        var ifqstep = (cod_info.scalefac_scale == 0) ? .5 : 1.0;\n        var scalefac = cod_info.scalefac;\n\n        var l3_xmin = new_float(L3Side.SFBMAX);\n        var xfsf = new_float(L3Side.SFBMAX);\n        var noise = new CalcNoiseResult();\n\n        calc_xmin(gfp, ratio, cod_info, l3_xmin);\n        calc_noise(cod_info, l3_xmin, xfsf, noise, null);\n\n        var j = 0;\n        sfb2 = cod_info.sfb_lmax;\n        if (cod_info.block_type != Encoder.SHORT_TYPE\n            && 0 == cod_info.mixed_block_flag)\n            sfb2 = 22;\n        for (sfb = 0; sfb < sfb2; sfb++) {\n            var start = gfc.scalefac_band.l[sfb];\n            var end = gfc.scalefac_band.l[sfb + 1];\n            var bw = end - start;\n            for (en0 = 0.0; j < end; j++)\n                en0 += cod_info.xr[j] * cod_info.xr[j];\n            en0 /= bw;\n            /* convert to MDCT units */\n            /* scaling so it shows up on FFT plot */\n            en1 = 1e15;\n            gfc.pinfo.en[gr][ch][sfb] = en1 * en0;\n            gfc.pinfo.xfsf[gr][ch][sfb] = en1 * l3_xmin[sfb] * xfsf[sfb] / bw;\n\n            if (ratio.en.l[sfb] > 0 && !gfp.ATHonly)\n                en0 = en0 / ratio.en.l[sfb];\n            else\n                en0 = 0.0;\n\n            gfc.pinfo.thr[gr][ch][sfb] = en1\n                * Math.max(en0 * ratio.thm.l[sfb], gfc.ATH.l[sfb]);\n\n            /* there is no scalefactor bands >= SBPSY_l */\n            gfc.pinfo.LAMEsfb[gr][ch][sfb] = 0;\n            if (cod_info.preflag != 0 && sfb >= 11)\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] = -ifqstep * pretab[sfb];\n\n            if (sfb < Encoder.SBPSY_l) {\n                /* scfsi should be decoded by caller side */\n                assert(scalefac[sfb] >= 0);\n                gfc.pinfo.LAMEsfb[gr][ch][sfb] -= ifqstep * scalefac[sfb];\n            }\n        }\n        /* for sfb */\n\n        if (cod_info.block_type == Encoder.SHORT_TYPE) {\n            sfb2 = sfb;\n            for (sfb = cod_info.sfb_smin; sfb < Encoder.SBMAX_s; sfb++) {\n                var start = gfc.scalefac_band.s[sfb];\n                var end = gfc.scalefac_band.s[sfb + 1];\n                var bw = end - start;\n                for (var i = 0; i < 3; i++) {\n                    for (en0 = 0.0, l = start; l < end; l++) {\n                        en0 += cod_info.xr[j] * cod_info.xr[j];\n                        j++;\n                    }\n                    en0 = Math.max(en0 / bw, 1e-20);\n                    /* convert to MDCT units */\n                    /* scaling so it shows up on FFT plot */\n                    en1 = 1e15;\n\n                    gfc.pinfo.en_s[gr][ch][3 * sfb + i] = en1 * en0;\n                    gfc.pinfo.xfsf_s[gr][ch][3 * sfb + i] = en1 * l3_xmin[sfb2]\n                        * xfsf[sfb2] / bw;\n                    if (ratio.en.s[sfb][i] > 0)\n                        en0 = en0 / ratio.en.s[sfb][i];\n                    else\n                        en0 = 0.0;\n                    if (gfp.ATHonly || gfp.ATHshort)\n                        en0 = 0;\n\n                    gfc.pinfo.thr_s[gr][ch][3 * sfb + i] = en1\n                        * Math.max(en0 * ratio.thm.s[sfb][i],\n                            gfc.ATH.s[sfb]);\n\n                    /* there is no scalefactor bands >= SBPSY_s */\n                    gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] = -2.0\n                        * cod_info.subblock_gain[i];\n                    if (sfb < Encoder.SBPSY_s) {\n                        gfc.pinfo.LAMEsfb_s[gr][ch][3 * sfb + i] -= ifqstep\n                            * scalefac[sfb2];\n                    }\n                    sfb2++;\n                }\n            }\n        }\n        /* block type short */\n        gfc.pinfo.LAMEqss[gr][ch] = cod_info.global_gain;\n        gfc.pinfo.LAMEmainbits[gr][ch] = cod_info.part2_3_length\n            + cod_info.part2_length;\n        gfc.pinfo.LAMEsfbits[gr][ch] = cod_info.part2_length;\n\n        gfc.pinfo.over[gr][ch] = noise.over_count;\n        gfc.pinfo.max_noise[gr][ch] = noise.max_noise * 10.0;\n        gfc.pinfo.over_noise[gr][ch] = noise.over_noise * 10.0;\n        gfc.pinfo.tot_noise[gr][ch] = noise.tot_noise * 10.0;\n        gfc.pinfo.over_SSD[gr][ch] = noise.over_SSD;\n    }\n\n    /**\n     * updates plotting data for a whole frame\n     *\n     * Robert Hegemann 2000-10-21\n     */\n    function set_frame_pinfo(gfp, ratio) {\n        var gfc = gfp.internal_flags;\n\n        gfc.masking_lower = 1.0;\n\n        /*\n         * for every granule and channel patch l3_enc and set info\n         */\n        for (var gr = 0; gr < gfc.mode_gr; gr++) {\n            for (var ch = 0; ch < gfc.channels_out; ch++) {\n                var cod_info = gfc.l3_side.tt[gr][ch];\n                var scalefac_sav = new_int(L3Side.SFBMAX);\n                System.arraycopy(cod_info.scalefac, 0, scalefac_sav, 0,\n                    scalefac_sav.length);\n\n                /*\n                 * reconstruct the scalefactors in case SCFSI was used\n                 */\n                if (gr == 1) {\n                    var sfb;\n                    for (sfb = 0; sfb < cod_info.sfb_lmax; sfb++) {\n                        if (cod_info.scalefac[sfb] < 0) /* scfsi */\n                            cod_info.scalefac[sfb] = gfc.l3_side.tt[0][ch].scalefac[sfb];\n                    }\n                }\n\n                set_pinfo(gfp, cod_info, ratio[gr][ch], gr, ch);\n                System.arraycopy(scalefac_sav, 0, cod_info.scalefac, 0,\n                    scalefac_sav.length);\n            }\n            /* for ch */\n        }\n        /* for gr */\n    }\n\n}\n\nmodule.exports = QuantizePVT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/QuantizePVT.js\n// module id = mlh9\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar MeanBits = require('./MeanBits.js');\nvar Encoder = require('./Encoder.js');\nvar L3Side = require('./L3Side.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nfunction CBRNewIterationLoop(_quantize)  {\n    var quantize = _quantize;\n    this.quantize = quantize;\n\tthis.iteration_loop = function(gfp, pe, ms_ener_ratio, ratio) {\n\t\tvar gfc = gfp.internal_flags;\n        var l3_xmin = new_float(L3Side.SFBMAX);\n\t\tvar xrpow = new_float(576);\n\t\tvar targ_bits = new_int(2);\n\t\tvar mean_bits = 0, max_bits;\n\t\tvar l3_side = gfc.l3_side;\n\n\t\tvar mb = new MeanBits(mean_bits);\n\t\tthis.quantize.rv.ResvFrameBegin(gfp, mb);\n\t\tmean_bits = mb.bits;\n\n\t\t/* quantize! */\n\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\n\t\t\t/*\n\t\t\t * calculate needed bits\n\t\t\t */\n\t\t\tmax_bits = this.quantize.qupvt.on_pe(gfp, pe, targ_bits, mean_bits,\n\t\t\t\t\tgr, gr);\n\n\t\t\tif (gfc.mode_ext == Encoder.MPG_MD_MS_LR) {\n\t\t\t\tthis.quantize.ms_convert(gfc.l3_side, gr);\n\t\t\t\tthis.quantize.qupvt.reduce_side(targ_bits, ms_ener_ratio[gr],\n\t\t\t\t\t\tmean_bits, max_bits);\n\t\t\t}\n\n\t\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\t\tvar adjust, masking_lower_db;\n\t\t\t\tvar cod_info = l3_side.tt[gr][ch];\n\n\t\t\t\tif (cod_info.block_type != Encoder.SHORT_TYPE) {\n\t\t\t\t\t// NORM, START or STOP type\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust - adjust;\n\t\t\t\t} else {\n\t\t\t\t\tadjust = 0;\n\t\t\t\t\tmasking_lower_db = gfc.PSY.mask_adjust_short - adjust;\n\t\t\t\t}\n\t\t\t\tgfc.masking_lower =  Math.pow(10.0,\n\t\t\t\t\t\tmasking_lower_db * 0.1);\n\n\t\t\t\t/*\n\t\t\t\t * init_outer_loop sets up cod_info, scalefac and xrpow\n\t\t\t\t */\n\t\t\t\tthis.quantize.init_outer_loop(gfc, cod_info);\n\t\t\t\tif (this.quantize.init_xrpow(gfc, cod_info, xrpow)) {\n\t\t\t\t\t/*\n\t\t\t\t\t * xr contains energy we will have to encode calculate the\n\t\t\t\t\t * masking abilities find some good quantization in\n\t\t\t\t\t * outer_loop\n\t\t\t\t\t */\n\t\t\t\t\tthis.quantize.qupvt.calc_xmin(gfp, ratio[gr][ch], cod_info,\n\t\t\t\t\t\t\tl3_xmin);\n\t\t\t\t\tthis.quantize.outer_loop(gfp, cod_info, l3_xmin, xrpow, ch,\n\t\t\t\t\t\t\ttarg_bits[ch]);\n\t\t\t\t}\n\n\t\t\t\tthis.quantize.iteration_finish_one(gfc, gr, ch);\n\t\t\t\tassert (cod_info.part2_3_length <= LameInternalFlags.MAX_BITS_PER_CHANNEL);\n\t\t\t\tassert (cod_info.part2_3_length <= targ_bits[ch]);\n\t\t\t} /* for ch */\n\t\t} /* for gr */\n\n\t\tthis.quantize.rv.ResvFrameEnd(gfc, mean_bits);\n\t}\n}\nmodule.exports = CBRNewIterationLoop;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/CBRNewIterationLoop.js\n// module id = mnA4\n// module chunks = 0","module.exports = require('./lib/axios');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/index.js\n// module id = mtWM\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nLame = require('./Lame.js');\nPresets = require('./Presets.js');\nGainAnalysis = require('./GainAnalysis.js');\nQuantizePVT = require('./QuantizePVT.js');\nQuantize = require('./Quantize.js');\nTakehiro = require('./Takehiro.js');\nReservoir = require('./Reservoir.js');\nMPEGMode = require('./MPEGMode.js');\nBitStream = require('./BitStream.js');\nvar Encoder = require('./Encoder.js');\nvar Version = require('./Version.js');\nvar VBRTag = require('./VBRTag.js');\n\nfunction GetAudio() {\n    var parse;\n    var mpg;\n\n    this.setModules = function (parse2, mpg2) {\n        parse = parse2;\n        mpg = mpg2;\n    }\n}\n\n\nfunction Parse() {\n    var ver;\n    var id3;\n    var pre;\n\n    this.setModules = function (ver2, id32, pre2) {\n        ver = ver2;\n        id3 = id32;\n        pre = pre2;\n    }\n}\n\nfunction MPGLib() {\n}\n\nfunction ID3Tag() {\n    var bits;\n    var ver;\n\n    this.setModules = function (_bits, _ver) {\n        bits = _bits;\n        ver = _ver;\n    }\n}\n\nfunction Mp3Encoder(channels, samplerate, kbps) {\n    if (arguments.length != 3) {\n        console.error('WARN: Mp3Encoder(channels, samplerate, kbps) not specified');\n        channels = 1;\n        samplerate = 44100;\n        kbps = 128;\n    }\n    var lame = new Lame();\n    var gaud = new GetAudio();\n    var ga = new GainAnalysis();\n    var bs = new BitStream();\n    var p = new Presets();\n    var qupvt = new QuantizePVT();\n    var qu = new Quantize();\n    var vbr = new VBRTag();\n    var ver = new Version();\n    var id3 = new ID3Tag();\n    var rv = new Reservoir();\n    var tak = new Takehiro();\n    var parse = new Parse();\n    var mpg = new MPGLib();\n\n    lame.setModules(ga, bs, p, qupvt, qu, vbr, ver, id3, mpg);\n    bs.setModules(ga, mpg, ver, vbr);\n    id3.setModules(bs, ver);\n    p.setModules(lame);\n    qu.setModules(bs, rv, qupvt, tak);\n    qupvt.setModules(tak, rv, lame.enc.psy);\n    rv.setModules(bs);\n    tak.setModules(qupvt);\n    vbr.setModules(lame, bs, ver);\n    gaud.setModules(parse, mpg);\n    parse.setModules(ver, id3, p);\n\n    var gfp = lame.lame_init();\n\n    gfp.num_channels = channels;\n    gfp.in_samplerate = samplerate;\n    gfp.brate = kbps;\n    gfp.mode = MPEGMode.STEREO;\n    gfp.quality = 3;\n    gfp.bWriteVbrTag = false;\n    gfp.disable_reservoir = true;\n    gfp.write_id3tag_automatic = false;\n\n    var retcode = lame.lame_init_params(gfp);\n    assert(0 == retcode);\n    var maxSamples = 1152;\n    var mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n    var mp3buf = new_byte(mp3buf_size);\n\n    this.encodeBuffer = function (left, right) {\n        if (channels == 1) {\n            right = left;\n        }\n        assert(left.length == right.length);\n        if (left.length > maxSamples) {\n            maxSamples = left.length;\n            mp3buf_size = 0 | (1.25 * maxSamples + 7200);\n            mp3buf = new_byte(mp3buf_size);\n        }\n\n        var _sz = lame.lame_encode_buffer(gfp, left, right, left.length, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n\n    this.flush = function () {\n        var _sz = lame.lame_encode_flush(gfp, mp3buf, 0, mp3buf_size);\n        return new Int8Array(mp3buf.subarray(0, _sz));\n    };\n}\n\nfunction WavHeader() {\n    this.dataOffset = 0;\n    this.dataLen = 0;\n    this.channels = 0;\n    this.sampleRate = 0;\n}\n\nfunction fourccToInt(fourcc) {\n    return fourcc.charCodeAt(0) << 24 | fourcc.charCodeAt(1) << 16 | fourcc.charCodeAt(2) << 8 | fourcc.charCodeAt(3);\n}\n\nWavHeader.RIFF = fourccToInt(\"RIFF\");\nWavHeader.WAVE = fourccToInt(\"WAVE\");\nWavHeader.fmt_ = fourccToInt(\"fmt \");\nWavHeader.data = fourccToInt(\"data\");\n\nWavHeader.readHeader = function (dataView) {\n    var w = new WavHeader();\n\n    var header = dataView.getUint32(0, false);\n    if (WavHeader.RIFF != header) {\n        return;\n    }\n    var fileLen = dataView.getUint32(4, true);\n    if (WavHeader.WAVE != dataView.getUint32(8, false)) {\n        return;\n    }\n    if (WavHeader.fmt_ != dataView.getUint32(12, false)) {\n        return;\n    }\n    var fmtLen = dataView.getUint32(16, true);\n    var pos = 16 + 4;\n    switch (fmtLen) {\n        case 16:\n        case 18:\n            w.channels = dataView.getUint16(pos + 2, true);\n            w.sampleRate = dataView.getUint32(pos + 4, true);\n            break;\n        default:\n            throw 'extended fmt chunk not implemented';\n    }\n    pos += fmtLen;\n    var data = WavHeader.data;\n    var len = 0;\n    while (data != header) {\n        header = dataView.getUint32(pos, false);\n        len = dataView.getUint32(pos + 4, true);\n        if (data == header) {\n            break;\n        }\n        pos += (len + 8);\n    }\n    w.dataLen = len;\n    w.dataOffset = pos + 8;\n    return w;\n};\n\nmodule.exports.Mp3Encoder = Mp3Encoder;\nmodule.exports.WavHeader = WavHeader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/index.js\n// module id = n0CH\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/parseHeaders.js\n// module id = oJlt\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Takehiro = require('./Takehiro.js');\nvar Tables = require('./Tables.js');\nvar Encoder = require('./Encoder.js');\nvar LameInternalFlags = require('./LameInternalFlags.js');\n\nBitStream.EQ = function (a, b) {\n    return (Math.abs(a) > Math.abs(b)) ? (Math.abs((a) - (b)) <= (Math\n        .abs(a) * 1e-6))\n        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));\n};\n\nBitStream.NEQ = function (a, b) {\n    return !BitStream.EQ(a, b);\n};\n\nfunction BitStream() {\n    var self = this;\n    var CRC16_POLYNOMIAL = 0x8005;\n\n    /*\n     * we work with ints, so when doing bit manipulation, we limit ourselves to\n     * MAX_LENGTH-2 just to be on the safe side\n     */\n    var MAX_LENGTH = 32;\n\n    //GainAnalysis ga;\n    //MPGLib mpg;\n    //Version ver;\n    //VBRTag vbr;\n    var ga = null;\n    var mpg = null;\n    var ver = null;\n    var vbr = null;\n\n    //public final void setModules(GainAnalysis ga, MPGLib mpg, Version ver,\n    //\tVBRTag vbr) {\n\n    this.setModules = function (_ga, _mpg, _ver, _vbr) {\n        ga = _ga;\n        mpg = _mpg;\n        ver = _ver;\n        vbr = _vbr;\n    };\n\n    /**\n     * Bit stream buffer.\n     */\n    //private byte[] buf;\n    var buf = null;\n    /**\n     * Bit counter of bit stream.\n     */\n    var totbit = 0;\n    /**\n     * Pointer to top byte in buffer.\n     */\n    var bufByteIdx = 0;\n    /**\n     * Pointer to top bit of top byte in buffer.\n     */\n    var bufBitIdx = 0;\n\n    /**\n     * compute bitsperframe and mean_bits for a layer III frame\n     */\n    this.getframebits = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var bit_rate;\n\n        /* get bitrate in kbps [?] */\n        if (gfc.bitrate_index != 0)\n            bit_rate = Tables.bitrate_table[gfp.version][gfc.bitrate_index];\n        else\n            bit_rate = gfp.brate;\n        assert(8 <= bit_rate && bit_rate <= 640);\n\n        /* main encoding routine toggles padding on and off */\n        /* one Layer3 Slot consists of 8 bits */\n        var bytes = 0 | (gfp.version + 1) * 72000 * bit_rate / gfp.out_samplerate + gfc.padding;\n        return 8 * bytes;\n    };\n\n    function putheader_bits(gfc) {\n        System.arraycopy(gfc.header[gfc.w_ptr].buf, 0, buf, bufByteIdx, gfc.sideinfo_len);\n        bufByteIdx += gfc.sideinfo_len;\n        totbit += gfc.sideinfo_len * 8;\n        gfc.w_ptr = (gfc.w_ptr + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n    }\n\n    /**\n     * write j bits into the bit stream\n     */\n    function putbits2(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                assert(gfc.header[gfc.w_ptr].write_timing >= totbit);\n                if (gfc.header[gfc.w_ptr].write_timing == totbit) {\n                    putheader_bits(gfc);\n                }\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * write j bits into the bit stream, ignoring frame headers\n     */\n    function putbits_noheaders(gfc, val, j) {\n        assert(j < MAX_LENGTH - 2);\n\n        while (j > 0) {\n            var k;\n            if (bufBitIdx == 0) {\n                bufBitIdx = 8;\n                bufByteIdx++;\n                assert(bufByteIdx < Lame.LAME_MAXMP3BUFFER);\n                buf[bufByteIdx] = 0;\n            }\n\n            k = Math.min(j, bufBitIdx);\n            j -= k;\n\n            bufBitIdx -= k;\n\n            assert(j < MAX_LENGTH);\n            /* 32 too large on 32 bit machines */\n            assert(bufBitIdx < MAX_LENGTH);\n\n            buf[bufByteIdx] |= ((val >> j) << bufBitIdx);\n            totbit += k;\n        }\n    }\n\n    /**\n     * Some combinations of bitrate, Fs, and stereo make it impossible to stuff\n     * out a frame using just main_data, due to the limited number of bits to\n     * indicate main_data_length. In these situations, we put stuffing bits into\n     * the ancillary data...\n     */\n    function drain_into_ancillary(gfp, remainingBits) {\n        var gfc = gfp.internal_flags;\n        var i;\n        assert(remainingBits >= 0);\n\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4c, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x41, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x4d, 8);\n            remainingBits -= 8;\n        }\n        if (remainingBits >= 8) {\n            putbits2(gfc, 0x45, 8);\n            remainingBits -= 8;\n        }\n\n        if (remainingBits >= 32) {\n            var version = ver.getLameShortVersion();\n            if (remainingBits >= 32)\n                for (i = 0; i < version.length && remainingBits >= 8; ++i) {\n                    remainingBits -= 8;\n                    putbits2(gfc, version.charAt(i), 8);\n                }\n        }\n\n        for (; remainingBits >= 1; remainingBits -= 1) {\n            putbits2(gfc, gfc.ancillary_flag, 1);\n            gfc.ancillary_flag ^= (!gfp.disable_reservoir ? 1 : 0);\n        }\n\n        assert(remainingBits == 0);\n\n    }\n\n    /**\n     * write N bits into the header\n     */\n    function writeheader(gfc, val, j) {\n        var ptr = gfc.header[gfc.h_ptr].ptr;\n\n        while (j > 0) {\n            var k = Math.min(j, 8 - (ptr & 7));\n            j -= k;\n            assert(j < MAX_LENGTH);\n            /* >> 32 too large for 32 bit machines */\n\n            gfc.header[gfc.h_ptr].buf[ptr >> 3] |= ((val >> j)) << (8 - (ptr & 7) - k);\n            ptr += k;\n        }\n        gfc.header[gfc.h_ptr].ptr = ptr;\n    }\n\n    function CRC_update(value, crc) {\n        value <<= 8;\n        for (var i = 0; i < 8; i++) {\n            value <<= 1;\n            crc <<= 1;\n\n            if ((((crc ^ value) & 0x10000) != 0))\n                crc ^= CRC16_POLYNOMIAL;\n        }\n        return crc;\n    }\n\n    this.CRC_writeheader = function (gfc, header) {\n        var crc = 0xffff;\n        /* (jo) init crc16 for error_protection */\n\n        crc = CRC_update(header[2] & 0xff, crc);\n        crc = CRC_update(header[3] & 0xff, crc);\n        for (var i = 6; i < gfc.sideinfo_len; i++) {\n            crc = CRC_update(header[i] & 0xff, crc);\n        }\n\n        header[4] = (byte)(crc >> 8);\n        header[5] = (byte)(crc & 255);\n    };\n\n    function encodeSideInfo2(gfp, bitsPerFrame) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var gr, ch;\n\n        l3_side = gfc.l3_side;\n        gfc.header[gfc.h_ptr].ptr = 0;\n        Arrays.fill(gfc.header[gfc.h_ptr].buf, 0, gfc.sideinfo_len, 0);\n        if (gfp.out_samplerate < 16000)\n            writeheader(gfc, 0xffe, 12);\n        else\n            writeheader(gfc, 0xfff, 12);\n        writeheader(gfc, (gfp.version), 1);\n        writeheader(gfc, 4 - 3, 2);\n        writeheader(gfc, (!gfp.error_protection ? 1 : 0), 1);\n        writeheader(gfc, (gfc.bitrate_index), 4);\n        writeheader(gfc, (gfc.samplerate_index), 2);\n        writeheader(gfc, (gfc.padding), 1);\n        writeheader(gfc, (gfp.extension), 1);\n        writeheader(gfc, (gfp.mode.ordinal()), 2);\n        writeheader(gfc, (gfc.mode_ext), 2);\n        writeheader(gfc, (gfp.copyright), 1);\n        writeheader(gfc, (gfp.original), 1);\n        writeheader(gfc, (gfp.emphasis), 2);\n        if (gfp.error_protection) {\n            writeheader(gfc, 0, 16);\n            /* dummy */\n        }\n\n        if (gfp.version == 1) {\n            /* MPEG1 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 9);\n\n            if (gfc.channels_out == 2)\n                writeheader(gfc, l3_side.private_bits, 3);\n            else\n                writeheader(gfc, l3_side.private_bits, 5);\n\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var band;\n                for (band = 0; band < 4; band++) {\n                    writeheader(gfc, l3_side.scfsi[ch][band], 1);\n                }\n            }\n\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                    writeheader(gfc, gi.big_values / 2, 9);\n                    writeheader(gfc, gi.global_gain, 8);\n                    writeheader(gfc, gi.scalefac_compress, 4);\n\n                    if (gi.block_type != Encoder.NORM_TYPE) {\n                        writeheader(gfc, 1, 1);\n                        /* window_switching_flag */\n                        writeheader(gfc, gi.block_type, 2);\n                        writeheader(gfc, gi.mixed_block_flag, 1);\n\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n\n                        writeheader(gfc, gi.subblock_gain[0], 3);\n                        writeheader(gfc, gi.subblock_gain[1], 3);\n                        writeheader(gfc, gi.subblock_gain[2], 3);\n                    } else {\n                        writeheader(gfc, 0, 1);\n                        /* window_switching_flag */\n                        if (gi.table_select[0] == 14)\n                            gi.table_select[0] = 16;\n                        writeheader(gfc, gi.table_select[0], 5);\n                        if (gi.table_select[1] == 14)\n                            gi.table_select[1] = 16;\n                        writeheader(gfc, gi.table_select[1], 5);\n                        if (gi.table_select[2] == 14)\n                            gi.table_select[2] = 16;\n                        writeheader(gfc, gi.table_select[2], 5);\n\n                        assert(0 <= gi.region0_count && gi.region0_count < 16);\n                        assert(0 <= gi.region1_count && gi.region1_count < 8);\n                        writeheader(gfc, gi.region0_count, 4);\n                        writeheader(gfc, gi.region1_count, 3);\n                    }\n                    writeheader(gfc, gi.preflag, 1);\n                    writeheader(gfc, gi.scalefac_scale, 1);\n                    writeheader(gfc, gi.count1table_select, 1);\n                }\n            }\n        } else {\n            /* MPEG2 */\n            assert(l3_side.main_data_begin >= 0);\n            writeheader(gfc, (l3_side.main_data_begin), 8);\n            writeheader(gfc, l3_side.private_bits, gfc.channels_out);\n\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                writeheader(gfc, gi.part2_3_length + gi.part2_length, 12);\n                writeheader(gfc, gi.big_values / 2, 9);\n                writeheader(gfc, gi.global_gain, 8);\n                writeheader(gfc, gi.scalefac_compress, 9);\n\n                if (gi.block_type != Encoder.NORM_TYPE) {\n                    writeheader(gfc, 1, 1);\n                    /* window_switching_flag */\n                    writeheader(gfc, gi.block_type, 2);\n                    writeheader(gfc, gi.mixed_block_flag, 1);\n\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n\n                    writeheader(gfc, gi.subblock_gain[0], 3);\n                    writeheader(gfc, gi.subblock_gain[1], 3);\n                    writeheader(gfc, gi.subblock_gain[2], 3);\n                } else {\n                    writeheader(gfc, 0, 1);\n                    /* window_switching_flag */\n                    if (gi.table_select[0] == 14)\n                        gi.table_select[0] = 16;\n                    writeheader(gfc, gi.table_select[0], 5);\n                    if (gi.table_select[1] == 14)\n                        gi.table_select[1] = 16;\n                    writeheader(gfc, gi.table_select[1], 5);\n                    if (gi.table_select[2] == 14)\n                        gi.table_select[2] = 16;\n                    writeheader(gfc, gi.table_select[2], 5);\n\n                    assert(0 <= gi.region0_count && gi.region0_count < 16);\n                    assert(0 <= gi.region1_count && gi.region1_count < 8);\n                    writeheader(gfc, gi.region0_count, 4);\n                    writeheader(gfc, gi.region1_count, 3);\n                }\n\n                writeheader(gfc, gi.scalefac_scale, 1);\n                writeheader(gfc, gi.count1table_select, 1);\n            }\n        }\n\n        if (gfp.error_protection) {\n            /* (jo) error_protection: add crc16 information to header */\n            CRC_writeheader(gfc, gfc.header[gfc.h_ptr].buf);\n        }\n\n        {\n            var old = gfc.h_ptr;\n            assert(gfc.header[old].ptr == gfc.sideinfo_len * 8);\n\n            gfc.h_ptr = (old + 1) & (LameInternalFlags.MAX_HEADER_BUF - 1);\n            gfc.header[gfc.h_ptr].write_timing = gfc.header[old].write_timing\n                + bitsPerFrame;\n\n            if (gfc.h_ptr == gfc.w_ptr) {\n                /* yikes! we are out of header buffer space */\n                System.err\n                    .println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n            }\n\n        }\n    }\n\n    function huffman_coder_count1(gfc, gi) {\n        /* Write count1 area */\n        var h = Tables.ht[gi.count1table_select + 32];\n        var i, bits = 0;\n\n        var ix = gi.big_values;\n        var xr = gi.big_values;\n        assert(gi.count1table_select < 2);\n\n        for (i = (gi.count1 - gi.big_values) / 4; i > 0; --i) {\n            var huffbits = 0;\n            var p = 0, v;\n\n            v = gi.l3_enc[ix + 0];\n            if (v != 0) {\n                p += 8;\n                if (gi.xr[xr + 0] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 1];\n            if (v != 0) {\n                p += 4;\n                huffbits *= 2;\n                if (gi.xr[xr + 1] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 2];\n            if (v != 0) {\n                p += 2;\n                huffbits *= 2;\n                if (gi.xr[xr + 2] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            v = gi.l3_enc[ix + 3];\n            if (v != 0) {\n                p++;\n                huffbits *= 2;\n                if (gi.xr[xr + 3] < 0)\n                    huffbits++;\n                assert(v <= 1);\n            }\n\n            ix += 4;\n            xr += 4;\n            putbits2(gfc, huffbits + h.table[p], h.hlen[p]);\n            bits += h.hlen[p];\n        }\n        return bits;\n    }\n\n    /**\n     * Implements the pseudocode of page 98 of the IS\n     */\n    function Huffmancode(gfc, tableindex, start, end, gi) {\n        var h = Tables.ht[tableindex];\n        var bits = 0;\n\n        assert(tableindex < 32);\n        if (0 == tableindex)\n            return bits;\n\n        for (var i = start; i < end; i += 2) {\n            var cbits = 0;\n            var xbits = 0;\n            var linbits = h.xlen;\n            var xlen = h.xlen;\n            var ext = 0;\n            var x1 = gi.l3_enc[i];\n            var x2 = gi.l3_enc[i + 1];\n\n            if (x1 != 0) {\n                if (gi.xr[i] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            if (tableindex > 15) {\n                /* use ESC-words */\n                if (x1 > 14) {\n                    var linbits_x1 = x1 - 15;\n                    assert(linbits_x1 <= h.linmax);\n                    ext |= linbits_x1 << 1;\n                    xbits = linbits;\n                    x1 = 15;\n                }\n\n                if (x2 > 14) {\n                    var linbits_x2 = x2 - 15;\n                    assert(linbits_x2 <= h.linmax);\n                    ext <<= linbits;\n                    ext |= linbits_x2;\n                    xbits += linbits;\n                    x2 = 15;\n                }\n                xlen = 16;\n            }\n\n            if (x2 != 0) {\n                ext <<= 1;\n                if (gi.xr[i + 1] < 0)\n                    ext++;\n                cbits--;\n            }\n\n            assert((x1 | x2) < 16);\n\n            x1 = x1 * xlen + x2;\n            xbits -= cbits;\n            cbits += h.hlen[x1];\n\n            assert(cbits <= MAX_LENGTH);\n            assert(xbits <= MAX_LENGTH);\n\n            putbits2(gfc, h.table[x1], cbits);\n            putbits2(gfc, ext, xbits);\n            bits += cbits + xbits;\n        }\n        return bits;\n    }\n\n    /**\n     * Note the discussion of huffmancodebits() on pages 28 and 29 of the IS, as\n     * well as the definitions of the side information on pages 26 and 27.\n     */\n    function ShortHuffmancodebits(gfc, gi) {\n        var region1Start = 3 * gfc.scalefac_band.s[3];\n        if (region1Start > gi.big_values)\n            region1Start = gi.big_values;\n\n        /* short blocks do not have a region2 */\n        var bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            gi.big_values, gi);\n        return bits;\n    }\n\n    function LongHuffmancodebits(gfc, gi) {\n        var bigvalues, bits;\n        var region1Start, region2Start;\n\n        bigvalues = gi.big_values;\n        assert(0 <= bigvalues && bigvalues <= 576);\n\n        var i = gi.region0_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region1Start = gfc.scalefac_band.l[i];\n        i += gi.region1_count + 1;\n        assert(0 <= i);\n        assert(i < gfc.scalefac_band.l.length);\n        region2Start = gfc.scalefac_band.l[i];\n\n        if (region1Start > bigvalues)\n            region1Start = bigvalues;\n\n        if (region2Start > bigvalues)\n            region2Start = bigvalues;\n\n        bits = Huffmancode(gfc, gi.table_select[0], 0, region1Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[1], region1Start,\n            region2Start, gi);\n        bits += Huffmancode(gfc, gi.table_select[2], region2Start, bigvalues,\n            gi);\n        return bits;\n    }\n\n    function writeMainData(gfp) {\n        var gr, ch, sfb, data_bits, tot_bits = 0;\n        var gfc = gfp.internal_flags;\n        var l3_side = gfc.l3_side;\n\n        if (gfp.version == 1) {\n            /* MPEG 1 */\n            for (gr = 0; gr < 2; gr++) {\n                for (ch = 0; ch < gfc.channels_out; ch++) {\n                    var gi = l3_side.tt[gr][ch];\n                    var slen1 = Takehiro.slen1_tab[gi.scalefac_compress];\n                    var slen2 = Takehiro.slen2_tab[gi.scalefac_compress];\n                    data_bits = 0;\n                    for (sfb = 0; sfb < gi.sfbdivide; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen1);\n                        data_bits += slen1;\n                    }\n                    for (; sfb < gi.sfbmax; sfb++) {\n                        if (gi.scalefac[sfb] == -1)\n                            continue;\n                        /* scfsi is used */\n                        putbits2(gfc, gi.scalefac[sfb], slen2);\n                        data_bits += slen2;\n                    }\n                    assert(data_bits == gi.part2_length);\n\n                    if (gi.block_type == Encoder.SHORT_TYPE) {\n                        data_bits += ShortHuffmancodebits(gfc, gi);\n                    } else {\n                        data_bits += LongHuffmancodebits(gfc, gi);\n                    }\n                    data_bits += huffman_coder_count1(gfc, gi);\n                    /* does bitcount in quantize.c agree with actual bit count? */\n                    assert(data_bits == gi.part2_3_length + gi.part2_length);\n                    tot_bits += data_bits;\n                }\n                /* for ch */\n            }\n            /* for gr */\n        } else {\n            /* MPEG 2 */\n            gr = 0;\n            for (ch = 0; ch < gfc.channels_out; ch++) {\n                var gi = l3_side.tt[gr][ch];\n                var i, sfb_partition, scale_bits = 0;\n                assert(gi.sfb_partition_table != null);\n                data_bits = 0;\n                sfb = 0;\n                sfb_partition = 0;\n\n                if (gi.block_type == Encoder.SHORT_TYPE) {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition] / 3;\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 0], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 1], 0), slen);\n                            putbits2(gfc,\n                                Math.max(gi.scalefac[sfb * 3 + 2], 0), slen);\n                            scale_bits += 3 * slen;\n                        }\n                    }\n                    data_bits += ShortHuffmancodebits(gfc, gi);\n                } else {\n                    for (; sfb_partition < 4; sfb_partition++) {\n                        var sfbs = gi.sfb_partition_table[sfb_partition];\n                        var slen = gi.slen[sfb_partition];\n                        for (i = 0; i < sfbs; i++, sfb++) {\n                            putbits2(gfc, Math.max(gi.scalefac[sfb], 0), slen);\n                            scale_bits += slen;\n                        }\n                    }\n                    data_bits += LongHuffmancodebits(gfc, gi);\n                }\n                data_bits += huffman_coder_count1(gfc, gi);\n                /* does bitcount in quantize.c agree with actual bit count? */\n                assert(data_bits == gi.part2_3_length);\n                assert(scale_bits == gi.part2_length);\n                tot_bits += scale_bits + data_bits;\n            }\n            /* for ch */\n        }\n        /* for gf */\n        return tot_bits;\n    }\n\n    /* main_data */\n\n    function TotalBytes() {\n        this.total = 0;\n    }\n\n    /*\n     * compute the number of bits required to flush all mp3 frames currently in\n     * the buffer. This should be the same as the reservoir size. Only call this\n     * routine between frames - i.e. only after all headers and data have been\n     * added to the buffer by format_bitstream().\n     *\n     * Also compute total_bits_output = size of mp3 buffer (including frame\n     * headers which may not have yet been send to the mp3 buffer) + number of\n     * bits needed to flush all mp3 frames.\n     *\n     * total_bytes_output is the size of the mp3 output buffer if\n     * lame_encode_flush_nogap() was called right now.\n     */\n    function compute_flushbits(gfp, total_bytes_output) {\n        var gfc = gfp.internal_flags;\n        var flushbits, remaining_headers;\n        var bitsPerFrame;\n        var last_ptr, first_ptr;\n        first_ptr = gfc.w_ptr;\n        /* first header to add to bitstream */\n        last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n\n        /* add this many bits to bitstream so we can flush all headers */\n        flushbits = gfc.header[last_ptr].write_timing - totbit;\n        total_bytes_output.total = flushbits;\n\n        if (flushbits >= 0) {\n            /* if flushbits >= 0, some headers have not yet been written */\n            /* reduce flushbits by the size of the headers */\n            remaining_headers = 1 + last_ptr - first_ptr;\n            if (last_ptr < first_ptr)\n                remaining_headers = 1 + last_ptr - first_ptr\n                    + LameInternalFlags.MAX_HEADER_BUF;\n            flushbits -= remaining_headers * 8 * gfc.sideinfo_len;\n        }\n\n        /*\n         * finally, add some bits so that the last frame is complete these bits\n         * are not necessary to decode the last frame, but some decoders will\n         * ignore last frame if these bits are missing\n         */\n        bitsPerFrame = self.getframebits(gfp);\n        flushbits += bitsPerFrame;\n        total_bytes_output.total += bitsPerFrame;\n        /* round up: */\n        if ((total_bytes_output.total % 8) != 0)\n            total_bytes_output.total = 1 + (total_bytes_output.total / 8);\n        else\n            total_bytes_output.total = (total_bytes_output.total / 8);\n        total_bytes_output.total += bufByteIdx + 1;\n\n        if (flushbits < 0) {\n            System.err.println(\"strange error flushing buffer ... \\n\");\n        }\n        return flushbits;\n    }\n\n    this.flush_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        var flushbits;\n        var last_ptr = gfc.h_ptr - 1;\n        /* last header to add to bitstream */\n        if (last_ptr == -1)\n            last_ptr = LameInternalFlags.MAX_HEADER_BUF - 1;\n        l3_side = gfc.l3_side;\n\n        if ((flushbits = compute_flushbits(gfp, new TotalBytes())) < 0)\n            return;\n        drain_into_ancillary(gfp, flushbits);\n\n        /* check that the 100% of the last frame has been written to bitstream */\n        assert(gfc.header[last_ptr].write_timing + this.getframebits(gfp) == totbit);\n\n        /*\n         * we have padded out all frames with ancillary data, which is the same\n         * as filling the bitreservoir with ancillary data, so :\n         */\n        gfc.ResvSize = 0;\n        l3_side.main_data_begin = 0;\n\n        /* save the ReplayGain value */\n        if (gfc.findReplayGain) {\n            var RadioGain = ga.GetTitleGain(gfc.rgdata);\n            assert(NEQ(RadioGain, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES));\n            gfc.RadioGain = Math.floor(RadioGain * 10.0 + 0.5) | 0;\n            /* round to nearest */\n        }\n\n        /* find the gain and scale change required for no clipping */\n        if (gfc.findPeakSample) {\n            gfc.noclipGainChange = Math.ceil(Math\n                        .log10(gfc.PeakSample / 32767.0) * 20.0 * 10.0) | 0;\n            /* round up */\n\n            if (gfc.noclipGainChange > 0) {\n                /* clipping occurs */\n                if (EQ(gfp.scale, 1.0) || EQ(gfp.scale, 0.0))\n                    gfc.noclipScale = (Math\n                        .floor((32767.0 / gfc.PeakSample) * 100.0) / 100.0);\n                /* round down */\n                else {\n                    /*\n                     * the user specified his own scaling factor. We could\n                     * suggest the scaling factor of\n                     * (32767.0/gfp.PeakSample)*(gfp.scale) but it's usually\n                     * very inaccurate. So we'd rather not advice him on the\n                     * scaling factor.\n                     */\n                    gfc.noclipScale = -1;\n                }\n            } else\n            /* no clipping */\n                gfc.noclipScale = -1;\n        }\n    };\n\n    this.add_dummy_byte = function (gfp, val, n) {\n        var gfc = gfp.internal_flags;\n        var i;\n\n        while (n-- > 0) {\n            putbits_noheaders(gfc, val, 8);\n\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing += 8;\n        }\n    };\n\n    /**\n     * This is called after a frame of audio has been quantized and coded. It\n     * will write the encoded audio to the bitstream. Note that from a layer3\n     * encoder's perspective the bit stream is primarily a series of main_data()\n     * blocks, with header and side information inserted at the proper locations\n     * to maintain framing. (See Figure A.7 in the IS).\n     */\n    this.format_bitstream = function (gfp) {\n        var gfc = gfp.internal_flags;\n        var l3_side;\n        l3_side = gfc.l3_side;\n\n        var bitsPerFrame = this.getframebits(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_pre);\n\n        encodeSideInfo2(gfp, bitsPerFrame);\n        var bits = 8 * gfc.sideinfo_len;\n        bits += writeMainData(gfp);\n        drain_into_ancillary(gfp, l3_side.resvDrain_post);\n        bits += l3_side.resvDrain_post;\n\n        l3_side.main_data_begin += (bitsPerFrame - bits) / 8;\n\n        /*\n         * compare number of bits needed to clear all buffered mp3 frames with\n         * what we think the resvsize is:\n         */\n        if (compute_flushbits(gfp, new TotalBytes()) != gfc.ResvSize) {\n            System.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\");\n        }\n\n        /*\n         * compare main_data_begin for the next frame with what we think the\n         * resvsize is:\n         */\n        if ((l3_side.main_data_begin * 8) != gfc.ResvSize) {\n            System.err.printf(\"bit reservoir error: \\n\"\n                + \"l3_side.main_data_begin: %d \\n\"\n                + \"Resvoir size:             %d \\n\"\n                + \"resv drain (post)         %d \\n\"\n                + \"resv drain (pre)          %d \\n\"\n                + \"header and sideinfo:      %d \\n\"\n                + \"data bits:                %d \\n\"\n                + \"total bits:               %d (remainder: %d) \\n\"\n                + \"bitsperframe:             %d \\n\",\n                8 * l3_side.main_data_begin, gfc.ResvSize,\n                l3_side.resvDrain_post, l3_side.resvDrain_pre,\n                8 * gfc.sideinfo_len, bits - l3_side.resvDrain_post - 8\n                * gfc.sideinfo_len, bits, bits % 8, bitsPerFrame);\n\n            System.err.println(\"This is a fatal error.  It has several possible causes:\");\n            System.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\");\n            System.err.println(\" 9%%  Your system is overclocked\");\n            System.err.println(\" 1%%  bug in LAME encoding library\");\n\n            gfc.ResvSize = l3_side.main_data_begin * 8;\n        }\n        //;\n        assert(totbit % 8 == 0);\n\n        if (totbit > 1000000000) {\n            /*\n             * to avoid totbit overflow, (at 8h encoding at 128kbs) lets reset\n             * bit counter\n             */\n            var i;\n            for (i = 0; i < LameInternalFlags.MAX_HEADER_BUF; ++i)\n                gfc.header[i].write_timing -= totbit;\n            totbit = 0;\n        }\n\n        return 0;\n    };\n\n    /**\n     * <PRE>\n     * copy data out of the internal MP3 bit buffer into a user supplied\n     *       unsigned char buffer.\n     *\n     *       mp3data=0      indicates data in buffer is an id3tags and VBR tags\n     *       mp3data=1      data is real mp3 frame data.\n     * </PRE>\n     */\n    this.copy_buffer = function (gfc, buffer, bufferPos, size, mp3data) {\n        var minimum = bufByteIdx + 1;\n        if (minimum <= 0)\n            return 0;\n        if (size != 0 && minimum > size) {\n            /* buffer is too small */\n            return -1;\n        }\n        System.arraycopy(buf, 0, buffer, bufferPos, minimum);\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n\n        if (mp3data != 0) {\n            var crc = new_int(1);\n            crc[0] = gfc.nMusicCRC;\n            vbr.updateMusicCRC(crc, buffer, bufferPos, minimum);\n            gfc.nMusicCRC = crc[0];\n\n            /**\n             * sum number of bytes belonging to the mp3 stream this info will be\n             * written into the Xing/LAME header for seeking\n             */\n            if (minimum > 0) {\n                gfc.VBR_seek_table.nBytesWritten += minimum;\n            }\n\n            if (gfc.decode_on_the_fly) { /* decode the frame */\n                var pcm_buf = new_float_n([2, 1152]);\n                var mp3_in = minimum;\n                var samples_out = -1;\n                var i;\n\n                /* re-synthesis to pcm. Repeat until we get a samples_out=0 */\n                while (samples_out != 0) {\n\n                    samples_out = mpg.hip_decode1_unclipped(gfc.hip, buffer,\n                        bufferPos, mp3_in, pcm_buf[0], pcm_buf[1]);\n                    /*\n                     * samples_out = 0: need more data to decode samples_out =\n                     * -1: error. Lets assume 0 pcm output samples_out = number\n                     * of samples output\n                     */\n\n                    /*\n                     * set the lenght of the mp3 input buffer to zero, so that\n                     * in the next iteration of the loop we will be querying\n                     * mpglib about buffered data\n                     */\n                    mp3_in = 0;\n\n                    if (samples_out == -1) {\n                        /*\n                         * error decoding. Not fatal, but might screw up the\n                         * ReplayGain tag. What should we do? Ignore for now\n                         */\n                        samples_out = 0;\n                    }\n                    if (samples_out > 0) {\n                        /* process the PCM data */\n\n                        /*\n                         * this should not be possible, and indicates we have\n                         * overflown the pcm_buf buffer\n                         */\n                        assert(samples_out <= 1152);\n\n                        if (gfc.findPeakSample) {\n                            for (i = 0; i < samples_out; i++) {\n                                if (pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = pcm_buf[0][i];\n                                else if (-pcm_buf[0][i] > gfc.PeakSample)\n                                    gfc.PeakSample = -pcm_buf[0][i];\n                            }\n                            if (gfc.channels_out > 1)\n                                for (i = 0; i < samples_out; i++) {\n                                    if (pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = pcm_buf[1][i];\n                                    else if (-pcm_buf[1][i] > gfc.PeakSample)\n                                        gfc.PeakSample = -pcm_buf[1][i];\n                                }\n                        }\n\n                        if (gfc.findReplayGain)\n                            if (ga.AnalyzeSamples(gfc.rgdata, pcm_buf[0], 0,\n                                    pcm_buf[1], 0, samples_out,\n                                    gfc.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR)\n                                return -6;\n\n                    }\n                    /* if (samples_out>0) */\n                }\n                /* while (samples_out!=0) */\n            }\n            /* if (gfc.decode_on_the_fly) */\n\n        }\n        /* if (mp3data) */\n        return minimum;\n    };\n\n    this.init_bit_stream_w = function (gfc) {\n        buf = new_byte(Lame.LAME_MAXMP3BUFFER);\n\n        gfc.h_ptr = gfc.w_ptr = 0;\n        gfc.header[gfc.h_ptr].write_timing = 0;\n        bufByteIdx = -1;\n        bufBitIdx = 0;\n        totbit = 0;\n    };\n\n    // From machine.h\n\n\n}\n\nmodule.exports = BitStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/BitStream.js\n// module id = orZQ\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/cookies.js\n// module id = p1b6\n// module chunks = 0","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/isCancel.js\n// module id = pBtG\n// module chunks = 0","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/spread.js\n// module id = pxG4\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nfunction Presets() {\n    function VBRPresets(qual, comp, compS,\n                        y, shThreshold, shThresholdS,\n                        adj, adjShort, lower,\n                        curve, sens, inter,\n                        joint, mod, fix) {\n        this.vbr_q = qual;\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.expY = y;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.masking_adj = adj;\n        this.masking_adj_short = adjShort;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.ath_sensitivity = sens;\n        this.interch = inter;\n        this.safejoint = joint;\n        this.sfb21mod = mod;\n        this.msfix = fix;\n    }\n\n    function ABRPresets(kbps, comp, compS,\n                        joint, fix, shThreshold,\n                        shThresholdS, bass, sc,\n                        mask, lower, curve,\n                        interCh, sfScale) {\n        this.quant_comp = comp;\n        this.quant_comp_s = compS;\n        this.safejoint = joint;\n        this.nsmsfix = fix;\n        this.st_lrm = shThreshold;\n        this.st_s = shThresholdS;\n        this.nsbass = bass;\n        this.scale = sc;\n        this.masking_adj = mask;\n        this.ath_lower = lower;\n        this.ath_curve = curve;\n        this.interch = interCh;\n        this.sfscale = sfScale;\n    }\n\n    var lame;\n\n    this.setModules = function (_lame) {\n        lame = _lame;\n    };\n\n    /**\n     * <PRE>\n     * Switch mappings for VBR mode VBR_RH\n     *             vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_old_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 5.20, 125.0, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97),\n        new VBRPresets(1, 9, 9, 0, 5.30, 125.0, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 5.60, 125.0, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49),\n        new VBRPresets(3, 9, 9, 1, 5.80, 130.0, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64),\n        new VBRPresets(4, 9, 9, 1, 6.00, 135.0, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 6.40, 140.0, 0.5, 0.4, -7.5, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 6.60, 145.0, 0.67, 0.65, -14.7, 6.5, -19, 0.0004, 0, 0, 2.30),\n        new VBRPresets(7, 9, 9, 1, 6.60, 145.0, 0.8, 0.75, -19.7, 8, -22, 0.0006, 0, 0, 2.70),\n        new VBRPresets(8, 9, 9, 1, 6.60, 145.0, 1.2, 1.15, -27.5, 10, -23, 0.0007, 0, 0, 0),\n        new VBRPresets(9, 9, 9, 1, 6.60, 145.0, 1.6, 1.6, -36, 11, -25, 0.0008, 0, 0, 0),\n        new VBRPresets(10, 9, 9, 1, 6.60, 145.0, 2.0, 2.0, -36, 12, -25, 0.0008, 0, 0, 0)\n    ];\n\n    /**\n     * <PRE>\n     *                 vbr_q  qcomp_l  qcomp_s  expY  st_lrm   st_s  mask adj_l  adj_s  ath_lower  ath_curve  ath_sens  interChR  safejoint sfb21mod  msfix\n     * </PRE>\n     */\n    var vbr_psy_switch_map = [\n        new VBRPresets(0, 9, 9, 0, 4.20, 25.0, -7.0, -4.0, 7.5, 1, 0, 0, 2, 26, 0.97),\n        new VBRPresets(1, 9, 9, 0, 4.20, 25.0, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35),\n        new VBRPresets(2, 9, 9, 0, 4.20, 25.0, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),\n        new VBRPresets(3, 9, 9, 1, 4.20, 25.0, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64),\n        new VBRPresets(4, 9, 9, 1, 4.20, 25.0, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),\n        new VBRPresets(5, 9, 9, 1, 4.20, 25.0, -1.0, 1.65, -7.7, 4, -12, 0.0002, 0, 0, 1.95),\n        new VBRPresets(6, 9, 9, 1, 4.20, 25.0, -0.0, 2.47, -7.7, 6.5, -19, 0.0004, 0, 0, 2),\n        new VBRPresets(7, 9, 9, 1, 4.20, 25.0, 0.5, 2.0, -14.5, 8, -22, 0.0006, 0, 0, 2),\n        new VBRPresets(8, 9, 9, 1, 4.20, 25.0, 1.0, 2.4, -22.0, 10, -23, 0.0007, 0, 0, 2),\n        new VBRPresets(9, 9, 9, 1, 4.20, 25.0, 1.5, 2.95, -30.0, 11, -25, 0.0008, 0, 0, 2),\n        new VBRPresets(10, 9, 9, 1, 4.20, 25.0, 2.0, 2.95, -36.0, 12, -30, 0.0008, 0, 0, 2)\n    ];\n\n    function apply_vbr_preset(gfp, a, enforce) {\n        var vbr_preset = gfp.VBR == VbrMode.vbr_rh ? vbr_old_switch_map\n            : vbr_psy_switch_map;\n\n        var x = gfp.VBR_q_frac;\n        var p = vbr_preset[a];\n        var q = vbr_preset[a + 1];\n        var set = p;\n\n        // NOOP(vbr_q);\n        // NOOP(quant_comp);\n        // NOOP(quant_comp_s);\n        // NOOP(expY);\n        p.st_lrm = p.st_lrm + x * (q.st_lrm - p.st_lrm);\n        // LERP(st_lrm);\n        p.st_s = p.st_s + x * (q.st_s - p.st_s);\n        // LERP(st_s);\n        p.masking_adj = p.masking_adj + x * (q.masking_adj - p.masking_adj);\n        // LERP(masking_adj);\n        p.masking_adj_short = p.masking_adj_short + x\n            * (q.masking_adj_short - p.masking_adj_short);\n        // LERP(masking_adj_short);\n        p.ath_lower = p.ath_lower + x * (q.ath_lower - p.ath_lower);\n        // LERP(ath_lower);\n        p.ath_curve = p.ath_curve + x * (q.ath_curve - p.ath_curve);\n        // LERP(ath_curve);\n        p.ath_sensitivity = p.ath_sensitivity + x\n            * (q.ath_sensitivity - p.ath_sensitivity);\n        // LERP(ath_sensitivity);\n        p.interch = p.interch + x * (q.interch - p.interch);\n        // LERP(interch);\n        // NOOP(safejoint);\n        // NOOP(sfb21mod);\n        p.msfix = p.msfix + x * (q.msfix - p.msfix);\n        // LERP(msfix);\n\n        lame_set_VBR_q(gfp, set.vbr_q);\n\n        if (enforce != 0)\n            gfp.quant_comp = set.quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = set.quant_comp;\n        // SET_OPTION(quant_comp, set.quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = set.quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = set.quant_comp_s;\n        // SET_OPTION(quant_comp_short, set.quant_comp_s, -1);\n        if (set.expY != 0) {\n            gfp.experimentalY = set.expY != 0;\n        }\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = set.st_lrm;\n        // SET_OPTION(short_threshold_lrm, set.st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = set.st_s;\n        // SET_OPTION(short_threshold_s, set.st_s, -1);\n        if (enforce != 0)\n            gfp.maskingadjust = set.masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = set.masking_adj;\n        // SET_OPTION(maskingadjust, set.masking_adj, 0);\n        if (enforce != 0)\n            gfp.maskingadjust_short = set.masking_adj_short;\n        else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n            gfp.maskingadjust_short = set.masking_adj_short;\n        // SET_OPTION(maskingadjust_short, set.masking_adj_short, 0);\n        if (enforce != 0)\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        else if (!(Math.abs((-gfp.ATHlower * 10.0) - 0) > 0))\n            gfp.ATHlower = -set.ath_lower / 10.0;\n        // SET_OPTION(ATHlower, set.ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = set.ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = set.ath_curve;\n        // SET_OPTION(ATHcurve, set.ath_curve, -1);\n        if (enforce != 0)\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        else if (!(Math.abs(gfp.athaa_sensitivity - -1) > 0))\n            gfp.athaa_sensitivity = set.ath_sensitivity;\n        // SET_OPTION(athaa_sensitivity, set.ath_sensitivity, 0);\n        if (set.interch > 0) {\n            if (enforce != 0)\n                gfp.interChRatio = set.interch;\n            else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n                gfp.interChRatio = set.interch;\n            // SET_OPTION(interChRatio, set.interch, -1);\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (set.safejoint > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | set.safejoint;\n        }\n        if (set.sfb21mod > 0) {\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (set.sfb21mod << 20);\n        }\n        if (enforce != 0)\n            gfp.msfix = set.msfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = set.msfix;\n        // SET_OPTION(msfix, set.msfix, -1);\n\n        if (enforce == 0) {\n            gfp.VBR_q = a;\n            gfp.VBR_q_frac = x;\n        }\n    }\n\n    /**\n     * <PRE>\n     *  Switch mappings for ABR mode\n     *\n     *              kbps  quant q_s safejoint nsmsfix st_lrm  st_s  ns-bass scale   msk ath_lwr ath_curve  interch , sfscale\n     * </PRE>\n     */\n    var abr_switch_map = [\n        new ABRPresets(8, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -30.0, 11, 0.0012, 1), /*   8, impossible to use in stereo */\n        new ABRPresets(16, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -25.0, 11, 0.0010, 1), /*  16 */\n        new ABRPresets(24, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -20.0, 11, 0.0010, 1), /*  24 */\n        new ABRPresets(32, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -15.0, 11, 0.0010, 1), /*  32 */\n        new ABRPresets(40, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  40 */\n        new ABRPresets(48, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -10.0, 11, 0.0009, 1), /*  48 */\n        new ABRPresets(56, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -6.0, 11, 0.0008, 1), /*  56 */\n        new ABRPresets(64, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, -2.0, 11, 0.0008, 1), /*  64 */\n        new ABRPresets(80, 9, 9, 0, 0, 6.60, 145, 0, 0.95, 0, .0, 8, 0.0007, 1), /*  80 */\n        new ABRPresets(96, 9, 9, 0, 2.50, 6.60, 145, 0, 0.95, 0, 1.0, 5.5, 0.0006, 1), /*  96 */\n        new ABRPresets(112, 9, 9, 0, 2.25, 6.60, 145, 0, 0.95, 0, 2.0, 4.5, 0.0005, 1), /* 112 */\n        new ABRPresets(128, 9, 9, 0, 1.95, 6.40, 140, 0, 0.95, 0, 3.0, 4, 0.0002, 1), /* 128 */\n        new ABRPresets(160, 9, 9, 1, 1.79, 6.00, 135, 0, 0.95, -2, 5.0, 3.5, 0, 1), /* 160 */\n        new ABRPresets(192, 9, 9, 1, 1.49, 5.60, 125, 0, 0.97, -4, 7.0, 3, 0, 0), /* 192 */\n        new ABRPresets(224, 9, 9, 1, 1.25, 5.20, 125, 0, 0.98, -6, 9.0, 2, 0, 0), /* 224 */\n        new ABRPresets(256, 9, 9, 1, 0.97, 5.20, 125, 0, 1.00, -8, 10.0, 1, 0, 0), /* 256 */\n        new ABRPresets(320, 9, 9, 1, 0.90, 5.20, 125, 0, 1.00, -10, 12.0, 0, 0, 0)  /* 320 */\n    ];\n\n    function apply_abr_preset(gfp, preset, enforce) {\n        /* Variables for the ABR stuff */\n        var actual_bitrate = preset;\n\n        var r = lame.nearestBitrateFullIndex(preset);\n\n        gfp.VBR = VbrMode.vbr_abr;\n        gfp.VBR_mean_bitrate_kbps = actual_bitrate;\n        gfp.VBR_mean_bitrate_kbps = Math.min(gfp.VBR_mean_bitrate_kbps, 320);\n        gfp.VBR_mean_bitrate_kbps = Math.max(gfp.VBR_mean_bitrate_kbps, 8);\n        gfp.brate = gfp.VBR_mean_bitrate_kbps;\n        if (gfp.VBR_mean_bitrate_kbps > 320) {\n            gfp.disable_reservoir = true;\n        }\n\n        /* parameters for which there is no proper set/get interface */\n        if (abr_switch_map[r].safejoint > 0)\n            gfp.exp_nspsytune = gfp.exp_nspsytune | 2;\n        /* safejoint */\n\n        if (abr_switch_map[r].sfscale > 0) {\n            gfp.internal_flags.noise_shaping = 2;\n        }\n        /* ns-bass tweaks */\n        if (Math.abs(abr_switch_map[r].nsbass) > 0) {\n            var k = (int)(abr_switch_map[r].nsbass * 4);\n            if (k < 0)\n                k += 64;\n            gfp.exp_nspsytune = gfp.exp_nspsytune | (k << 2);\n        }\n\n        if (enforce != 0)\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        else if (!(Math.abs(gfp.quant_comp - -1) > 0))\n            gfp.quant_comp = abr_switch_map[r].quant_comp;\n        // SET_OPTION(quant_comp, abr_switch_map[r].quant_comp, -1);\n        if (enforce != 0)\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        else if (!(Math.abs(gfp.quant_comp_short - -1) > 0))\n            gfp.quant_comp_short = abr_switch_map[r].quant_comp_s;\n        // SET_OPTION(quant_comp_short, abr_switch_map[r].quant_comp_s, -1);\n\n        if (enforce != 0)\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        else if (!(Math.abs(gfp.msfix - -1) > 0))\n            gfp.msfix = abr_switch_map[r].nsmsfix;\n        // SET_OPTION(msfix, abr_switch_map[r].nsmsfix, -1);\n\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre = abr_switch_map[r].st_lrm;\n        // SET_OPTION(short_threshold_lrm, abr_switch_map[r].st_lrm, -1);\n        if (enforce != 0)\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        else if (!(Math.abs(gfp.internal_flags.nsPsy.attackthre_s - -1) > 0))\n            gfp.internal_flags.nsPsy.attackthre_s = abr_switch_map[r].st_s;\n        // SET_OPTION(short_threshold_s, abr_switch_map[r].st_s, -1);\n\n        /*\n         * ABR seems to have big problems with clipping, especially at low\n         * bitrates\n         */\n        /*\n         * so we compensate for that here by using a scale value depending on\n         * bitrate\n         */\n        if (enforce != 0)\n            gfp.scale = abr_switch_map[r].scale;\n        else if (!(Math.abs(gfp.scale - -1) > 0))\n            gfp.scale = abr_switch_map[r].scale;\n        // SET_OPTION(scale, abr_switch_map[r].scale, -1);\n\n        if (enforce != 0)\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        else if (!(Math.abs(gfp.maskingadjust - 0) > 0))\n            gfp.maskingadjust = abr_switch_map[r].masking_adj;\n        // SET_OPTION(maskingadjust, abr_switch_map[r].masking_adj, 0);\n        if (abr_switch_map[r].masking_adj > 0) {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * .9);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // .9, 0);\n        } else {\n            if (enforce != 0)\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            else if (!(Math.abs(gfp.maskingadjust_short - 0) > 0))\n                gfp.maskingadjust_short = (abr_switch_map[r].masking_adj * 1.1);\n            // SET_OPTION(maskingadjust_short, abr_switch_map[r].masking_adj *\n            // 1.1, 0);\n        }\n\n        if (enforce != 0)\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        else if (!(Math.abs((-gfp.ATHlower * 10.) - 0) > 0))\n            gfp.ATHlower = -abr_switch_map[r].ath_lower / 10.;\n        // SET_OPTION(ATHlower, abr_switch_map[r].ath_lower, 0);\n        if (enforce != 0)\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        else if (!(Math.abs(gfp.ATHcurve - -1) > 0))\n            gfp.ATHcurve = abr_switch_map[r].ath_curve;\n        // SET_OPTION(ATHcurve, abr_switch_map[r].ath_curve, -1);\n\n        if (enforce != 0)\n            gfp.interChRatio = abr_switch_map[r].interch;\n        else if (!(Math.abs(gfp.interChRatio - -1) > 0))\n            gfp.interChRatio = abr_switch_map[r].interch;\n        // SET_OPTION(interChRatio, abr_switch_map[r].interch, -1);\n\n        return preset;\n    }\n\n    this.apply_preset = function(gfp, preset, enforce) {\n        /* translate legacy presets */\n        switch (preset) {\n            case Lame.R3MIX:\n            {\n                preset = Lame.V3;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.MEDIUM:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.MEDIUM_FAST:\n            {\n                preset = Lame.V4;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.STANDARD:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.STANDARD_FAST:\n            {\n                preset = Lame.V2;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.EXTREME:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_rh;\n                break;\n            }\n            case Lame.EXTREME_FAST:\n            {\n                preset = Lame.V0;\n                gfp.VBR = VbrMode.vbr_mtrh;\n                break;\n            }\n            case Lame.INSANE:\n            {\n                preset = 320;\n                gfp.preset = preset;\n                apply_abr_preset(gfp, preset, enforce);\n                gfp.VBR = VbrMode.vbr_off;\n                return preset;\n            }\n        }\n\n        gfp.preset = preset;\n        {\n            switch (preset) {\n                case Lame.V9:\n                    apply_vbr_preset(gfp, 9, enforce);\n                    return preset;\n                case Lame.V8:\n                    apply_vbr_preset(gfp, 8, enforce);\n                    return preset;\n                case Lame.V7:\n                    apply_vbr_preset(gfp, 7, enforce);\n                    return preset;\n                case Lame.V6:\n                    apply_vbr_preset(gfp, 6, enforce);\n                    return preset;\n                case Lame.V5:\n                    apply_vbr_preset(gfp, 5, enforce);\n                    return preset;\n                case Lame.V4:\n                    apply_vbr_preset(gfp, 4, enforce);\n                    return preset;\n                case Lame.V3:\n                    apply_vbr_preset(gfp, 3, enforce);\n                    return preset;\n                case Lame.V2:\n                    apply_vbr_preset(gfp, 2, enforce);\n                    return preset;\n                case Lame.V1:\n                    apply_vbr_preset(gfp, 1, enforce);\n                    return preset;\n                case Lame.V0:\n                    apply_vbr_preset(gfp, 0, enforce);\n                    return preset;\n                default:\n                    break;\n            }\n        }\n        if (8 <= preset && preset <= 320) {\n            return apply_abr_preset(gfp, preset, enforce);\n        }\n\n        /* no corresponding preset found */\n        gfp.preset = 0;\n        return preset;\n    }\n\n    // Rest from getset.c:\n\n    /**\n     * VBR quality level.<BR>\n     * 0 = highest<BR>\n     * 9 = lowest\n     */\n    function lame_set_VBR_q(gfp, VBR_q) {\n        var ret = 0;\n\n        if (0 > VBR_q) {\n            /* Unknown VBR quality level! */\n            ret = -1;\n            VBR_q = 0;\n        }\n        if (9 < VBR_q) {\n            ret = -1;\n            VBR_q = 9;\n        }\n\n        gfp.VBR_q = VBR_q;\n        gfp.VBR_q_frac = 0;\n        return ret;\n    }\n\n}\n\nmodule.exports = Presets;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/Presets.js\n// module id = qR53\n// module chunks = 0","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/combineURLs.js\n// module id = qRfI\n// module chunks = 0","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/enhanceError.js\n// module id = t8qj\n// module chunks = 0","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/axios.js\n// module id = tIFN\n// module chunks = 0","var common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n//package mp3;\n\n/**\n * Variables used for --nspsytune\n *\n * @author Ken\n *\n */\nfunction NsPsy() {\n    this.last_en_subshort = new_float_n([4, 9]);\n    this.lastAttacks = new_int(4);\n    this.pefirbuf = new_float(19);\n    this.longfact = new_float(Encoder.SBMAX_l);\n    this.shortfact = new_float(Encoder.SBMAX_s);\n\n    /**\n     * short block tuning\n     */\n    this.attackthre = 0.;\n    this.attackthre_s = 0.;\n}\n\nmodule.exports = NsPsy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/NsPsy.js\n// module id = vbIv\n// module chunks = 0","var common = require('./common.js');\nvar new_float = common.new_float;\nvar new_int = common.new_int;\nvar assert = common.assert;\n\nfunction CalcNoiseData() {\n    this.global_gain = 0;\n    this.sfb_count1 = 0;\n    this.step = new_int(39);\n    this.noise = new_float(39);\n    this.noise_log = new_float(39);\n}\n\nmodule.exports = CalcNoiseData;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/CalcNoiseData.js\n// module id = wdSa\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/createClass.js\n// module id = wxAW\n// module chunks = 0","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/dispatchRequest.js\n// module id = xLtR\n// module chunks = 0","/*\n *      MP3 window subband -> subband filtering -> mdct routine\n *\n *      Copyright (c) 1999-2000 Takehiro Tominaga\n *\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Library General Public License for more details.\n *\n * You should have received a copy of the GNU Library General Public\n * License along with this library; if not, write to the\n * Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n * Boston, MA 02111-1307, USA.\n */\n/*\n *         Special Thanks to Patrick De Smet for your advices.\n */\n\n/* $Id: NewMDCT.java,v 1.11 2011/05/24 20:48:06 kenchis Exp $ */\n\n//package mp3;\n\n//import java.util.Arrays;\nvar common = require('./common.js');\nvar System = common.System;\nvar VbrMode = common.VbrMode;\nvar Float = common.Float;\nvar ShortBlock = common.ShortBlock;\nvar Util = common.Util;\nvar Arrays = common.Arrays;\nvar new_array_n = common.new_array_n;\nvar new_byte = common.new_byte;\nvar new_double = common.new_double;\nvar new_float = common.new_float;\nvar new_float_n = common.new_float_n;\nvar new_int = common.new_int;\nvar new_int_n = common.new_int_n;\nvar assert = common.assert;\n\nvar Encoder = require('./Encoder.js');\n\n\nfunction NewMDCT() {\n\n\tvar enwindow = [\n\t\t\t-4.77e-07 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.03951e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.53674e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.841473e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.5758972e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t3.401756e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.83715e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.740951125354959 / 2.384e-06, /* 15 */\n\t\t\t1.2398e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.91212e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t2.283096e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t1.6994476e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.8756866e-02 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.630711e-03 * 0.740951125354959 / 2.384e-06,\n\t\t\t-2.47478e-04 * 0.740951125354959 / 2.384e-06,\n\t\t\t-1.4782e-05 * 0.740951125354959 / 2.384e-06,\n\t\t\t9.063471690191471e-01, 1.960342806591213e-01,\n\n\t\t\t-4.77e-07 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.05858e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.30786e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.521515e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.5694122e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t3.643036e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.91821e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t9.6321e-05 * 0.773010453362737 / 2.384e-06, /* 14 */\n\t\t\t1.1444e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.65462e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t2.110004e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t1.6112804e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.9634247e-02 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.803326e-03 * 0.773010453362737 / 2.384e-06,\n\t\t\t-2.77042e-04 * 0.773010453362737 / 2.384e-06,\n\t\t\t-1.6689e-05 * 0.773010453362737 / 2.384e-06,\n\t\t\t8.206787908286602e-01, 3.901806440322567e-01,\n\n\t\t\t-4.77e-07 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.07288e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.02653e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t2.174854e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.5586357e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t3.858566e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.95159e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t9.3460e-05 * 0.803207531480645 / 2.384e-06, /* 13 */\n\t\t\t1.0014e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.40190e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.937389e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t1.5233517e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.0506859e-02 * 0.803207531480645 / 2.384e-06,\n\t\t\t-2.974033e-03 * 0.803207531480645 / 2.384e-06,\n\t\t\t-3.07560e-04 * 0.803207531480645 / 2.384e-06,\n\t\t\t-1.8120e-05 * 0.803207531480645 / 2.384e-06,\n\t\t\t7.416505462720353e-01, 5.805693545089249e-01,\n\n\t\t\t-4.77e-07 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t8.68797e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.800537e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t3.5435200e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t4.049301e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.94205e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t9.0599e-05 * 0.831469612302545 / 2.384e-06, /* 12 */\n\t\t\t9.060e-06 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.16348e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.766682e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t1.4358521e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-2.1372318e-02 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.14188e-03 * 0.831469612302545 / 2.384e-06,\n\t\t\t-3.39031e-04 * 0.831469612302545 / 2.384e-06,\n\t\t\t-1.9550e-05 * 0.831469612302545 / 2.384e-06,\n\t\t\t6.681786379192989e-01, 7.653668647301797e-01,\n\n\t\t\t-4.77e-07 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.29220e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.399517e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t3.5242081e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t4.215240e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.89437e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t8.7261e-05 * 0.857728610000272 / 2.384e-06, /* 11 */\n\t\t\t8.106e-06 * 0.857728610000272 / 2.384e-06,\n\t\t\t9.3937e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.597881e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t1.3489246e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.2228718e-02 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.306866e-03 * 0.857728610000272 / 2.384e-06,\n\t\t\t-3.71456e-04 * 0.857728610000272 / 2.384e-06,\n\t\t\t-2.1458e-05 * 0.857728610000272 / 2.384e-06,\n\t\t\t5.993769336819237e-01, 9.427934736519954e-01,\n\n\t\t\t-4.77e-07 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.08719e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.8392e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.71317e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t3.5007000e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t4.357815e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t9.80854e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t8.3923e-05 * 0.881921264348355 / 2.384e-06, /* 10 */\n\t\t\t7.629e-06 * 0.881921264348355 / 2.384e-06,\n\t\t\t7.2956e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.432419e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t1.2627602e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3074150e-02 * 0.881921264348355 / 2.384e-06,\n\t\t\t-3.467083e-03 * 0.881921264348355 / 2.384e-06,\n\t\t\t-4.04358e-04 * 0.881921264348355 / 2.384e-06,\n\t\t\t-2.3365e-05 * 0.881921264348355 / 2.384e-06,\n\t\t\t5.345111359507916e-01, 1.111140466039205e+00,\n\n\t\t\t-9.54e-07 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.08242e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t7.31945e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.15938e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t3.4730434e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.477024e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t9.68933e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t8.0585e-05 * 0.903989293123443 / 2.384e-06, /* 9 */\n\t\t\t6.676e-06 * 0.903989293123443 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.269817e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t1.1775017e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.3907185e-02 * 0.903989293123443 / 2.384e-06,\n\t\t\t-3.622532e-03 * 0.903989293123443 / 2.384e-06,\n\t\t\t-4.38213e-04 * 0.903989293123443 / 2.384e-06,\n\t\t\t-2.5272e-05 * 0.903989293123443 / 2.384e-06,\n\t\t\t4.729647758913199e-01, 1.268786568327291e+00,\n\n\t\t\t-9.54e-07 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.06812e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.74248e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.3379e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4412861e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.573822e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t9.54151e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t7.6771e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t6.199e-06 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t3.4332e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.111031e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t1.0933399e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.4725437e-02 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-3.771782e-03 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-4.72546e-04 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t-2.7657e-05 * 0.92387953251128675613 / 2.384e-06,\n\t\t\t4.1421356237309504879e-01, /* tan(PI/8) */\n\t\t\t1.414213562373095e+00,\n\n\t\t\t-9.54e-07 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.05381e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t6.10352e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-4.75883e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.4055710e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t4.649162e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.35555e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t7.3433e-05 * 0.941544065183021 / 2.384e-06, /* 7 */\n\t\t\t5.245e-06 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.7166e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t9.56535e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t1.0103703e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-2.5527000e-02 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.914356e-03 * 0.941544065183021 / 2.384e-06,\n\t\t\t-5.07355e-04 * 0.941544065183021 / 2.384e-06,\n\t\t\t-3.0041e-05 * 0.941544065183021 / 2.384e-06,\n\t\t\t3.578057213145241e-01, 1.546020906725474e+00,\n\n\t\t\t-9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t1.02520e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t5.39303e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-1.011848e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.3659935e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t4.703045e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.15051e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t7.0095e-05 * 0.956940335732209 / 2.384e-06, /* 6 */\n\t\t\t4.768e-06 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.54e-07 * 0.956940335732209 / 2.384e-06,\n\t\t\t8.06808e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t9.287834e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-2.6310921e-02 * 0.956940335732209 / 2.384e-06,\n\t\t\t-4.048824e-03 * 0.956940335732209 / 2.384e-06,\n\t\t\t-5.42164e-04 * 0.956940335732209 / 2.384e-06,\n\t\t\t-3.2425e-05 * 0.956940335732209 / 2.384e-06,\n\t\t\t3.033466836073424e-01, 1.662939224605090e+00,\n\n\t\t\t-1.431e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t9.9182e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.62532e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.573563e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t3.3225536e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t4.737377e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.91685e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.6280e-05 * 0.970031253194544 / 2.384e-06, /* 5 */\n\t\t\t4.292e-06 * 0.970031253194544 / 2.384e-06,\n\t\t\t-1.3828e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t6.61850e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t8.487225e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-2.7073860e-02 * 0.970031253194544 / 2.384e-06,\n\t\t\t-4.174709e-03 * 0.970031253194544 / 2.384e-06,\n\t\t\t-5.76973e-04 * 0.970031253194544 / 2.384e-06,\n\t\t\t-3.4809e-05 * 0.970031253194544 / 2.384e-06,\n\t\t\t2.504869601913055e-01, 1.763842528696710e+00,\n\n\t\t\t-1.431e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t9.5367e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.78609e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.161503e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t3.2754898e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t4.752159e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t8.66413e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t6.2943e-05 * 0.98078528040323 / 2.384e-06, /* 4 */\n\t\t\t3.815e-06 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.718e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t5.22137e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t7.703304e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-2.7815342e-02 * 0.98078528040323 / 2.384e-06,\n\t\t\t-4.290581e-03 * 0.98078528040323 / 2.384e-06,\n\t\t\t-6.11782e-04 * 0.98078528040323 / 2.384e-06,\n\t\t\t-3.7670e-05 * 0.98078528040323 / 2.384e-06,\n\t\t\t1.989123673796580e-01, 1.847759065022573e+00,\n\n\t\t\t-1.907e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t9.0122e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t2.88486e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.774239e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.2248020e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t4.748821e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t8.38757e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t5.9605e-05 * 0.989176509964781 / 2.384e-06, /* 3 */\n\t\t\t3.338e-06 * 0.989176509964781 / 2.384e-06,\n\t\t\t-3.9577e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t3.88145e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t6.937027e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-2.8532982e-02 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.395962e-03 * 0.989176509964781 / 2.384e-06,\n\t\t\t-6.46591e-04 * 0.989176509964781 / 2.384e-06,\n\t\t\t-4.0531e-05 * 0.989176509964781 / 2.384e-06,\n\t\t\t1.483359875383474e-01, 1.913880671464418e+00,\n\n\t\t\t-1.907e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.4400e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t1.91689e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-3.411293e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.1706810e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t4.728317e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t8.09669e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t5.579e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t3.338e-06 * 0.995184726672197 / 2.384e-06,\n\t\t\t-5.0545e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t2.59876e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t6.189346e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-2.9224873e-02 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.489899e-03 * 0.995184726672197 / 2.384e-06,\n\t\t\t-6.80923e-04 * 0.995184726672197 / 2.384e-06,\n\t\t\t-4.3392e-05 * 0.995184726672197 / 2.384e-06,\n\t\t\t9.849140335716425e-02, 1.961570560806461e+00,\n\n\t\t\t-2.384e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.7724e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t8.8215e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.072189e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t3.1132698e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.691124e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t7.79152e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.2929e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t2.861e-06 * 0.998795456205172 / 2.384e-06,\n\t\t\t-6.0558e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t1.37329e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t5.462170e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-2.9890060e-02 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.570484e-03 * 0.998795456205172 / 2.384e-06,\n\t\t\t-7.14302e-04 * 0.998795456205172 / 2.384e-06,\n\t\t\t-4.6253e-05 * 0.998795456205172 / 2.384e-06,\n\t\t\t4.912684976946725e-02, 1.990369453344394e+00,\n\n\t\t\t3.5780907e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.7876148e-02 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t3.134727e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.457142e-03 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t9.71317e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t2.18868e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.01566e-04 * Util.SQRT2 * 0.5 / 2.384e-06,\n\t\t\t1.3828e-05 * Util.SQRT2 * 0.5 / 2.384e-06,\n\n\t\t\t3.0526638e-02 / 2.384e-06, 4.638195e-03 / 2.384e-06,\n\t\t\t7.47204e-04 / 2.384e-06, 4.9591e-05 / 2.384e-06,\n\t\t\t4.756451e-03 / 2.384e-06, 2.1458e-05 / 2.384e-06,\n\t\t\t-6.9618e-05 / 2.384e-06, /* 2.384e-06/2.384e-06 */\n\t];\n\n\tvar NS = 12;\n\tvar NL = 36;\n\n\tvar win = [\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049690e-13,\n\t     6.423305872147839e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943412e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758252e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558783e-12,\n\t     8.371015190102974e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.456116108943412e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758252e-12,\n\t     -2.858043359288076e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558783e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347923e-13,\n\t     -6.423305872147843e-13,\n\t     -9.400849094049696e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049694e-13,\n\t     -6.423305872147840e-13,\n\t     -2.382191739347918e-13,\n\t     ],\n\t    [\n\t     2.382191739347913e-13,\n\t     6.423305872147834e-13,\n\t     9.400849094049688e-13,\n\t     1.122435026096556e-12,\n\t     1.183840321267481e-12,\n\t     1.122435026096556e-12,\n\t     9.400849094049688e-13,\n\t     6.423305872147841e-13,\n\t     2.382191739347918e-13,\n\n\t     5.456116108943413e-12,\n\t     4.878985199565852e-12,\n\t     4.240448995017367e-12,\n\t     3.559909094758253e-12,\n\t     2.858043359288075e-12,\n\t     2.156177623817898e-12,\n\t     1.475637723558782e-12,\n\t     8.371015190102975e-13,\n\t     2.599706096327376e-13,\n\n\t     -5.461314069809755e-12,\n\t     -4.921085770524055e-12,\n\t     -4.343405037091838e-12,\n\t     -3.732668368707687e-12,\n\t     -3.093523840190885e-12,\n\t     -2.430835727329465e-12,\n\t     -1.734679010007751e-12,\n\t     -9.748253656609281e-13,\n\t     -2.797435120168326e-13,\n\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     -2.283748241799531e-13,\n\t     -4.037858874020686e-13,\n\t     -2.146547464825323e-13,\n\t     ],\n\t    [\n\t     1.316524975873958e-01, /* win[SHORT_TYPE] */\n\t     4.142135623730950e-01,\n\t     7.673269879789602e-01,\n\n\t     1.091308501069271e+00, /* tantab_l */\n\t     1.303225372841206e+00,\n\t     1.569685577117490e+00,\n\t     1.920982126971166e+00,\n\t     2.414213562373094e+00,\n\t     3.171594802363212e+00,\n\t     4.510708503662055e+00,\n\t     7.595754112725146e+00,\n\t     2.290376554843115e+01,\n\n\t     0.98480775301220802032, /* cx */\n\t     0.64278760968653936292,\n\t     0.34202014332566882393,\n\t     0.93969262078590842791,\n\t     -0.17364817766693030343,\n\t     -0.76604444311897790243,\n\t     0.86602540378443870761,\n\t     0.500000000000000e+00,\n\n\t     -5.144957554275265e-01, /* ca */\n\t     -4.717319685649723e-01,\n\t     -3.133774542039019e-01,\n\t     -1.819131996109812e-01,\n\t     -9.457419252642064e-02,\n\t     -4.096558288530405e-02,\n\t     -1.419856857247115e-02,\n\t     -3.699974673760037e-03,\n\n\t     8.574929257125442e-01, /* cs */\n\t     8.817419973177052e-01,\n\t     9.496286491027329e-01,\n\t     9.833145924917901e-01,\n\t     9.955178160675857e-01,\n\t     9.991605581781475e-01,\n\t     9.998991952444470e-01,\n\t     9.999931550702802e-01,\n\t     ],\n\t    [\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     0.000000000000000e+00,\n\t     2.283748241799531e-13,\n\t     4.037858874020686e-13,\n\t     2.146547464825323e-13,\n\n\t     5.461314069809755e-12,\n\t     4.921085770524055e-12,\n\t     4.343405037091838e-12,\n\t     3.732668368707687e-12,\n\t     3.093523840190885e-12,\n\t     2.430835727329466e-12,\n\t     1.734679010007751e-12,\n\t     9.748253656609281e-13,\n\t     2.797435120168326e-13,\n\n\t     -5.456116108943413e-12,\n\t     -4.878985199565852e-12,\n\t     -4.240448995017367e-12,\n\t     -3.559909094758253e-12,\n\t     -2.858043359288075e-12,\n\t     -2.156177623817898e-12,\n\t     -1.475637723558782e-12,\n\t     -8.371015190102975e-13,\n\t     -2.599706096327376e-13,\n\n\t     -2.382191739347913e-13,\n\t     -6.423305872147834e-13,\n\t     -9.400849094049688e-13,\n\t     -1.122435026096556e-12,\n\t     -1.183840321267481e-12,\n\t     -1.122435026096556e-12,\n\t     -9.400849094049688e-13,\n\t     -6.423305872147841e-13,\n\t     -2.382191739347918e-13,\n\t     ]\n\t];\n\n\tvar tantab_l = win[Encoder.SHORT_TYPE];\n\tvar cx = win[Encoder.SHORT_TYPE];\n\tvar ca = win[Encoder.SHORT_TYPE];\n\tvar cs = win[Encoder.SHORT_TYPE];\n\n\t/**\n\t * new IDCT routine written by Takehiro TOMINAGA\n\t *\n\t * PURPOSE: Overlapping window on PCM samples<BR>\n\t *\n\t * SEMANTICS:<BR>\n\t * 32 16-bit pcm samples are scaled to fractional 2's complement and\n\t * concatenated to the end of the window buffer #x#. The updated window\n\t * buffer #x# is then windowed by the analysis window #c# to produce the\n\t * windowed sample #z#\n\t */\n\tvar order = [\n\t    0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29,\n\t    2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31\n\t];\n\n\t/**\n\t * returns sum_j=0^31 a[j]*cos(PI*j*(k+1/2)/32), 0<=k<32\n\t */\n\tfunction window_subband(x1, x1Pos, a) {\n\t\tvar wp = 10;\n\n\t\tvar x2 = x1Pos + 238 - 14 - 286;\n\n\t\tfor (var i = -15; i < 0; i++) {\n\t\t\tvar w, s, t;\n\n\t\t\tw = enwindow[wp + -10];\n\t\t\ts = x1[x2 + -224] * w;\n\t\t\tt = x1[x1Pos + 224] * w;\n\t\t\tw = enwindow[wp + -9];\n\t\t\ts += x1[x2 + -160] * w;\n\t\t\tt += x1[x1Pos + 160] * w;\n\t\t\tw = enwindow[wp + -8];\n\t\t\ts += x1[x2 + -96] * w;\n\t\t\tt += x1[x1Pos + 96] * w;\n\t\t\tw = enwindow[wp + -7];\n\t\t\ts += x1[x2 + -32] * w;\n\t\t\tt += x1[x1Pos + 32] * w;\n\t\t\tw = enwindow[wp + -6];\n\t\t\ts += x1[x2 + 32] * w;\n\t\t\tt += x1[x1Pos + -32] * w;\n\t\t\tw = enwindow[wp + -5];\n\t\t\ts += x1[x2 + 96] * w;\n\t\t\tt += x1[x1Pos + -96] * w;\n\t\t\tw = enwindow[wp + -4];\n\t\t\ts += x1[x2 + 160] * w;\n\t\t\tt += x1[x1Pos + -160] * w;\n\t\t\tw = enwindow[wp + -3];\n\t\t\ts += x1[x2 + 224] * w;\n\t\t\tt += x1[x1Pos + -224] * w;\n\n\t\t\tw = enwindow[wp + -2];\n\t\t\ts += x1[x1Pos + -256] * w;\n\t\t\tt -= x1[x2 + 256] * w;\n\t\t\tw = enwindow[wp + -1];\n\t\t\ts += x1[x1Pos + -192] * w;\n\t\t\tt -= x1[x2 + 192] * w;\n\t\t\tw = enwindow[wp + 0];\n\t\t\ts += x1[x1Pos + -128] * w;\n\t\t\tt -= x1[x2 + 128] * w;\n\t\t\tw = enwindow[wp + 1];\n\t\t\ts += x1[x1Pos + -64] * w;\n\t\t\tt -= x1[x2 + 64] * w;\n\t\t\tw = enwindow[wp + 2];\n\t\t\ts += x1[x1Pos + 0] * w;\n\t\t\tt -= x1[x2 + 0] * w;\n\t\t\tw = enwindow[wp + 3];\n\t\t\ts += x1[x1Pos + 64] * w;\n\t\t\tt -= x1[x2 + -64] * w;\n\t\t\tw = enwindow[wp + 4];\n\t\t\ts += x1[x1Pos + 128] * w;\n\t\t\tt -= x1[x2 + -128] * w;\n\t\t\tw = enwindow[wp + 5];\n\t\t\ts += x1[x1Pos + 192] * w;\n\t\t\tt -= x1[x2 + -192] * w;\n\n\t\t\t/*\n\t\t\t * this multiplyer could be removed, but it needs more 256 FLOAT\n\t\t\t * data. thinking about the data cache performance, I think we\n\t\t\t * should not use such a huge table. tt 2000/Oct/25\n\t\t\t */\n\t\t\ts *= enwindow[wp + 6];\n\t\t\tw = t - s;\n\t\t\ta[30 + i * 2] = t + s;\n\t\t\ta[31 + i * 2] = enwindow[wp + 7] * w;\n\t\t\twp += 18;\n\t\t\tx1Pos--;\n\t\t\tx2++;\n\t\t}\n\t\t{\n\t\t\tvar s, t, u, v;\n\t\t\tt = x1[x1Pos + -16] * enwindow[wp + -10];\n\t\t\ts = x1[x1Pos + -32] * enwindow[wp + -2];\n\t\t\tt += (x1[x1Pos + -48] - x1[x1Pos + 16]) * enwindow[wp + -9];\n\t\t\ts += x1[x1Pos + -96] * enwindow[wp + -1];\n\t\t\tt += (x1[x1Pos + -80] + x1[x1Pos + 48]) * enwindow[wp + -8];\n\t\t\ts += x1[x1Pos + -160] * enwindow[wp + 0];\n\t\t\tt += (x1[x1Pos + -112] - x1[x1Pos + 80]) * enwindow[wp + -7];\n\t\t\ts += x1[x1Pos + -224] * enwindow[wp + 1];\n\t\t\tt += (x1[x1Pos + -144] + x1[x1Pos + 112]) * enwindow[wp + -6];\n\t\t\ts -= x1[x1Pos + 32] * enwindow[wp + 2];\n\t\t\tt += (x1[x1Pos + -176] - x1[x1Pos + 144]) * enwindow[wp + -5];\n\t\t\ts -= x1[x1Pos + 96] * enwindow[wp + 3];\n\t\t\tt += (x1[x1Pos + -208] + x1[x1Pos + 176]) * enwindow[wp + -4];\n\t\t\ts -= x1[x1Pos + 160] * enwindow[wp + 4];\n\t\t\tt += (x1[x1Pos + -240] - x1[x1Pos + 208]) * enwindow[wp + -3];\n\t\t\ts -= x1[x1Pos + 224];\n\n\t\t\tu = s - t;\n\t\t\tv = s + t;\n\n\t\t\tt = a[14];\n\t\t\ts = a[15] - t;\n\n\t\t\ta[31] = v + t; /* A0 */\n\t\t\ta[30] = u + s; /* A1 */\n\t\t\ta[15] = u - s; /* A2 */\n\t\t\ta[14] = v - t; /* A3 */\n\t\t}\n\t\t{\n\t\t\tvar xr;\n\t\t\txr = a[28] - a[0];\n\t\t\ta[0] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -2 * 18 + 7];\n\t\t\txr = a[29] - a[1];\n\t\t\ta[1] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -2 * 18 + 7];\n\n\t\t\txr = a[26] - a[2];\n\t\t\ta[2] += a[26];\n\t\t\ta[26] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[27] - a[3];\n\t\t\ta[3] += a[27];\n\t\t\ta[27] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = a[24] - a[4];\n\t\t\ta[4] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -6 * 18 + 7];\n\t\t\txr = a[25] - a[5];\n\t\t\ta[5] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -6 * 18 + 7];\n\n\t\t\txr = a[22] - a[6];\n\t\t\ta[6] += a[22];\n\t\t\ta[22] = xr * Util.SQRT2;\n\t\t\txr = a[23] - a[7];\n\t\t\ta[7] += a[23];\n\t\t\ta[23] = xr * Util.SQRT2 - a[7];\n\t\t\ta[7] -= a[6];\n\t\t\ta[22] -= a[7];\n\t\t\ta[23] -= a[22];\n\n\t\t\txr = a[6];\n\t\t\ta[6] = a[31] - xr;\n\t\t\ta[31] = a[31] + xr;\n\t\t\txr = a[7];\n\t\t\ta[7] = a[30] - xr;\n\t\t\ta[30] = a[30] + xr;\n\t\t\txr = a[22];\n\t\t\ta[22] = a[15] - xr;\n\t\t\ta[15] = a[15] + xr;\n\t\t\txr = a[23];\n\t\t\ta[23] = a[14] - xr;\n\t\t\ta[14] = a[14] + xr;\n\n\t\t\txr = a[20] - a[8];\n\t\t\ta[8] += a[20];\n\t\t\ta[20] = xr * enwindow[wp + -10 * 18 + 7];\n\t\t\txr = a[21] - a[9];\n\t\t\ta[9] += a[21];\n\t\t\ta[21] = xr * enwindow[wp + -10 * 18 + 7];\n\n\t\t\txr = a[18] - a[10];\n\t\t\ta[10] += a[18];\n\t\t\ta[18] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[19] - a[11];\n\t\t\ta[11] += a[19];\n\t\t\ta[19] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[16] - a[12];\n\t\t\ta[12] += a[16];\n\t\t\ta[16] = xr * enwindow[wp + -14 * 18 + 7];\n\t\t\txr = a[17] - a[13];\n\t\t\ta[13] += a[17];\n\t\t\ta[17] = xr * enwindow[wp + -14 * 18 + 7];\n\n\t\t\txr = -a[20] + a[24];\n\t\t\ta[20] += a[24];\n\t\t\ta[24] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = -a[21] + a[25];\n\t\t\ta[21] += a[25];\n\t\t\ta[25] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[4] - a[8];\n\t\t\ta[4] += a[8];\n\t\t\ta[8] = xr * enwindow[wp + -12 * 18 + 7];\n\t\t\txr = a[5] - a[9];\n\t\t\ta[5] += a[9];\n\t\t\ta[9] = xr * enwindow[wp + -12 * 18 + 7];\n\n\t\t\txr = a[0] - a[12];\n\t\t\ta[0] += a[12];\n\t\t\ta[12] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[1] - a[13];\n\t\t\ta[1] += a[13];\n\t\t\ta[13] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = a[16] - a[28];\n\t\t\ta[16] += a[28];\n\t\t\ta[28] = xr * enwindow[wp + -4 * 18 + 7];\n\t\t\txr = -a[17] + a[29];\n\t\t\ta[17] += a[29];\n\t\t\ta[29] = xr * enwindow[wp + -4 * 18 + 7];\n\n\t\t\txr = Util.SQRT2 * (a[2] - a[10]);\n\t\t\ta[2] += a[10];\n\t\t\ta[10] = xr;\n\t\t\txr = Util.SQRT2 * (a[3] - a[11]);\n\t\t\ta[3] += a[11];\n\t\t\ta[11] = xr;\n\t\t\txr = Util.SQRT2 * (-a[18] + a[26]);\n\t\t\ta[18] += a[26];\n\t\t\ta[26] = xr - a[18];\n\t\t\txr = Util.SQRT2 * (-a[19] + a[27]);\n\t\t\ta[19] += a[27];\n\t\t\ta[27] = xr - a[19];\n\n\t\t\txr = a[2];\n\t\t\ta[19] -= a[3];\n\t\t\ta[3] -= xr;\n\t\t\ta[2] = a[31] - xr;\n\t\t\ta[31] += xr;\n\t\t\txr = a[3];\n\t\t\ta[11] -= a[19];\n\t\t\ta[18] -= xr;\n\t\t\ta[3] = a[30] - xr;\n\t\t\ta[30] += xr;\n\t\t\txr = a[18];\n\t\t\ta[27] -= a[11];\n\t\t\ta[19] -= xr;\n\t\t\ta[18] = a[15] - xr;\n\t\t\ta[15] += xr;\n\n\t\t\txr = a[19];\n\t\t\ta[10] -= xr;\n\t\t\ta[19] = a[14] - xr;\n\t\t\ta[14] += xr;\n\t\t\txr = a[10];\n\t\t\ta[11] -= xr;\n\t\t\ta[10] = a[23] - xr;\n\t\t\ta[23] += xr;\n\t\t\txr = a[11];\n\t\t\ta[26] -= xr;\n\t\t\ta[11] = a[22] - xr;\n\t\t\ta[22] += xr;\n\t\t\txr = a[26];\n\t\t\ta[27] -= xr;\n\t\t\ta[26] = a[7] - xr;\n\t\t\ta[7] += xr;\n\n\t\t\txr = a[27];\n\t\t\ta[27] = a[6] - xr;\n\t\t\ta[6] += xr;\n\n\t\t\txr = Util.SQRT2 * (a[0] - a[4]);\n\t\t\ta[0] += a[4];\n\t\t\ta[4] = xr;\n\t\t\txr = Util.SQRT2 * (a[1] - a[5]);\n\t\t\ta[1] += a[5];\n\t\t\ta[5] = xr;\n\t\t\txr = Util.SQRT2 * (a[16] - a[20]);\n\t\t\ta[16] += a[20];\n\t\t\ta[20] = xr;\n\t\t\txr = Util.SQRT2 * (a[17] - a[21]);\n\t\t\ta[17] += a[21];\n\t\t\ta[21] = xr;\n\n\t\t\txr = -Util.SQRT2 * (a[8] - a[12]);\n\t\t\ta[8] += a[12];\n\t\t\ta[12] = xr - a[8];\n\t\t\txr = -Util.SQRT2 * (a[9] - a[13]);\n\t\t\ta[9] += a[13];\n\t\t\ta[13] = xr - a[9];\n\t\t\txr = -Util.SQRT2 * (a[25] - a[29]);\n\t\t\ta[25] += a[29];\n\t\t\ta[29] = xr - a[25];\n\t\t\txr = -Util.SQRT2 * (a[24] + a[28]);\n\t\t\ta[24] -= a[28];\n\t\t\ta[28] = xr - a[24];\n\n\t\t\txr = a[24] - a[16];\n\t\t\ta[24] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\n\t\t\txr = a[25] - a[17];\n\t\t\ta[25] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[17] - a[1];\n\t\t\ta[17] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[1] - a[0];\n\t\t\ta[1] = xr;\n\t\t\txr = a[16] - xr;\n\t\t\ta[16] = xr;\n\t\t\txr = a[17] - xr;\n\t\t\ta[17] = xr;\n\t\t\txr = a[8] - xr;\n\t\t\ta[8] = xr;\n\t\t\txr = a[9] - xr;\n\t\t\ta[9] = xr;\n\t\t\txr = a[24] - xr;\n\t\t\ta[24] = xr;\n\t\t\txr = a[25] - xr;\n\t\t\ta[25] = xr;\n\t\t\txr = a[4] - xr;\n\t\t\ta[4] = xr;\n\t\t\txr = a[5] - xr;\n\t\t\ta[5] = xr;\n\t\t\txr = a[20] - xr;\n\t\t\ta[20] = xr;\n\t\t\txr = a[21] - xr;\n\t\t\ta[21] = xr;\n\t\t\txr = a[12] - xr;\n\t\t\ta[12] = xr;\n\t\t\txr = a[13] - xr;\n\t\t\ta[13] = xr;\n\t\t\txr = a[28] - xr;\n\t\t\ta[28] = xr;\n\t\t\txr = a[29] - xr;\n\t\t\ta[29] = xr;\n\n\t\t\txr = a[0];\n\t\t\ta[0] += a[31];\n\t\t\ta[31] -= xr;\n\t\t\txr = a[1];\n\t\t\ta[1] += a[30];\n\t\t\ta[30] -= xr;\n\t\t\txr = a[16];\n\t\t\ta[16] += a[15];\n\t\t\ta[15] -= xr;\n\t\t\txr = a[17];\n\t\t\ta[17] += a[14];\n\t\t\ta[14] -= xr;\n\t\t\txr = a[8];\n\t\t\ta[8] += a[23];\n\t\t\ta[23] -= xr;\n\t\t\txr = a[9];\n\t\t\ta[9] += a[22];\n\t\t\ta[22] -= xr;\n\t\t\txr = a[24];\n\t\t\ta[24] += a[7];\n\t\t\ta[7] -= xr;\n\t\t\txr = a[25];\n\t\t\ta[25] += a[6];\n\t\t\ta[6] -= xr;\n\t\t\txr = a[4];\n\t\t\ta[4] += a[27];\n\t\t\ta[27] -= xr;\n\t\t\txr = a[5];\n\t\t\ta[5] += a[26];\n\t\t\ta[26] -= xr;\n\t\t\txr = a[20];\n\t\t\ta[20] += a[11];\n\t\t\ta[11] -= xr;\n\t\t\txr = a[21];\n\t\t\ta[21] += a[10];\n\t\t\ta[10] -= xr;\n\t\t\txr = a[12];\n\t\t\ta[12] += a[19];\n\t\t\ta[19] -= xr;\n\t\t\txr = a[13];\n\t\t\ta[13] += a[18];\n\t\t\ta[18] -= xr;\n\t\t\txr = a[28];\n\t\t\ta[28] += a[3];\n\t\t\ta[3] -= xr;\n\t\t\txr = a[29];\n\t\t\ta[29] += a[2];\n\t\t\ta[2] -= xr;\n\t\t}\n\t}\n\n\t/**\n\t * Function: Calculation of the MDCT In the case of long blocks (type 0,1,3)\n\t * there are 36 coefficents in the time domain and 18 in the frequency\n\t * domain.<BR>\n\t * In the case of short blocks (type 2) there are 3 transformations with\n\t * short length. This leads to 12 coefficents in the time and 6 in the\n\t * frequency domain. In this case the results are stored side by side in the\n\t * vector out[].\n\t *\n\t * New layer3\n\t */\n\tfunction mdct_short(inout, inoutPos) {\n\t\tfor (var l = 0; l < 3; l++) {\n\t\t\tvar tc0, tc1, tc2, ts0, ts1, ts2;\n\n\t\t\tts0 = inout[inoutPos + 2 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t- inout[inoutPos + 5 * 3];\n\t\t\ttc0 = inout[inoutPos + 0 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t- inout[inoutPos + 3 * 3];\n\t\t\ttc1 = ts0 + tc0;\n\t\t\ttc2 = ts0 - tc0;\n\n\t\t\tts0 = inout[inoutPos + 5 * 3] * win[Encoder.SHORT_TYPE][0]\n\t\t\t\t\t+ inout[inoutPos + 2 * 3];\n\t\t\ttc0 = inout[inoutPos + 3 * 3] * win[Encoder.SHORT_TYPE][2]\n\t\t\t\t\t+ inout[inoutPos + 0 * 3];\n\t\t\tts1 = ts0 + tc0;\n\t\t\tts2 = -ts0 + tc0;\n\n\t\t\ttc0 = (inout[inoutPos + 1 * 3] * win[Encoder.SHORT_TYPE][1] - inout[inoutPos + 4 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tts0 = (inout[inoutPos + 4 * 3] * win[Encoder.SHORT_TYPE][1] + inout[inoutPos + 1 * 3]) * 2.069978111953089e-11;\n\t\t\t/*\n\t\t\t * tritab_s [ 1 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 0] = tc1 * 1.907525191737280e-11 + tc0;\n\t\t\t/*\n\t\t\t * tritab_s[ 2 ]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 5] = -ts1 * 1.907525191737280e-11 + ts0;\n\t\t\t/*\n\t\t\t * tritab_s[0 ]\n\t\t\t */\n\t\t\ttc2 = tc2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 2]\n\t\t\t */\n\t\t\tts1 = ts1 * 0.5 * 1.907525191737281e-11 + ts0;\n\t\t\tinout[inoutPos + 3 * 1] = tc2 - ts1;\n\t\t\tinout[inoutPos + 3 * 2] = tc2 + ts1;\n\n\t\t\ttc1 = tc1 * 0.5 * 1.907525191737281e-11 - tc0;\n\t\t\tts2 = ts2 * 0.86602540378443870761 * 1.907525191737281e-11;\n\t\t\t/*\n\t\t\t * tritab_s[ 0]\n\t\t\t */\n\t\t\tinout[inoutPos + 3 * 3] = tc1 + ts2;\n\t\t\tinout[inoutPos + 3 * 4] = tc1 - ts2;\n\n\t\t\tinoutPos++;\n\t\t}\n\t}\n\n\tfunction mdct_long(out, outPos, _in) {\n\t\tvar ct, st;\n\t\t{\n\t\t\tvar tc1, tc2, tc3, tc4, ts5, ts6, ts7, ts8;\n\t\t\t/* 1,2, 5,6, 9,10, 13,14, 17 */\n\t\t\ttc1 = _in[17] - _in[9];\n\t\t\ttc3 = _in[15] - _in[11];\n\t\t\ttc4 = _in[14] - _in[12];\n\t\t\tts5 = _in[0] + _in[8];\n\t\t\tts6 = _in[1] + _in[7];\n\t\t\tts7 = _in[2] + _in[6];\n\t\t\tts8 = _in[3] + _in[5];\n\n\t\t\tout[outPos + 17] = (ts5 + ts7 - ts8) - (ts6 - _in[4]);\n\t\t\tst = (ts5 + ts7 - ts8) * cx[12 + 7] + (ts6 - _in[4]);\n\t\t\tct = (tc1 - tc3 - tc4) * cx[12 + 6];\n\t\t\tout[outPos + 5] = ct + st;\n\t\t\tout[outPos + 6] = ct - st;\n\n\t\t\ttc2 = (_in[16] - _in[10]) * cx[12 + 6];\n\t\t\tts6 = ts6 * cx[12 + 7] + _in[4];\n\t\t\tct = tc1 * cx[12 + 0] + tc2 + tc3 * cx[12 + 1] + tc4 * cx[12 + 2];\n\t\t\tst = -ts5 * cx[12 + 4] + ts6 - ts7 * cx[12 + 5] + ts8 * cx[12 + 3];\n\t\t\tout[outPos + 1] = ct + st;\n\t\t\tout[outPos + 2] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 1] - tc2 - tc3 * cx[12 + 2] + tc4 * cx[12 + 0];\n\t\t\tst = -ts5 * cx[12 + 5] + ts6 - ts7 * cx[12 + 3] + ts8 * cx[12 + 4];\n\t\t\tout[outPos + 9] = ct + st;\n\t\t\tout[outPos + 10] = ct - st;\n\n\t\t\tct = tc1 * cx[12 + 2] - tc2 + tc3 * cx[12 + 0] - tc4 * cx[12 + 1];\n\t\t\tst = ts5 * cx[12 + 3] - ts6 + ts7 * cx[12 + 4] - ts8 * cx[12 + 5];\n\t\t\tout[outPos + 13] = ct + st;\n\t\t\tout[outPos + 14] = ct - st;\n\t\t}\n\t\t{\n\t\t\tvar ts1, ts2, ts3, ts4, tc5, tc6, tc7, tc8;\n\n\t\t\tts1 = _in[8] - _in[0];\n\t\t\tts3 = _in[6] - _in[2];\n\t\t\tts4 = _in[5] - _in[3];\n\t\t\ttc5 = _in[17] + _in[9];\n\t\t\ttc6 = _in[16] + _in[10];\n\t\t\ttc7 = _in[15] + _in[11];\n\t\t\ttc8 = _in[14] + _in[12];\n\n\t\t\tout[outPos + 0] = (tc5 + tc7 + tc8) + (tc6 + _in[13]);\n\t\t\tct = (tc5 + tc7 + tc8) * cx[12 + 7] - (tc6 + _in[13]);\n\t\t\tst = (ts1 - ts3 + ts4) * cx[12 + 6];\n\t\t\tout[outPos + 11] = ct + st;\n\t\t\tout[outPos + 12] = ct - st;\n\n\t\t\tts2 = (_in[7] - _in[1]) * cx[12 + 6];\n\t\t\ttc6 = _in[13] - tc6 * cx[12 + 7];\n\t\t\tct = tc5 * cx[12 + 3] - tc6 + tc7 * cx[12 + 4] + tc8 * cx[12 + 5];\n\t\t\tst = ts1 * cx[12 + 2] + ts2 + ts3 * cx[12 + 0] + ts4 * cx[12 + 1];\n\t\t\tout[outPos + 3] = ct + st;\n\t\t\tout[outPos + 4] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 5] + tc6 - tc7 * cx[12 + 3] - tc8 * cx[12 + 4];\n\t\t\tst = ts1 * cx[12 + 1] + ts2 - ts3 * cx[12 + 2] - ts4 * cx[12 + 0];\n\t\t\tout[outPos + 7] = ct + st;\n\t\t\tout[outPos + 8] = ct - st;\n\n\t\t\tct = -tc5 * cx[12 + 4] + tc6 - tc7 * cx[12 + 5] - tc8 * cx[12 + 3];\n\t\t\tst = ts1 * cx[12 + 0] - ts2 + ts3 * cx[12 + 1] - ts4 * cx[12 + 2];\n\t\t\tout[outPos + 15] = ct + st;\n\t\t\tout[outPos + 16] = ct - st;\n\t\t}\n\t}\n\n\tthis.mdct_sub48 = function(gfc, w0, w1) {\n\t\tvar wk = w0;\n\t\tvar wkPos = 286;\n\t\t/* thinking cache performance, ch->gr loop is better than gr->ch loop */\n\t\tfor (var ch = 0; ch < gfc.channels_out; ch++) {\n\t\t\tfor (var gr = 0; gr < gfc.mode_gr; gr++) {\n\t\t\t\tvar band;\n\t\t\t\tvar gi = (gfc.l3_side.tt[gr][ch]);\n\t\t\t\tvar mdct_enc = gi.xr;\n\t\t\t\tvar mdct_encPos = 0;\n\t\t\t\tvar samp = gfc.sb_sample[ch][1 - gr];\n\t\t\t\tvar sampPos = 0;\n\n\t\t\t\tfor (var k = 0; k < 18 / 2; k++) {\n\t\t\t\t\twindow_subband(wk, wkPos, samp[sampPos]);\n\t\t\t\t\twindow_subband(wk, wkPos + 32, samp[sampPos + 1]);\n\t\t\t\t\tsampPos += 2;\n\t\t\t\t\twkPos += 64;\n\t\t\t\t\t/*\n\t\t\t\t\t * Compensate for inversion in the analysis filter\n\t\t\t\t\t */\n\t\t\t\t\tfor (band = 1; band < 32; band += 2) {\n\t\t\t\t\t\tsamp[sampPos - 1][band] *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Perform imdct of 18 previous subband samples + 18 current\n\t\t\t\t * subband samples\n\t\t\t\t */\n\t\t\t\tfor (band = 0; band < 32; band++, mdct_encPos += 18) {\n\t\t\t\t\tvar type = gi.block_type;\n\t\t\t\t\tvar band0 = gfc.sb_sample[ch][gr];\n\t\t\t\t\tvar band1 = gfc.sb_sample[ch][1 - gr];\n\t\t\t\t\tif (gi.mixed_block_flag != 0 && band < 2)\n\t\t\t\t\t\ttype = 0;\n\t\t\t\t\tif (gfc.amp_filter[band] < 1e-12) {\n\t\t\t\t\t\tArrays.fill(mdct_enc, mdct_encPos + 0,\n\t\t\t\t\t\t\t\tmdct_encPos + 18, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (gfc.amp_filter[band] < 1.0) {\n\t\t\t\t\t\t\tfor (var k = 0; k < 18; k++)\n\t\t\t\t\t\t\t\tband1[k][order[band]] *= gfc.amp_filter[band];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (type == Encoder.SHORT_TYPE) {\n\t\t\t\t\t\t\tfor (var k = -NS / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar w = win[Encoder.SHORT_TYPE][k + 3];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 9] = band0[9 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 18] = band0[14 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band0[15 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 10] = band0[15 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band0[14 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 19] = band1[2 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[3 + k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 11] = band1[3 + k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w - band1[2 - k][order[band]];\n\t\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k * 3 + 20] = band1[8 - k][order[band]]\n\t\t\t\t\t\t\t\t\t\t* w + band1[9 + k][order[band]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmdct_short(mdct_enc, mdct_encPos);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar work = new_float(18);\n\t\t\t\t\t\t\tfor (var k = -NL / 4; k < 0; k++) {\n\t\t\t\t\t\t\t\tvar a, b;\n\t\t\t\t\t\t\t\ta = win[type][k + 27]\n\t\t\t\t\t\t\t\t\t\t* band1[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t+ win[type][k + 36]\n\t\t\t\t\t\t\t\t\t\t* band1[8 - k][order[band]];\n\t\t\t\t\t\t\t\tb = win[type][k + 9]\n\t\t\t\t\t\t\t\t\t\t* band0[k + 9][order[band]]\n\t\t\t\t\t\t\t\t\t\t- win[type][k + 18]\n\t\t\t\t\t\t\t\t\t\t* band0[8 - k][order[band]];\n\t\t\t\t\t\t\t\twork[k + 9] = a - b * tantab_l[3 + k + 9];\n\t\t\t\t\t\t\t\twork[k + 18] = a * tantab_l[3 + k + 9] + b;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmdct_long(mdct_enc, mdct_encPos, work);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\t * Perform aliasing reduction butterfly\n\t\t\t\t\t */\n\t\t\t\t\tif (type != Encoder.SHORT_TYPE && band != 0) {\n\t\t\t\t\t\tfor (var k = 7; k >= 0; --k) {\n\t\t\t\t\t\t\tvar bu, bd;\n\t\t\t\t\t\t\tbu = mdct_enc[mdct_encPos + k] * ca[20 + k]\n\t\t\t\t\t\t\t\t\t+ mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* cs[28 + k];\n\t\t\t\t\t\t\tbd = mdct_enc[mdct_encPos + k] * cs[28 + k]\n\t\t\t\t\t\t\t\t\t- mdct_enc[mdct_encPos + -1 - k]\n\t\t\t\t\t\t\t\t\t* ca[20 + k];\n\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + -1 - k] = bu;\n\t\t\t\t\t\t\tmdct_enc[mdct_encPos + k] = bd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twk = w1;\n\t\t\twkPos = 286;\n\t\t\tif (gfc.mode_gr == 1) {\n\t\t\t\tfor (var i = 0; i < 18; i++) {\n\t\t\t\t\tSystem.arraycopy(gfc.sb_sample[ch][1][i], 0,\n\t\t\t\t\t\t\tgfc.sb_sample[ch][0][i], 0, 32);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = NewMDCT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lamejs/src/js/NewMDCT.js\n// module id = zEpL\n// module chunks = 0"],"sourceRoot":""}